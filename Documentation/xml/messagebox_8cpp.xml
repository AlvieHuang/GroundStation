<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="messagebox_8cpp" kind="file" language="C++">
    <compoundname>messagebox.cpp</compoundname>
    <includes refid="messagebox_8h" local="yes">messagebox.h</includes>
    <incdepgraph>
      <node id="1820">
        <label>QObject</label>
      </node>
      <node id="1826">
        <label>ackpacket.h</label>
        <link refid="ackpacket_8h"/>
        <childnode refid="1827" relation="include">
        </childnode>
        <childnode refid="1828" relation="include">
        </childnode>
      </node>
      <node id="1813">
        <label>QList</label>
      </node>
      <node id="1815">
        <label>stdint.h</label>
      </node>
      <node id="1834">
        <label>telemetrypacket.h</label>
        <link refid="telemetrypacket_8h"/>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1828" relation="include">
        </childnode>
      </node>
      <node id="1812">
        <label>QPair</label>
      </node>
      <node id="1831">
        <label>string</label>
      </node>
      <node id="1816">
        <label>qcomboboxdelegate.h</label>
        <link refid="qcomboboxdelegate_8h"/>
        <childnode refid="1817" relation="include">
        </childnode>
        <childnode refid="1818" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1821" relation="include">
        </childnode>
        <childnode refid="1822" relation="include">
        </childnode>
        <childnode refid="1823" relation="include">
        </childnode>
      </node>
      <node id="1819">
        <label>QModelIndex</label>
      </node>
      <node id="1833">
        <label>string.h</label>
      </node>
      <node id="1814">
        <label>QTime</label>
      </node>
      <node id="1811">
        <label>QApplication</label>
      </node>
      <node id="1825">
        <label>QValidator</label>
      </node>
      <node id="1810">
        <label>vector</label>
      </node>
      <node id="1822">
        <label>QLineEdit</label>
      </node>
      <node id="1828">
        <label>packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="1829" relation="include">
        </childnode>
        <childnode refid="1827" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
      </node>
      <node id="1821">
        <label>QSize</label>
      </node>
      <node id="1829">
        <label>time.h</label>
      </node>
      <node id="1818">
        <label>QComboBox</label>
      </node>
      <node id="1809">
        <label>iostream</label>
      </node>
      <node id="1807">
        <label>C:/Users/Roman/Documents/Mygs/GroundStation/GS/messagebox.cpp</label>
        <link refid="messagebox.cpp"/>
        <childnode refid="1808" relation="include">
        </childnode>
      </node>
      <node id="1817">
        <label>QItemDelegate</label>
      </node>
      <node id="1824">
        <label>QDoubleValidator</label>
      </node>
      <node id="1808">
        <label>messagebox.h</label>
        <link refid="messagebox_8h"/>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1826" relation="include">
        </childnode>
        <childnode refid="1830" relation="include">
        </childnode>
        <childnode refid="1832" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
      </node>
      <node id="1823">
        <label>mapvalidator.h</label>
        <link refid="mapvalidator_8h"/>
        <childnode refid="1824" relation="include">
        </childnode>
        <childnode refid="1825" relation="include">
        </childnode>
      </node>
      <node id="1832">
        <label>infopacket.h</label>
        <link refid="infopacket_8h"/>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1833" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1828" relation="include">
        </childnode>
      </node>
      <node id="1827">
        <label>stdio.h</label>
      </node>
      <node id="1830">
        <label>actionpacket.h</label>
        <link refid="actionpacket_8h"/>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1828" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="messagebox_8cpp_1a9408123ee7d78084c7c8a4ee65e6266f" prot="public" static="no">
        <name>UAV_MESSAGEBOX_CPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Roman/Documents/Mygs/GroundStation/GS/messagebox.cpp" line="2" column="9" bodyfile="C:/Users/Roman/Documents/Mygs/GroundStation/GS/messagebox.cpp" bodystart="2" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="messagebox_8cpp_1a99b81aa18e54261ff2362dadf4494ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void recieve_packet</definition>
        <argsstring>(Protocol::Packet *packet)</argsstring>
        <name>recieve_packet</name>
        <param>
          <type><ref refid="class_protocol_1_1_packet" kindref="compound">Protocol::Packet</ref> *</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Roman/Documents/Mygs/GroundStation/GS/messagebox.cpp" line="142" column="1" bodyfile="C:/Users/Roman/Documents/Mygs/GroundStation/GS/messagebox.cpp" bodystart="142" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>UAV_MESSAGEBOX_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UAV_MESSAGEBOX_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="messagebox_8h" kindref="compound">messagebox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="classmessagebox_1aa1982e07048de340df52d2a5f37dd8ac" kindref="member">messagebox::messagebox</ref>()</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>box<sp/>succesfully<sp/>created&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmessagebox_1ac738a854bbbcdc5be4fd4df476db724b" kindref="member">timer</ref><sp/>=<sp/>QTime();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><ref refid="classmessagebox_1ac738a854bbbcdc5be4fd4df476db724b" kindref="member">timer</ref>.start();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Timer<sp/>started<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classmessagebox_1ac738a854bbbcdc5be4fd4df476db724b" kindref="member">timer</ref>.currentTime().msec()&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1ad5e6c9a2d407ebc95415e6ddeb91aba3" kindref="member">messagebox::load_ack_packet</ref>(uint8_t*<sp/><ref refid="_packet_handler_8cpp_1aae7966d231efc476384b8aa9c25980f9" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a356a1119d888a5aea5a70b67bce0132b" kindref="member">addAckPacket</ref>(<ref refid="class_protocol_1_1_ack_packet" kindref="compound">Protocol::AckPacket</ref>(buffer,<sp/>len));</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1afa0a64c35c27e21fab6cbee8055341b1" kindref="member">messagebox::load_action_packet</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spd){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_protocol_1_1_waypoint" kindref="compound">Protocol::Waypoint</ref><sp/>wp;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1a29b254ffa54a87da980aa2d0a6dd8e1e" kindref="member">lat</ref><sp/>=<sp/>lat;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1ac5f0dd73ea290deb60ea7464b114faa7" kindref="member">lon</ref><sp/>=<sp/>lon;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1a69b7b1c0eeb8629e07fc929a902a91aa" kindref="member">alt</ref><sp/>=<sp/>alt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1aa92f0aab1641e5bdb5ea7a9b9d6994ad" kindref="member">speed</ref><sp/>=<sp/>spd;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a75d62bfa9db5b55a60b9e2e0fa164c81" kindref="member">addActionPacket</ref>(<ref refid="class_protocol_1_1_action_packet" kindref="compound">Protocol::ActionPacket</ref>());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>actionPackets.back().SetAction(at);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1ad0e2aac1d4346b025a5e668b33632976" kindref="member">actionPackets_incoming</ref>.back().SetWaypoint(wp);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1afa0a64c35c27e21fab6cbee8055341b1" kindref="member">messagebox::load_action_packet</ref>(<ref refid="namespace_protocol_1a95f2e35dc2d8d920f0d7ddaaf122c3b9" kindref="member">Protocol::ActionType</ref><sp/>atype,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spd){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_protocol_1_1_waypoint" kindref="compound">Protocol::Waypoint</ref><sp/>wp;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1a29b254ffa54a87da980aa2d0a6dd8e1e" kindref="member">lat</ref><sp/>=<sp/>lat;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1ac5f0dd73ea290deb60ea7464b114faa7" kindref="member">lon</ref><sp/>=<sp/>lon;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1a69b7b1c0eeb8629e07fc929a902a91aa" kindref="member">alt</ref><sp/>=<sp/>alt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1aa92f0aab1641e5bdb5ea7a9b9d6994ad" kindref="member">speed</ref><sp/>=<sp/>spd;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a75d62bfa9db5b55a60b9e2e0fa164c81" kindref="member">addActionPacket</ref>(<ref refid="class_protocol_1_1_action_packet" kindref="compound">Protocol::ActionPacket</ref>());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1ad0e2aac1d4346b025a5e668b33632976" kindref="member">actionPackets_incoming</ref>.back().SetAction(atype);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1ad0e2aac1d4346b025a5e668b33632976" kindref="member">actionPackets_incoming</ref>.back().SetWaypoint(wp);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a545d9441dccf14adbea8e859628d6425" kindref="member">messagebox::load_outAction_packets</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spd)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_protocol_1_1_waypoint" kindref="compound">Protocol::Waypoint</ref><sp/>wp;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1a29b254ffa54a87da980aa2d0a6dd8e1e" kindref="member">lat</ref><sp/>=<sp/>lat;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1ac5f0dd73ea290deb60ea7464b114faa7" kindref="member">lon</ref><sp/>=<sp/>lon;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1a69b7b1c0eeb8629e07fc929a902a91aa" kindref="member">alt</ref><sp/>=<sp/>alt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>wp.<ref refid="struct_protocol_1_1_waypoint_1aa92f0aab1641e5bdb5ea7a9b9d6994ad" kindref="member">speed</ref><sp/>=<sp/>spd;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1ad8dd259b5b34d30b241f27172a255575" kindref="member">addOutActionPacket</ref>(<ref refid="class_protocol_1_1_action_packet" kindref="compound">Protocol::ActionPacket</ref>());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a78e755e984640f5d46e76a5274e3039e" kindref="member">outActionPackets</ref>.back().SetWaypoint(wp);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a6128a1a53fbba888dccfcab5a5fafa1f" kindref="member">messagebox::load_info_packet</ref>(std::string<sp/>other){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1aa7a826742dd2a22376eaf787d510f064" kindref="member">addInfoPacket</ref>(<ref refid="class_protocol_1_1_info_packet" kindref="compound">Protocol::InfoPacket</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1aa06ba794e434f5714a622ca94c121d7a" kindref="member">infoPackets_incoming</ref>.back().SetOther(other);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a0e3beabe499e7aade0e769ff17ced30d" kindref="member">messagebox::load_telem_packet</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>.push_back(<ref refid="class_protocol_1_1_telemetry_packet" kindref="compound">Protocol::TelemetryPacket</ref>());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>.back().SetLocation(lat,<sp/>lon);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a0e3beabe499e7aade0e769ff17ced30d" kindref="member">messagebox::load_telem_packet</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heading){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a27ac98af342131cd148fb4ed2261631f" kindref="member">addTelemetryPacket</ref>(<ref refid="class_protocol_1_1_telemetry_packet" kindref="compound">Protocol::TelemetryPacket</ref>());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>.back().SetVelocity(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>.back().SetOrientation(p,<sp/>r,<sp/>yaw);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>.back().SetLocation(lat,<sp/>lon,<sp/>alt);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>.back().SetHeading(heading);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1ac2463eee5d4c1e5d693f8a96cca0e00f" kindref="member">messagebox::recieve_initial_info</ref>(<ref refid="class_protocol_1_1_info_packet" kindref="compound">Protocol::InfoPacket</ref><sp/>intip){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>initial_timestamp<sp/>=<sp/>intip.<ref refid="class_protocol_1_1_packet_1acbe4f1b9f973d14097814d16fb0cd83a" kindref="member">get_timestamp</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1aea3ed46bcf2e14a03a19bd5fb639d9a5" kindref="member">timestamp_offset</ref><sp/>=<sp/>initial_timestamp<sp/>-<sp/>((uint32_t)<ref refid="classmessagebox_1ac738a854bbbcdc5be4fd4df476db724b" kindref="member">timer</ref>.elapsed());</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">std::vector&lt;Protocol::AckPacket&gt;<sp/><ref refid="classmessagebox_1abe5152230ef5e89e0839d9dd866590e5" kindref="member">messagebox::get_ack_packets</ref>(){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a7adbd15e5b2a9dbf6dad7c16ac18d305" kindref="member">ackPackets_incoming</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">std::vector&lt;Protocol::ActionPacket&gt;<sp/><ref refid="classmessagebox_1afd08c7f717357ee71a666720ff6bb9bc" kindref="member">messagebox::get_action_packets</ref>(){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1ad0e2aac1d4346b025a5e668b33632976" kindref="member">actionPackets_incoming</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">std::vector&lt;Protocol::InfoPacket&gt;<sp/><ref refid="classmessagebox_1a15a6793bc31aa9bb080c9fbcea14e1af" kindref="member">messagebox::get_info_packets</ref>(){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1aa06ba794e434f5714a622ca94c121d7a" kindref="member">infoPackets_incoming</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">std::vector&lt;Protocol::TelemetryPacket&gt;<sp/><ref refid="classmessagebox_1a58df2b6675cad37e6f31b2bc25bcfb0e" kindref="member">messagebox::get_telem_packets</ref>(){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">std::vector&lt;Protocol::AckPacket&gt;<sp/><ref refid="classmessagebox_1aa19eb7d103c82c6edabe95052d71e957" kindref="member">messagebox::get_out_ack_packets</ref>(){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a06c992c37c73627ebbd5120c68e32657" kindref="member">outAckPackets</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">std::vector&lt;Protocol::ActionPacket&gt;<sp/><ref refid="classmessagebox_1a49302f9e97d15853ab0bd4293cda3603" kindref="member">messagebox::get_out_action_packets</ref>(){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a78e755e984640f5d46e76a5274e3039e" kindref="member">outActionPackets</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">std::vector&lt;Protocol::InfoPacket&gt;<sp/><ref refid="classmessagebox_1a8630b30babf0555dc17d150ccfe08d8f" kindref="member">messagebox::get_out_info_packets</ref>(){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a6d8a49db801fc38ed89c3438c1451f8b" kindref="member">outInfoPackets</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">std::vector&lt;Protocol::TelemetryPacket&gt;<sp/><ref refid="classmessagebox_1a5ab4ee4ec8c63b6e4936fed1884fbd87" kindref="member">messagebox::get_out_telem_packets</ref>(){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a6ab4d9acb5406325a0ae0b6e5de170db" kindref="member">outTelemPackets</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">uint32_t<sp/><ref refid="classmessagebox_1a4a1e389ec5b0eb7d98b0c65e128bf3f7" kindref="member">messagebox::gs_to_uav_timestamp</ref>(){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)<ref refid="classmessagebox_1ac738a854bbbcdc5be4fd4df476db724b" kindref="member">timer</ref>.elapsed())<sp/>-<sp/><ref refid="classmessagebox_1aea3ed46bcf2e14a03a19bd5fb639d9a5" kindref="member">timestamp_offset</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a356a1119d888a5aea5a70b67bce0132b" kindref="member">messagebox::addAckPacket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_protocol_1_1_ack_packet" kindref="compound">Protocol::AckPacket</ref>&amp;<sp/>ackPacket)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a7adbd15e5b2a9dbf6dad7c16ac18d305" kindref="member">ackPackets_incoming</ref>.push_back(ackPacket);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a75d62bfa9db5b55a60b9e2e0fa164c81" kindref="member">messagebox::addActionPacket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_protocol_1_1_action_packet" kindref="compound">Protocol::ActionPacket</ref>&amp;<sp/>actionPacket)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1ad0e2aac1d4346b025a5e668b33632976" kindref="member">actionPackets_incoming</ref>.push_back(actionPacket);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1ad8dd259b5b34d30b241f27172a255575" kindref="member">messagebox::addOutActionPacket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_protocol_1_1_action_packet" kindref="compound">Protocol::ActionPacket</ref><sp/>&amp;actionPacket)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a78e755e984640f5d46e76a5274e3039e" kindref="member">outActionPackets</ref>.push_back(actionPacket);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1a27ac98af342131cd148fb4ed2261631f" kindref="member">messagebox::addTelemetryPacket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_protocol_1_1_telemetry_packet" kindref="compound">Protocol::TelemetryPacket</ref>&amp;<sp/>telemPacket)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1a0b04ce0c8a621b70c6dc3ce302f0e753" kindref="member">telemetryPackets_incoming</ref>.push_back(telemPacket);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmessagebox_1aa7a826742dd2a22376eaf787d510f064" kindref="member">messagebox::addInfoPacket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_protocol_1_1_info_packet" kindref="compound">Protocol::InfoPacket</ref>&amp;<sp/>infoPacket)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmessagebox_1aa06ba794e434f5714a622ca94c121d7a" kindref="member">infoPackets_incoming</ref>.push_back(infoPacket);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="messagebox_8cpp_1a99b81aa18e54261ff2362dadf4494ccc" kindref="member">recieve_packet</ref>(<ref refid="class_protocol_1_1_packet" kindref="compound">Protocol::Packet</ref><sp/>*packet){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(packet-&gt;<ref refid="class_protocol_1_1_packet_1a3c159ff945d95102ee2a2ba0b93d05d8" kindref="member">get_type</ref>()==<ref refid="namespace_protocol_1a0704fe3e36f425dc9805a6dcc1ea1b75a004bf6c9a40003140292e97330236c53" kindref="member">Protocol::PacketType::Action</ref>?</highlight><highlight class="stringliteral">&quot;Action&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;Not<sp/>Action&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>UAV_MESSAGEBOX_CPP</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Roman/Documents/Mygs/GroundStation/GS/messagebox.cpp"/>
  </compounddef>
</doxygen>
