<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="qcustomplot_8cpp" kind="file" language="C++">
    <compoundname>qcustomplot.cpp</compoundname>
    <includes refid="qcustomplot_8h" local="yes">qcustomplot.h</includes>
    <incdepgraph>
      <node id="2854">
        <label>QtNumeric</label>
      </node>
      <node id="2848">
        <label>QVector2D</label>
      </node>
      <node id="2853">
        <label>limits</label>
      </node>
      <node id="2833">
        <label>C:/Users/Roman/Documents/Mygs/GroundStation/GS/qcustomplot.cpp</label>
        <link refid="qcustomplot.cpp"/>
        <childnode refid="2834" relation="include">
        </childnode>
      </node>
      <node id="2844">
        <label>QDateTime</label>
      </node>
      <node id="2835">
        <label>QObject</label>
      </node>
      <node id="2849">
        <label>QStack</label>
      </node>
      <node id="2852">
        <label>qmath.h</label>
      </node>
      <node id="2846">
        <label>QFlags</label>
      </node>
      <node id="2834">
        <label>qcustomplot.h</label>
        <link refid="qcustomplot_8h"/>
        <childnode refid="2835" relation="include">
        </childnode>
        <childnode refid="2836" relation="include">
        </childnode>
        <childnode refid="2837" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2839" relation="include">
        </childnode>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2841" relation="include">
        </childnode>
        <childnode refid="2842" relation="include">
        </childnode>
        <childnode refid="2843" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2845" relation="include">
        </childnode>
        <childnode refid="2846" relation="include">
        </childnode>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2848" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2850" relation="include">
        </childnode>
        <childnode refid="2851" relation="include">
        </childnode>
        <childnode refid="2852" relation="include">
        </childnode>
        <childnode refid="2853" relation="include">
        </childnode>
        <childnode refid="2854" relation="include">
        </childnode>
        <childnode refid="2855" relation="include">
        </childnode>
      </node>
      <node id="2850">
        <label>QCache</label>
      </node>
      <node id="2838">
        <label>QPainter</label>
      </node>
      <node id="2840">
        <label>QMouseEvent</label>
      </node>
      <node id="2855">
        <label>QtPrintSupport</label>
      </node>
      <node id="2836">
        <label>QPointer</label>
      </node>
      <node id="2847">
        <label>QDebug</label>
      </node>
      <node id="2837">
        <label>QWidget</label>
      </node>
      <node id="2843">
        <label>QString</label>
      </node>
      <node id="2851">
        <label>QMargins</label>
      </node>
      <node id="2841">
        <label>QPixmap</label>
      </node>
      <node id="2839">
        <label>QPaintEvent</label>
      </node>
      <node id="2842">
        <label>QVector</label>
      </node>
      <node id="2845">
        <label>QMultiMap</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/><sp/>QCustomPlot,<sp/>an<sp/>easy<sp/>to<sp/>use,<sp/>modern<sp/>plotting<sp/>widget<sp/>for<sp/>Qt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/><sp/>Copyright<sp/>(C)<sp/>2011,<sp/>2012,<sp/>2013,<sp/>2014<sp/>Emanuel<sp/>Eichhammer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>**</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>http://www.gnu.org/licenses/.<sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="19"><highlight class="comment">****************************************************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Emanuel<sp/>Eichhammer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/><sp/>Website/Contact:<sp/>http://www.qcustomplot.com/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Date:<sp/>27.12.14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Version:<sp/>1.3.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="24"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qcustomplot_8h" kindref="compound">qcustomplot.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="class_q_c_p_painter_1a3c52cb0f43f34573d29bea487da28fe8" kindref="member">QCPPainter::QCPPainter</ref>()<sp/>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>QPainter(),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>mModes(pmDefault),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>mIsAntialiasing(false)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>setRenderHint(QPainter::NonCosmeticDefautPen)<sp/>here,<sp/>because<sp/>painter<sp/>isn&apos;t<sp/>active<sp/>yet<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>call<sp/>to<sp/>begin()<sp/>will<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="class_q_c_p_painter_1a3c52cb0f43f34573d29bea487da28fe8" kindref="member">QCPPainter::QCPPainter</ref>(QPaintDevice<sp/>*device)<sp/>:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>QPainter(device),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>mModes(pmDefault),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>mIsAntialiasing(false)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&lt;<sp/>QT_VERSION_CHECK(5,<sp/>0,<sp/>0)<sp/>//<sp/>before<sp/>Qt5,<sp/>default<sp/>pens<sp/>used<sp/>to<sp/>be<sp/>cosmetic<sp/>if<sp/>NonCosmeticDefaultPen<sp/>flag<sp/>isn&apos;t<sp/>set.<sp/>So<sp/>we<sp/>set<sp/>it<sp/>to<sp/>get<sp/>consistency<sp/>across<sp/>Qt<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isActive())</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>setRenderHint(QPainter::NonCosmeticDefaultPen);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="class_q_c_p_painter_1aa8491da26c0bf7704a93e2dcbb0c5ba1" kindref="member">QCPPainter::~QCPPainter</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">QCPPainter::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>QPainter::setPen(pen);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref>.testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" kindref="member">pmNonCosmetic</ref>))</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter_1a7e63fbcf47e35c6f2ecd11b8fef7c7d8" kindref="member">makeNonCosmetic</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">QCPPainter::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>QPainter::setPen(color);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref>.testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" kindref="member">pmNonCosmetic</ref>))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter_1a7e63fbcf47e35c6f2ecd11b8fef7c7d8" kindref="member">makeNonCosmetic</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">QCPPainter::setPen</ref>(Qt::PenStyle<sp/>penStyle)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>QPainter::setPen(penStyle);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref>.testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" kindref="member">pmNonCosmetic</ref>))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter_1a7e63fbcf47e35c6f2ecd11b8fef7c7d8" kindref="member">makeNonCosmetic</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">QCPPainter::drawLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QLineF<sp/>&amp;line)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_painter_1a7055085da176aee0f6b23298f1003d08" kindref="member">mIsAntialiasing</ref><sp/>||<sp/><ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref>.testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">pmVectorized</ref>))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainter::drawLine(line);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainter::drawLine(line.toLine());</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">QCPPainter::setAntialiasing</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>setRenderHint(QPainter::Antialiasing,<sp/>enabled);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_painter_1a7055085da176aee0f6b23298f1003d08" kindref="member">mIsAntialiasing</ref><sp/>!=<sp/>enabled)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter_1a7055085da176aee0f6b23298f1003d08" kindref="member">mIsAntialiasing</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref>.testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">pmVectorized</ref>))<sp/></highlight><highlight class="comment">//<sp/>antialiasing<sp/>half-pixel<sp/>shift<sp/>only<sp/>needed<sp/>for<sp/>rasterized<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_painter_1a7055085da176aee0f6b23298f1003d08" kindref="member">mIsAntialiasing</ref>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>translate(0.5,<sp/>0.5);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>translate(-0.5,<sp/>-0.5);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1a5fac93adc29c7c4dea9f3e171e9e635e" kindref="member">QCPPainter::setModes</ref>(QCPPainter::PainterModes<sp/>modes)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref><sp/>=<sp/><ref refid="class_q_c_p_painter_1a99b89eaf5363faaa1e1e6162856f436c" kindref="member">modes</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1a0a41146ccd619dceab6e25ec7b46b044" kindref="member">QCPPainter::begin</ref>(QPaintDevice<sp/>*device)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>QPainter::begin(device);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&lt;<sp/>QT_VERSION_CHECK(5,<sp/>0,<sp/>0)<sp/>//<sp/>before<sp/>Qt5,<sp/>default<sp/>pens<sp/>used<sp/>to<sp/>be<sp/>cosmetic<sp/>if<sp/>NonCosmeticDefaultPen<sp/>flag<sp/>isn&apos;t<sp/>set.<sp/>So<sp/>we<sp/>set<sp/>it<sp/>to<sp/>get<sp/>consistency<sp/>across<sp/>Qt<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>setRenderHint(QPainter::NonCosmeticDefaultPen);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1af6b1f7d2bbc548b10aa55d8b6ad49577" kindref="member">QCPPainter::setMode</ref>(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156d" kindref="member">QCPPainter::PainterMode</ref><sp/>mode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref>.testFlag(mode))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref><sp/>&amp;=<sp/>~mode;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref>.testFlag(mode))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter_1af5d1d6e5df0adbc7de5633250fb3396c" kindref="member">mModes</ref><sp/>|=<sp/>mode;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1a8fd6821ee6fecbfa04444c9062912abd" kindref="member">QCPPainter::save</ref>()</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_painter_1a0189e641bbf7dc31ac15aef7b36501fa" kindref="member">mAntialiasingStack</ref>.push(<ref refid="class_q_c_p_painter_1a7055085da176aee0f6b23298f1003d08" kindref="member">mIsAntialiasing</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>QPainter::save();</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1a64908e6298d5bbd83457dc987cc3a022" kindref="member">QCPPainter::restore</ref>()</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_painter_1a0189e641bbf7dc31ac15aef7b36501fa" kindref="member">mAntialiasingStack</ref>.isEmpty())</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter_1a7055085da176aee0f6b23298f1003d08" kindref="member">mIsAntialiasing</ref><sp/>=<sp/><ref refid="class_q_c_p_painter_1a0189e641bbf7dc31ac15aef7b36501fa" kindref="member">mAntialiasingStack</ref>.pop();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unbalanced<sp/>save/restore&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>QPainter::restore();</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_painter_1a7e63fbcf47e35c6f2ecd11b8fef7c7d8" kindref="member">QCPPainter::makeNonCosmetic</ref>()</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(pen().widthF()))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>p<sp/>=<sp/>pen();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>p.setWidth(1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainter::setPen(p);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"></codeline>
<codeline lineno="313"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle::QCPScatterStyle</ref>()<sp/>:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>mSize(6),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>mShape(ssNone),</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>mPen(Qt::NoPen),</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>mBrush(Qt::NoBrush),</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>mPenDefined(false)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle::QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)<sp/>:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>mSize(size),</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>mShape(shape),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>mPen(Qt::NoPen),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>mBrush(Qt::NoBrush),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>mPenDefined(false)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle::QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)<sp/>:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>mSize(size),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>mShape(shape),</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>mPen(QPen(color)),</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>mBrush(Qt::NoBrush),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>mPenDefined(true)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle::QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;fill,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)<sp/>:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>mSize(size),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>mShape(shape),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>mPen(QPen(color)),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>mBrush(QBrush(fill)),</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>mPenDefined(true)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle::QCPScatterStyle</ref>(ScatterShape<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)<sp/>:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>mSize(size),</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>mShape(shape),</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>mPen(pen),</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>mBrush(brush),</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>mPenDefined(pen.style()<sp/>!=<sp/>Qt::NoPen)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle::QCPScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pixmap)<sp/>:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>mSize(5),</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>mShape(ssPixmap),</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>mPen(Qt::NoPen),</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>mBrush(Qt::NoBrush),</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>mPixmap(pixmap),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>mPenDefined(false)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><ref refid="class_q_c_p_scatter_style_1a8836018d9ad83ccd8870de8315c1be73" kindref="member">QCPScatterStyle::QCPScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath<sp/>&amp;customPath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)<sp/>:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>mSize(size),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>mShape(ssCustom),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>mPen(pen),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>mBrush(brush),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>mCustomPath(customPath),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>mPenDefined(pen.style()<sp/>!=<sp/>Qt::NoPen)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1aaefdd031052892c4136129db68596e0f" kindref="member">QCPScatterStyle::setSize</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref><sp/>=<sp/><ref refid="class_q_c_p_scatter_style_1a1973ee650368f1c5f55507b78473f634" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a7c641c4d4c6d29cb705d3887cfce91c1" kindref="member">QCPScatterStyle::setShape</ref>(<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349" kindref="member">QCPScatterStyle::ScatterShape</ref><sp/>shape)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1af1b327f35f107ed108290187bbc8c7c6" kindref="member">mShape</ref><sp/>=<sp/><ref refid="class_q_c_p_scatter_style_1a4462a25ef17769631f4e0aa81dadca4b" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a761f1f229cc0ca4703e1e2b89f6dd1ba" kindref="member">QCPScatterStyle::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a84ef5aa591ddba07b440f597e1669e78" kindref="member">mPenDefined</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a0f6a85e6d1e3ae1ca1b6efb4d4cdfe17" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_scatter_style_1a3c24c3bf37b561b4807aed9f1418ab58" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a74d692aaeb8d4b36d6f7d510e44264b1" kindref="member">QCPScatterStyle::setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a1b9c6ab10aebcaf236f1f45d1d6d64d1" kindref="member">mBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_scatter_style_1a46bf481d84bfa31b287dd43a3bf86d37" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a5fb611d46acfac520d7b89a1c71d9246" kindref="member">QCPScatterStyle::setPixmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pixmap)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a7c641c4d4c6d29cb705d3887cfce91c1" kindref="member">setShape</ref>(<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" kindref="member">ssPixmap</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a7697346c89b19d4cd1d8dd33319ec9e3" kindref="member">mPixmap</ref><sp/>=<sp/><ref refid="class_q_c_p_scatter_style_1a9bab44cc41fcd585621a4b3e0e48231b" kindref="member">pixmap</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a96a3e949f90b2afe5677ca9412a12a1e" kindref="member">QCPScatterStyle::setCustomPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPainterPath<sp/>&amp;customPath)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a7c641c4d4c6d29cb705d3887cfce91c1" kindref="member">setShape</ref>(<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a15d9bcfd9de94edda949006529f9219d" kindref="member">ssCustom</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a813cb074744dc5a2f59cc99d6a10c6f0" kindref="member">mCustomPath</ref><sp/>=<sp/><ref refid="class_q_c_p_scatter_style_1a4dd4998dfb0d6889205668a06c790328" kindref="member">customPath</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a81817dfd404635f211e6ff2a04657d36" kindref="member">QCPScatterStyle::applyTo</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;defaultPen)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="532"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_scatter_style_1a84ef5aa591ddba07b440f597e1669e78" kindref="member">mPenDefined</ref><sp/>?<sp/><ref refid="class_q_c_p_scatter_style_1a0f6a85e6d1e3ae1ca1b6efb4d4cdfe17" kindref="member">mPen</ref><sp/>:<sp/>defaultPen);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_scatter_style_1a1b9c6ab10aebcaf236f1f45d1d6d64d1" kindref="member">mBrush</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">QCPScatterStyle::drawShape</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>QPointF<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="546"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">drawShape</ref>(painter,<sp/>pos.x(),<sp/>pos.y());</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">QCPScatterStyle::drawShape</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="554"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w<sp/>=<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>/2.0;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_scatter_style_1af1b327f35f107ed108290187bbc8c7c6" kindref="member">mShape</ref>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349abd144c291ca274f77053ec68cab6c022" kindref="member">ssNone</ref>:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a06e15a735b79093a1d999c0374fa3aa1" kindref="member">ssDot</ref>:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(x,<sp/>y),<sp/>QPointF(x+0.0001,<sp/>y));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a9eacd60f059dc3ef71bf249f515a6fe4" kindref="member">ssCross</ref>:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/>y-w,<sp/>x+w,<sp/>y+w));</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/>y+w,<sp/>x+w,<sp/>y-w));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a2d7f1d3c1a148b9d9d17f2fd9cae5eb7" kindref="member">ssPlus</ref>:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/><sp/><sp/>y,<sp/>x+w,<sp/><sp/><sp/>y));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y+w,<sp/><sp/><sp/>x,<sp/>y-w));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a7c92a110880d0ef2170dff3a5b4f7779" kindref="member">ssCircle</ref>:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(QPointF(x<sp/>,<sp/>y),<sp/>w,<sp/>w);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a281fe1434696dcbab3aa6b9ccfbb09e9" kindref="member">ssDisc</ref>:</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QBrush<sp/>b<sp/>=<sp/>painter-&gt;brush();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(painter-&gt;pen().color());</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(QPointF(x<sp/>,<sp/>y),<sp/>w,<sp/>w);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(b);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a279e48703ddc9f1cf4a61d3e2817ab3c" kindref="member">ssSquare</ref>:</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(x-w,<sp/>y-w,<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>,<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a4fc5929df1b2dad0a3cb2ef2c8b6e633" kindref="member">ssDiamond</ref>:</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/><sp/><sp/>y,<sp/><sp/><sp/>x,<sp/>y-w));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y-w,<sp/>x+w,<sp/><sp/><sp/>y));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x+w,<sp/><sp/><sp/>y,<sp/><sp/><sp/>x,<sp/>y+w));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y+w,<sp/>x-w,<sp/><sp/><sp/>y));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6047a2d64e41f1d6ce54445d595d442f" kindref="member">ssStar</ref>:</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/><sp/><sp/>y,<sp/>x+w,<sp/><sp/><sp/>y));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y+w,<sp/><sp/><sp/>x,<sp/>y-w));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w*0.707,<sp/>y-w*0.707,<sp/>x+w*0.707,<sp/>y+w*0.707));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w*0.707,<sp/>y+w*0.707,<sp/>x+w*0.707,<sp/>y-w*0.707));</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a74a8d4eff1d97b57c53a60d0003453c3" kindref="member">ssTriangle</ref>:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/>y+0.755*w,<sp/>x+w,<sp/>y+0.755*w));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x+w,<sp/>y+0.755*w,<sp/><sp/><sp/>x,<sp/>y-0.977*w));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y-0.977*w,<sp/>x-w,<sp/>y+0.755*w));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6156274d21d8b4115197567d3ea2d9a8" kindref="member">ssTriangleInverted</ref>:</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/>y-0.755*w,<sp/>x+w,<sp/>y-0.755*w));</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x+w,<sp/>y-0.755*w,<sp/><sp/><sp/>x,<sp/>y+0.977*w));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y+0.977*w,<sp/>x-w,<sp/>y-0.755*w));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a7081310936c200c6c78e34c172f72d07" kindref="member">ssCrossSquare</ref>:</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/>y-w,<sp/>x+w*0.95,<sp/>y+w*0.95));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/>y+w*0.95,<sp/>x+w*0.95,<sp/>y-w));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(x-w,<sp/>y-w,<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>,<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a5aa8e9db545e5404482fec774768ee25" kindref="member">ssPlusSquare</ref>:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/><sp/><sp/>y,<sp/>x+w*0.95,<sp/><sp/><sp/>y));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y+w,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y-w));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(x-w,<sp/>y-w,<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>,<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a524613ba5d1c4eaa1541d74cf339d283" kindref="member">ssCrossCircle</ref>:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w*0.707,<sp/>y-w*0.707,<sp/>x+w*0.670,<sp/>y+w*0.670));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w*0.707,<sp/>y+w*0.670,<sp/>x+w*0.670,<sp/>y-w*0.707));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(QPointF(x,<sp/>y),<sp/>w,<sp/>w);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a6fa151d01f1694c9ff9922da686dc535" kindref="member">ssPlusCircle</ref>:</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-w,<sp/><sp/><sp/>y,<sp/>x+w,<sp/><sp/><sp/>y));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<sp/><sp/>x,<sp/>y+w,<sp/><sp/><sp/>x,<sp/>y-w));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(QPointF(x,<sp/>y),<sp/>w,<sp/>w);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349ada3b2988ece38c121922a4b5007eb08d" kindref="member">ssPeace</ref>:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/>y-w,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>y+w));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/><sp/><sp/>y,<sp/>x-w*0.707,<sp/>y+w*0.707));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/><sp/><sp/>y,<sp/>x+w*0.707,<sp/>y+w*0.707));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(QPointF(x,<sp/>y),<sp/>w,<sp/>w);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" kindref="member">ssPixmap</ref>:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(x-<ref refid="class_q_c_p_scatter_style_1a7697346c89b19d4cd1d8dd33319ec9e3" kindref="member">mPixmap</ref>.width()*0.5,<sp/>y-<ref refid="class_q_c_p_scatter_style_1a7697346c89b19d4cd1d8dd33319ec9e3" kindref="member">mPixmap</ref>.height()*0.5,<sp/><ref refid="class_q_c_p_scatter_style_1a7697346c89b19d4cd1d8dd33319ec9e3" kindref="member">mPixmap</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a15d9bcfd9de94edda949006529f9219d" kindref="member">ssCustom</ref>:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTransform<sp/>oldTransform<sp/>=<sp/>painter-&gt;transform();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;translate(x,<sp/>y);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;scale(<ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>/6.0,<sp/><ref refid="class_q_c_p_scatter_style_1a757da98671eb06b221979373ac2cec91" kindref="member">mSize</ref>/6.0);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPath(<ref refid="class_q_c_p_scatter_style_1a813cb074744dc5a2f59cc99d6a10c6f0" kindref="member">mCustomPath</ref>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setTransform(oldTransform);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"></codeline>
<codeline lineno="724"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><ref refid="class_q_c_p_layer_1a5d0657fc86d624e5efbe930ef21af718" kindref="member">QCPLayer::QCPLayer</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;layerName)<sp/>:</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>QObject(parentPlot),</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>mParentPlot(parentPlot),</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>mName(layerName),</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>mIndex(-1),<sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>set<sp/>to<sp/>a<sp/>proper<sp/>value<sp/>by<sp/>the<sp/>QCustomPlot<sp/>layer<sp/>creation<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>mVisible(true)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>no<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>layerName<sp/>is<sp/>unique,<sp/>because<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>management<sp/>is<sp/>done<sp/>with<sp/>QCustomPlot<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><ref refid="class_q_c_p_layer_1afc1a8940f8e34c9f25ead9dfd4828cae" kindref="member">QCPLayer::~QCPLayer</ref>()</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>child<sp/>layerables<sp/>are<sp/>still<sp/>on<sp/>this<sp/>layer,<sp/>detach<sp/>them,<sp/>so<sp/>they<sp/>don&apos;t<sp/>try<sp/>to<sp/>reach<sp/>back<sp/>to<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>invalid<sp/>layer<sp/>once<sp/>they<sp/>get<sp/>deleted/moved<sp/>themselves.<sp/>This<sp/>only<sp/>happens<sp/>when<sp/>layers<sp/>are<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>directly,<sp/>like<sp/>in<sp/>the<sp/>QCustomPlot<sp/>destructor.<sp/>(The<sp/>regular<sp/>layer<sp/>removal<sp/>procedure<sp/>for<sp/>the<sp/>user<sp/>is<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>QCustomPlot::removeLayer,<sp/>which<sp/>moves<sp/>all<sp/>layerables<sp/>off<sp/>this<sp/>layer<sp/>before<sp/>deleting<sp/>it.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" kindref="member">mChildren</ref>.isEmpty())</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" kindref="member">mChildren</ref>.last()-&gt;setLayer(0);<sp/></highlight><highlight class="comment">//<sp/>removes<sp/>itself<sp/>from<sp/>mChildren<sp/>via<sp/>removeChild()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layer_1a2f3374a7884bf403720cd1cf6f7ad1bb" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1af73057345656cbd1463454982d808b00" kindref="member">currentLayer</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>parent<sp/>plot&apos;s<sp/>mCurrentLayer<sp/>will<sp/>be<sp/>a<sp/>dangling<sp/>pointer.<sp/>Should<sp/>have<sp/>been<sp/>set<sp/>to<sp/>a<sp/>valid<sp/>layer<sp/>or<sp/>0<sp/>beforehand.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer_1ac07671f74edf6884b51a82afb2c19516" kindref="member">QCPLayer::setVisible</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible)</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer_1a264950deb08e589460c126c895a1e2b5" kindref="member">mVisible</ref><sp/>=<sp/><ref refid="class_q_c_p_layer_1a9efca636e4dcad721999a6282f296016" kindref="member">visible</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer_1a57ce5e49364aa9122276d5df3b4a0ddc" kindref="member">QCPLayer::addChild</ref>(<ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*layerable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prepend)</highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" kindref="member">mChildren</ref>.contains(layerable))</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prepend)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" kindref="member">mChildren</ref>.prepend(layerable);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" kindref="member">mChildren</ref>.append(layerable);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layerable<sp/>is<sp/>already<sp/>child<sp/>of<sp/>this<sp/>layer&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(layerable);</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer_1ac2f64ac7761650582d968d86670ef362" kindref="member">QCPLayer::removeChild</ref>(<ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*layerable)</highlight></codeline>
<codeline lineno="820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" kindref="member">mChildren</ref>.removeOne(layerable))</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layerable<sp/>is<sp/>not<sp/>child<sp/>of<sp/>this<sp/>layer&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(layerable);</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"></codeline>
<codeline lineno="842"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><ref refid="class_q_c_p_layerable_1a74c0fa237f29bf0e49565013fc5d1ec0" kindref="member">QCPLayerable::QCPLayerable</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*plot,<sp/>QString<sp/>targetLayer,<sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*parentLayerable)<sp/>:</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>QObject(plot),</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>mVisible(true),</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>mParentPlot(plot),</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>mParentLayerable(parentLayerable),</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>mLayer(0),</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>mAntialiased(true)</highlight></codeline>
<codeline lineno="938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mParentPlot)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetLayer.isEmpty())</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setLayer(mParentPlot-&gt;currentLayer());</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!setLayer(targetLayer))</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>QCPlayerable<sp/>initial<sp/>layer<sp/>to&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>targetLayer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><ref refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" kindref="member">QCPLayerable::~QCPLayerable</ref>()</highlight></codeline>
<codeline lineno="949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>-&gt;<ref refid="class_q_c_p_layer_1ac2f64ac7761650582d968d86670ef362" kindref="member">removeChild</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">QCPLayerable::setVisible</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" kindref="member">mVisible</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">QCPLayerable::setLayer</ref>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" kindref="member">moveToLayer</ref>(layer,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">QCPLayerable::setLayer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;layerName)</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>parent<sp/>QCustomPlot<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*<ref refid="class_q_c_p_layerable_1aea67e8c19145e70d68c286a36f6b8300" kindref="member">layer</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>(layerName))</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">setLayer</ref>(<ref refid="class_q_c_p_layerable_1aea67e8c19145e70d68c286a36f6b8300" kindref="member">layer</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;there<sp/>is<sp/>no<sp/>layer<sp/>with<sp/>name&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layerName;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" kindref="member">QCPLayerable::setAntialiased</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a30809f7455e9794bca7b6c737622fa63" kindref="member">QCPLayerable::realVisibility</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1025"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" kindref="member">mVisible</ref><sp/>&amp;&amp;<sp/>(!<ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref><sp/>||<sp/><ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>-&gt;<ref refid="class_q_c_p_layer_1a9efca636e4dcad721999a6282f296016" kindref="member">visible</ref>())<sp/>&amp;&amp;<sp/>(!<ref refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" kindref="member">mParentLayerable</ref><sp/>||<sp/><ref refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" kindref="member">mParentLayerable</ref>.data()-&gt;realVisibility());</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a4001c4d0dfec55598efa4d531f2179a9" kindref="member">QCPLayerable::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1064"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>Q_UNUSED(pos)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>Q_UNUSED(onlySelectable)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>return<sp/>-1.0;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>::<ref refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" kindref="member">initializeParentPlot</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>with<sp/>mParentPlot<sp/>already<sp/>initialized&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parentPlot)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>with<sp/>parentPlot<sp/>zero&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" kindref="member">parentPlotInitialized</ref>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" kindref="member">QCPLayerable::setParentLayerable</ref>(<ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*parentLayerable)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" kindref="member">mParentLayerable</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1a98d79f5b716d45eac4347befe546d0ec" kindref="member">parentLayerable</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" kindref="member">QCPLayerable::moveToLayer</ref>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*<ref refid="class_q_c_p_layerable_1aea67e8c19145e70d68c286a36f6b8300" kindref="member">layer</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prepend)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>parent<sp/>QCustomPlot<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer<sp/>&amp;&amp;<sp/>layer-&gt;<ref refid="class_q_c_p_layer_1a3958c9a938c2d05a7378c41484acee08" kindref="member">parentPlot</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layer&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>layer-&gt;<ref refid="class_q_c_p_layer_1a96ebd1e436f3813938cb9cd4a59a60be" kindref="member">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is<sp/>not<sp/>in<sp/>same<sp/>QCustomPlot<sp/>as<sp/>this<sp/>layerable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*oldLayer<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>-&gt;<ref refid="class_q_c_p_layer_1ac2f64ac7761650582d968d86670ef362" kindref="member">removeChild</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1aea67e8c19145e70d68c286a36f6b8300" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>-&gt;<ref refid="class_q_c_p_layer_1a57ce5e49364aa9122276d5df3b4a0ddc" kindref="member">addChild</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>prepend);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref><sp/>!=<sp/>oldLayer)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" kindref="member">layerChanged</ref>(<ref refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" kindref="member">mLayer</ref>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">QCPLayerable::applyAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>localAntialiased,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref><sp/>overrideElement)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a8060cee59757213764382a78d3196189" kindref="member">notAntialiasedElements</ref>().testFlag(overrideElement))</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a81e954fbb485bb44c609e5707f0067b3" kindref="member">antialiasedElements</ref>().testFlag(overrideElement))</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(localAntialiased);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" kindref="member">QCPLayerable::parentPlotInitialized</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/>Q_UNUSED(parentPlot)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/><ref refid="class_q_c_p_layerable_1aa4035e586b7f317a06ba7e74e242a5ea" kindref="member">QCPLayerable::selectionCategory</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1201"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037af67a50bc26147a13b551b3a625374949" kindref="member">QCP::iSelectOther</ref>;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal">QRect<sp/><ref refid="class_q_c_p_layerable_1a07a8f746640c3704b09910df297afcba" kindref="member">QCPLayerable::clipRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1215"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRect();</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91" kindref="member">QCPLayerable::selectEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>Q_UNUSED(additive)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>Q_UNUSED(selectionStateChanged)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>::<ref refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee" kindref="member">deselectEvent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>Q_UNUSED(selectionStateChanged)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"></codeline>
<codeline lineno="1294"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" kindref="member">QCPRange::minRange</ref><sp/>=<sp/>1e-280;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">QCPRange::maxRange</ref><sp/>=<sp/>1e250;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange::QCPRange</ref>()<sp/>:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>lower(0),</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>upper(0)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><ref refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" kindref="member">QCPRange::QCPRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper)<sp/>:</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>lower(lower),</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>upper(upper)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>normalize();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">QCPRange::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1329"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1a3825b53cf17da5de0843c1f3baad07db" kindref="member">QCPRange::center</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1337"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>+<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*0.5;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" kindref="member">QCPRange::normalize</ref>()</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&gt;<sp/><ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>qSwap(<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/><ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">QCPRange::expand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;otherRange)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&gt;<sp/>otherRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>otherRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>otherRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>otherRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1a6437bdf29a7ebc2c88a6045c4e622384" kindref="member">QCPRange::expanded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;otherRange)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1375"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>result<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>result.<ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">expand</ref>(otherRange);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">QCPRange::sanitizedForLogScale</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1394"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rangeFac<sp/>=<sp/>1e-3;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>sanitizedRange(<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/><ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>sanitizedRange.normalize();</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>have<sp/>range<sp/>spanning<sp/>negative<sp/>and<sp/>positive<sp/>values<sp/>in<sp/>log<sp/>plot,<sp/>so<sp/>change<sp/>range<sp/>to<sp/>fix<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(qFuzzyCompare(sanitizedRange.lower+1,<sp/>1)<sp/>&amp;&amp;<sp/>!qFuzzyCompare(sanitizedRange.upper+1,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sanitizedRange.lower<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>sanitizedRange.upper<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>lower<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rangeFac<sp/>&lt;<sp/>sanitizedRange.upper*rangeFac)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.lower<sp/>=<sp/>rangeFac;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.lower<sp/>=<sp/>sanitizedRange.upper*rangeFac;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//else<sp/>if<sp/>(!qFuzzyCompare(lower+1,<sp/>1)<sp/>&amp;&amp;<sp/>qFuzzyCompare(upper+1,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sanitizedRange.lower<sp/>!=<sp/>0.0<sp/>&amp;&amp;<sp/>sanitizedRange.upper<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>upper<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-rangeFac<sp/>&gt;<sp/>sanitizedRange.lower*rangeFac)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.upper<sp/>=<sp/>-rangeFac;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.upper<sp/>=<sp/>sanitizedRange.lower*rangeFac;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sanitizedRange.lower<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>sanitizedRange.upper<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>out<sp/>whether<sp/>negative<sp/>or<sp/>positive<sp/>interval<sp/>is<sp/>wider<sp/>to<sp/>decide<sp/>which<sp/>sign<sp/>domain<sp/>will<sp/>be<sp/>chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-sanitizedRange.lower<sp/>&gt;<sp/>sanitizedRange.upper)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>is<sp/>wider,<sp/>do<sp/>same<sp/>as<sp/>in<sp/>case<sp/>upper<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-rangeFac<sp/>&gt;<sp/>sanitizedRange.lower*rangeFac)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.upper<sp/>=<sp/>-rangeFac;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.upper<sp/>=<sp/>sanitizedRange.lower*rangeFac;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positive<sp/>is<sp/>wider,<sp/>do<sp/>same<sp/>as<sp/>in<sp/>case<sp/>lower<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rangeFac<sp/>&lt;<sp/>sanitizedRange.upper*rangeFac)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.lower<sp/>=<sp/>rangeFac;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sanitizedRange.lower<sp/>=<sp/>sanitizedRange.upper*rangeFac;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>normalization,<sp/>case<sp/>lower&gt;0<sp/>&amp;&amp;<sp/>upper&lt;0<sp/>should<sp/>never<sp/>occur,<sp/>because<sp/>that<sp/>implies<sp/>upper&lt;lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sanitizedRange;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_range_1a1ff029704c29a75adbc1dc36cecaf44c" kindref="member">QCPRange::sanitizedForLinScale</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1443"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>sanitizedRange(<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/><ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>sanitizedRange.normalize();</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sanitizedRange;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1a030ce95b527c32e01414d0351347b46d" kindref="member">QCPRange::contains</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1453"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>&gt;=<sp/><ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&amp;&amp;<sp/>value<sp/>&lt;=<sp/><ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/><sp/>return<sp/>(lower<sp/>&gt;<sp/>-maxRange<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>&lt;<sp/>maxRange<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qAbs(lower-upper)<sp/>&gt;<sp/>minRange<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lower<sp/>&lt;<sp/>-minRange<sp/>||<sp/>lower<sp/>&gt;<sp/>minRange)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(upper<sp/>&lt;<sp/>-minRange<sp/>||<sp/>upper<sp/>&gt;<sp/>minRange));</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lower<sp/>&gt;<sp/>-<ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>&lt;<sp/><ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qAbs(lower-upper)<sp/>&gt;<sp/><ref refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" kindref="member">minRange</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qAbs(lower-upper)<sp/>&lt;<sp/><ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref>);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/>return<sp/>(range.lower<sp/>&gt;<sp/>-maxRange<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.upper<sp/>&lt;<sp/>maxRange<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qAbs(range.lower-range.upper)<sp/>&gt;<sp/>minRange<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qAbs(range.lower-range.upper)<sp/>&lt;<sp/>maxRange<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(range.lower<sp/>&lt;<sp/>-minRange<sp/>||<sp/>range.lower<sp/>&gt;<sp/>minRange)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(range.upper<sp/>&lt;<sp/>-minRange<sp/>||<sp/>range.upper<sp/>&gt;<sp/>minRange));</highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&gt;<sp/>-<ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/><ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qAbs(range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>-range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)<sp/>&gt;<sp/><ref refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" kindref="member">minRange</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qAbs(range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>-range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)<sp/>&lt;<sp/><ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref>);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"></codeline>
<codeline lineno="1546"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><ref refid="class_q_c_p_margin_group_1ac481c20678ec5b305d6df330715f4b7b" kindref="member">QCPMarginGroup::QCPMarginGroup</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>QObject(parentPlot),</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>mParentPlot(parentPlot)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>mChildren.insert(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">QCP::msLeft</ref>,<sp/>QList&lt;QCPLayoutElement*&gt;());</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>mChildren.insert(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">QCP::msRight</ref>,<sp/>QList&lt;QCPLayoutElement*&gt;());</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>mChildren.insert(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">QCP::msTop</ref>,<sp/>QList&lt;QCPLayoutElement*&gt;());</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>mChildren.insert(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">QCP::msBottom</ref>,<sp/>QList&lt;QCPLayoutElement*&gt;());</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><ref refid="class_q_c_p_margin_group_1a42c62becdaac41406ca90f1c2a755e1c" kindref="member">QCPMarginGroup::~QCPMarginGroup</ref>()</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_margin_group_1a144b67f216e4e86c3a3a309e850285fe" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_margin_group_1a28c8e87a0b87c01bd28c693faabddd7b" kindref="member">QCPMarginGroup::isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1579"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>QHashIterator&lt;QCP::MarginSide,<sp/>QList&lt;QCPLayoutElement*&gt;<sp/>&gt;<sp/>it(<ref refid="class_q_c_p_margin_group_1a954bc89ff8958b9bb6a4a0d08ed5fc0f" kindref="member">mChildren</ref>);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.hasNext())</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>it.next();</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.value().isEmpty())</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_margin_group_1a144b67f216e4e86c3a3a309e850285fe" kindref="member">QCPMarginGroup::clear</ref>()</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>all<sp/>children<sp/>remove<sp/>themselves<sp/>from<sp/>this<sp/>margin<sp/>group:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>QHashIterator&lt;QCP::MarginSide,<sp/>QList&lt;QCPLayoutElement*&gt;<sp/>&gt;<sp/>it(<ref refid="class_q_c_p_margin_group_1a954bc89ff8958b9bb6a4a0d08ed5fc0f" kindref="member">mChildren</ref>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.hasNext())</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>it.next();</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QCPLayoutElement*&gt;<sp/><ref refid="class_q_c_p_margin_group_1a2f39e319c9ece34e0392c2ca350f1069" kindref="member">elements</ref><sp/>=<sp/>it.value();</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=elements.size()-1;<sp/>i&gt;=0;<sp/>--i)</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elements.at(i)-&gt;setMarginGroup(it.key(),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>removes<sp/>itself<sp/>from<sp/>mChildren<sp/>via<sp/>removeChild</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_margin_group_1aeaeba9068dba2ef8be41449f0f2582f7" kindref="member">QCPMarginGroup::commonMargin</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1618"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>query<sp/>all<sp/>automatic<sp/>margins<sp/>of<sp/>the<sp/>layout<sp/>elements<sp/>in<sp/>this<sp/>margin<sp/>group<sp/>side<sp/>and<sp/>find<sp/>maximum:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>elements<sp/>=<sp/><ref refid="class_q_c_p_margin_group_1a954bc89ff8958b9bb6a4a0d08ed5fc0f" kindref="member">mChildren</ref>.value(side);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;elements.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!elements.at(i)-&gt;autoMargins().testFlag(side))</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>qMax(elements.at(i)-&gt;calculateAutoMargin(side),<sp/><ref refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" kindref="member">QCP::getMarginValue</ref>(elements.at(i)-&gt;minimumMargins(),<sp/>side));</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/>result)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_margin_group_1acb9c3a35acec655c2895b7eb95ee0524" kindref="member">QCPMarginGroup::addChild</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side,<sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_margin_group_1a954bc89ff8958b9bb6a4a0d08ed5fc0f" kindref="member">mChildren</ref>[side].contains(element))</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_margin_group_1a954bc89ff8958b9bb6a4a0d08ed5fc0f" kindref="member">mChildren</ref>[side].append(element);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;element<sp/>is<sp/>already<sp/>child<sp/>of<sp/>this<sp/>margin<sp/>group<sp/>side&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(element);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_margin_group_1a20ab3286062957d99b58db683fe725b0" kindref="member">QCPMarginGroup::removeChild</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side,<sp/><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref><sp/>*element)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_margin_group_1a954bc89ff8958b9bb6a4a0d08ed5fc0f" kindref="member">mChildren</ref>[side].removeOne(element))</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;element<sp/>is<sp/>not<sp/>child<sp/>of<sp/>this<sp/>margin<sp/>group<sp/>side&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(element);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"></codeline>
<codeline lineno="1690"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><ref refid="class_q_c_p_layout_element_1a8947f0ada17e672aaba3d424cbbb67e3" kindref="member">QCPLayoutElement::QCPLayoutElement</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>(parentPlot),<sp/></highlight><highlight class="comment">//<sp/>parenthood<sp/>is<sp/>changed<sp/>as<sp/>soon<sp/>as<sp/>layout<sp/>element<sp/>gets<sp/>inserted<sp/>into<sp/>a<sp/>layout<sp/>(except<sp/>for<sp/>top<sp/>level<sp/>layout)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/>mParentLayout(0),</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>mMinimumSize(),</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/>mMaximumSize(QWIDGETSIZE_MAX,<sp/>QWIDGETSIZE_MAX),</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>mRect(0,<sp/>0,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>mOuterRect(0,<sp/>0,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/>mMargins(0,<sp/>0,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/>mMinimumMargins(0,<sp/>0,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/>mAutoMargins(<ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a43d7361cb0c5244eabdc962021bffebc" kindref="member">msAll</ref>)</highlight></codeline>
<codeline lineno="1754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><ref refid="class_q_c_p_layout_element_1a0dc52343920011b3e72d61fc94ed3400" kindref="member">QCPLayoutElement::~QCPLayoutElement</ref>()</highlight></codeline>
<codeline lineno="1758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" kindref="member">setMarginGroup</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a43d7361cb0c5244eabdc962021bffebc" kindref="member">QCP::msAll</ref>,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>at<sp/>margin<sp/>groups,<sp/>if<sp/>there<sp/>are<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>at<sp/>layout:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qobject_cast&lt;QCPLayout*&gt;(<ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref>))<sp/></highlight><highlight class="comment">//<sp/>the<sp/>qobject_cast<sp/>is<sp/>just<sp/>a<sp/>safeguard<sp/>in<sp/>case<sp/>the<sp/>layout<sp/>forgets<sp/>to<sp/>call<sp/>clear()<sp/>in<sp/>its<sp/>dtor<sp/>and<sp/>this<sp/>dtor<sp/>is<sp/>called<sp/>by<sp/>QObject<sp/>dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref>-&gt;<ref refid="class_q_c_p_layout_1ada26cd17e56472b0b4d7fbbc96873e4c" kindref="member">take</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" kindref="member">QCPLayoutElement::setOuterRect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref><sp/>!=<sp/>rect)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref><sp/>=<sp/><ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref><sp/>=<sp/><ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref>.adjusted(<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.left(),<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.top(),<sp/>-<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.right(),<sp/>-<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.bottom());</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">QCPLayoutElement::setMargins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>&amp;margins)</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref><sp/>!=<sp/>margins)</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref><sp/>=<sp/><ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref><sp/>=<sp/><ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref>.adjusted(<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.left(),<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.top(),<sp/>-<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.right(),<sp/>-<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.bottom());</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" kindref="member">QCPLayoutElement::setMinimumMargins</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>&amp;margins)</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" kindref="member">mMinimumMargins</ref><sp/>!=<sp/>margins)</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" kindref="member">mMinimumMargins</ref><sp/>=<sp/><ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">QCPLayoutElement::setAutoMargins</ref>(QCP::MarginSides<sp/>sides)</highlight></codeline>
<codeline lineno="1833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" kindref="member">mAutoMargins</ref><sp/>=<sp/>sides;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">QCPLayoutElement::setMinimumSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" kindref="member">mMinimumSize</ref><sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" kindref="member">mMinimumSize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref>)</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref>-&gt;<ref refid="class_q_c_p_layout_1a6218cd7e5c0e30077c1aeaffe55b6145" kindref="member">sizeConstraintsChanged</ref>();</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">QCPLayoutElement::setMinimumSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">setMinimumSize</ref>(QSize(width,<sp/>height));</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">QCPLayoutElement::setMaximumSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight></codeline>
<codeline lineno="1870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" kindref="member">mMaximumSize</ref><sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" kindref="member">mMaximumSize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref>)</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref>-&gt;<ref refid="class_q_c_p_layout_1a6218cd7e5c0e30077c1aeaffe55b6145" kindref="member">sizeConstraintsChanged</ref>();</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">QCPLayoutElement::setMaximumSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">setMaximumSize</ref>(QSize(width,<sp/>height));</highlight></codeline>
<codeline lineno="1886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" kindref="member">QCPLayoutElement::setMarginGroup</ref>(QCP::MarginSides<sp/>sides,<sp/><ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref><sp/>*group)</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/>QVector&lt;QCP::MarginSide&gt;<sp/>sideVector;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sides.testFlag(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">QCP::msLeft</ref>))<sp/>sideVector.append(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">QCP::msLeft</ref>);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sides.testFlag(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">QCP::msRight</ref>))<sp/>sideVector.append(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">QCP::msRight</ref>);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sides.testFlag(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">QCP::msTop</ref>))<sp/>sideVector.append(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">QCP::msTop</ref>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sides.testFlag(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">QCP::msBottom</ref>))<sp/>sideVector.append(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">QCP::msBottom</ref>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sideVector.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side<sp/>=<sp/>sideVector.at(i);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1a22cb1bb62c452fd802e43ca2524660db" kindref="member">marginGroup</ref>(side)<sp/>!=<sp/>group)</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref><sp/>*oldGroup<sp/>=<sp/><ref refid="class_q_c_p_layout_element_1a22cb1bb62c452fd802e43ca2524660db" kindref="member">marginGroup</ref>(side);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldGroup)<sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>at<sp/>old<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldGroup-&gt;<ref refid="class_q_c_p_margin_group_1a20ab3286062957d99b58db683fe725b0" kindref="member">removeChild</ref>(side,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!group)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>setting<sp/>to<sp/>0,<sp/>remove<sp/>hash<sp/>entry.<sp/>Else<sp/>set<sp/>hash<sp/>entry<sp/>to<sp/>new<sp/>group<sp/>and<sp/>register<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" kindref="member">mMarginGroups</ref>.remove(side);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>to<sp/>a<sp/>new<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" kindref="member">mMarginGroups</ref>[side]<sp/>=<sp/>group;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group-&gt;<ref refid="class_q_c_p_margin_group_1acb9c3a35acec655c2895b7eb95ee0524" kindref="member">addChild</ref>(side,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" kindref="member">QCPLayoutElement::update</ref>(UpdatePhase<sp/>phase)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" kindref="member">upMargins</ref>)</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" kindref="member">mAutoMargins</ref><sp/>!=<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a80aa4149f16dabd538f8b2e3d42c42d5" kindref="member">QCP::msNone</ref>)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>margins<sp/>of<sp/>this<sp/>layout<sp/>element<sp/>according<sp/>to<sp/>automatic<sp/>margin<sp/>calculation,<sp/>either<sp/>directly<sp/>or<sp/>via<sp/>a<sp/>margin<sp/>group:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMargins<sp/>newMargins<sp/>=<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side,<sp/>QList&lt;QCP::MarginSide&gt;()<sp/>&lt;&lt;<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">QCP::msLeft</ref><sp/>&lt;&lt;<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">QCP::msRight</ref><sp/>&lt;&lt;<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">QCP::msTop</ref><sp/>&lt;&lt;<sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">QCP::msBottom</ref>)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" kindref="member">mAutoMargins</ref>.testFlag(side))<sp/></highlight><highlight class="comment">//<sp/>this<sp/>side&apos;s<sp/>margin<sp/>shall<sp/>be<sp/>calculated<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" kindref="member">mMarginGroups</ref>.contains(side))</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1afbf6e3084c108f2bb4372107945ee82f" kindref="member">QCP::setMarginValue</ref>(newMargins,<sp/>side,<sp/><ref refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" kindref="member">mMarginGroups</ref>[side]-&gt;commonMargin(side));<sp/></highlight><highlight class="comment">//<sp/>this<sp/>side<sp/>is<sp/>part<sp/>of<sp/>a<sp/>margin<sp/>group,<sp/>so<sp/>get<sp/>the<sp/>margin<sp/>value<sp/>from<sp/>that<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1afbf6e3084c108f2bb4372107945ee82f" kindref="member">QCP::setMarginValue</ref>(newMargins,<sp/>side,<sp/><ref refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" kindref="member">calculateAutoMargin</ref>(side));<sp/></highlight><highlight class="comment">//<sp/>this<sp/>side<sp/>is<sp/>not<sp/>part<sp/>of<sp/>a<sp/>group,<sp/>so<sp/>calculate<sp/>the<sp/>value<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>minimum<sp/>margin<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" kindref="member">QCP::getMarginValue</ref>(newMargins,<sp/>side)<sp/>&lt;<sp/><ref refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" kindref="member">QCP::getMarginValue</ref>(<ref refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" kindref="member">mMinimumMargins</ref>,<sp/>side))</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1afbf6e3084c108f2bb4372107945ee82f" kindref="member">QCP::setMarginValue</ref>(newMargins,<sp/>side,<sp/><ref refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" kindref="member">QCP::getMarginValue</ref>(<ref refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" kindref="member">mMinimumMargins</ref>,<sp/>side));</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref>(newMargins);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal">QSize<sp/><ref refid="class_q_c_p_layout_element_1aebe14fb71f858c0f98caf8d342a9864a" kindref="member">QCPLayoutElement::minimumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1974"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" kindref="member">mMinimumSize</ref>;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal">QSize<sp/><ref refid="class_q_c_p_layout_element_1adbd3a00fec44c977150c6be7329eb801" kindref="member">QCPLayoutElement::maximumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1986"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" kindref="member">mMaximumSize</ref>;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal">QList&lt;QCPLayoutElement*&gt;<sp/><ref refid="class_q_c_p_layout_element_1a311d60d78e62ef8eaaedb1b6ceb9e788" kindref="member">QCPLayoutElement::elements</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1998"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>Q_UNUSED(recursive)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/>return<sp/>QList&lt;<ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>*&gt;();</highlight></codeline>
<codeline lineno="2001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>QCPLayoutElement::<ref refid="class_q_c_p_layout_element_1a9fcf5d0ea19f2c23b2b528bce2c6f095" kindref="member">selectTest</ref>(const<sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2015"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable)</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>if<sp/>(QRectF(<ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref>).contains(pos))</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;parent<sp/>plot<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a1478899e80e8244b411e96ec3b2e5ce2" kindref="member">QCPLayoutElement::parentPlotInitialized</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)</highlight></codeline>
<codeline lineno="2040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(QCPLayoutElement*<sp/>el,<sp/><ref refid="class_q_c_p_layout_element_1a311d60d78e62ef8eaaedb1b6ceb9e788" kindref="member">elements</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!el-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>())</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" kindref="member">initializeParentPlot</ref>(parentPlot);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" kindref="member">QCPLayoutElement::calculateAutoMargin</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)</highlight></codeline>
<codeline lineno="2058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qMax(<ref refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" kindref="member">QCP::getMarginValue</ref>(<ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>,<sp/>side),<sp/><ref refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" kindref="member">QCP::getMarginValue</ref>(<ref refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" kindref="member">mMinimumMargins</ref>,<sp/>side));</highlight></codeline>
<codeline lineno="2060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"></codeline>
<codeline lineno="2089"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><ref refid="class_q_c_p_layout_1a04222e6e1361fd802d48f1a25b7020d4" kindref="member">QCPLayout::QCPLayout</ref>()</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a34ab477e820537ded7bade4399c482fd" kindref="member">QCPLayout::update</ref>(<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" kindref="member">UpdatePhase</ref><sp/>phase)</highlight></codeline>
<codeline lineno="2152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" kindref="member">QCPLayoutElement::update</ref>(phase);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>child<sp/>element<sp/>rects<sp/>according<sp/>to<sp/>layout:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>==<sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" kindref="member">upLayout</ref>)</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>updateLayout();</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>propagate<sp/>update<sp/>call<sp/>to<sp/>child<sp/>elements:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elCount<sp/>=<sp/>elementCount();</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;elCount;<sp/>++i)</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*el<sp/>=<sp/>elementAt(i))</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" kindref="member">update</ref>(phase);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal">QList&lt;QCPLayoutElement*&gt;<sp/><ref refid="class_q_c_p_layout_1a51fe2675b53e829130b229bc1f7b0f99" kindref="member">QCPLayout::elements</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2170"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>elementCount();</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(4,<sp/>7,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>result.reserve(c);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;c;<sp/>++i)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>result.append(elementAt(i));</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recursive)</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;c;<sp/>++i)</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.at(i))</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>result.at(i)-&gt;elements(recursive);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a41e6ac049143866e8f8b4964efab01b2" kindref="member">QCPLayout::simplify</ref>()</highlight></codeline>
<codeline lineno="2197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a2403f684fee3ce47132faaeed00bb066" kindref="member">QCPLayout::removeAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="2210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*el<sp/>=<sp/>takeAt(index))</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>el;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a6c58f537d8086f352576ab7c5b15d0bc" kindref="member">QCPLayout::remove</ref>(QCPLayoutElement<sp/>*element)</highlight></codeline>
<codeline lineno="2229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(take(element))</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>element;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a02883bdf2769b5b227f0232dba1ac4ee" kindref="member">QCPLayout::clear</ref>()</highlight></codeline>
<codeline lineno="2244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=elementCount()-1;<sp/>i&gt;=0;<sp/>--i)</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementAt(i))</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>removeAt(i);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>simplify();</highlight></codeline>
<codeline lineno="2251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a6218cd7e5c0e30077c1aeaffe55b6145" kindref="member">QCPLayout::sizeConstraintsChanged</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2262"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QWidget<sp/>*w<sp/>=<sp/>qobject_cast&lt;QWidget*&gt;(parent()))</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>w-&gt;updateGeometry();</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref><sp/>*l<sp/>=<sp/>qobject_cast&lt;QCPLayout*&gt;(parent()))</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;sizeConstraintsChanged();</highlight></codeline>
<codeline lineno="2267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a165c77f6287ac92e8d03017ad913378b" kindref="member">QCPLayout::updateLayout</ref>()</highlight></codeline>
<codeline lineno="2282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1af6dbbc24156a808da29cd1ec031729a3" kindref="member">QCPLayout::adoptElement</ref>(QCPLayoutElement<sp/>*el)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(el)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" kindref="member">setParentLayerable</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;setParent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!el-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>())</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" kindref="member">initializeParentPlot</ref>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Null<sp/>element<sp/>passed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_1a4afbb4bef0071f72f91afdac4433a18e" kindref="member">QCPLayout::releaseElement</ref>(QCPLayoutElement<sp/>*el)</highlight></codeline>
<codeline lineno="2322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(el)</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" kindref="member">mParentLayout</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" kindref="member">setParentLayerable</ref>(0);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;setParent(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Don&apos;t<sp/>initializeParentPlot(0)<sp/>here,<sp/>because<sp/>layout<sp/>element<sp/>will<sp/>stay<sp/>in<sp/>same<sp/>parent<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Null<sp/>element<sp/>passed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal">QVector&lt;int&gt;<sp/><ref refid="class_q_c_p_layout_1a92d9dcd95e9510b323706ef7fc4ff62e" kindref="member">QCPLayout::getSectionSizes</ref>(QVector&lt;int&gt;<sp/>maxSizes,<sp/>QVector&lt;int&gt;<sp/>minSizes,<sp/>QVector&lt;double&gt;<sp/>stretchFactors,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalSize)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2363"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxSizes.size()<sp/>!=<sp/>minSizes.size()<sp/>||<sp/>minSizes.size()<sp/>!=<sp/>stretchFactors.size())</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Passed<sp/>vector<sp/>sizes<sp/>aren&apos;t<sp/>equal:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxSizes<sp/>&lt;&lt;<sp/>minSizes<sp/>&lt;&lt;<sp/>stretchFactors;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector&lt;int&gt;();</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stretchFactors.isEmpty())</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector&lt;int&gt;();</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sectionCount<sp/>=<sp/>stretchFactors.size();</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>sectionSizes(sectionCount);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>provided<sp/>total<sp/>size<sp/>is<sp/>forced<sp/>smaller<sp/>than<sp/>total<sp/>minimum<sp/>size,<sp/>ignore<sp/>minimum<sp/>sizes<sp/>(squeeze<sp/>sections):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSizeSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sectionCount;<sp/>++i)</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>minSizeSum<sp/>+=<sp/>minSizes.at(i);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalSize<sp/>&lt;<sp/>minSizeSum)</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>stretch<sp/>factors<sp/>are<sp/>minimum<sp/>sizes<sp/>and<sp/>minimum<sp/>sizes<sp/>are<sp/>set<sp/>to<sp/>zero:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sectionCount;<sp/>++i)</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stretchFactors[i]<sp/>=<sp/>minSizes.at(i);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minSizes[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>QList&lt;int&gt;<sp/>minimumLockedSections;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/>QList&lt;int&gt;<sp/>unfinishedSections;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sectionCount;<sp/>++i)</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/>unfinishedSections.append(i);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freeSize<sp/>=<sp/>totalSize;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outerIterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!unfinishedSections.isEmpty()<sp/>&amp;&amp;<sp/>outerIterations<sp/>&lt;<sp/>sectionCount*2)<sp/></highlight><highlight class="comment">//<sp/>the<sp/>iteration<sp/>check<sp/>ist<sp/>just<sp/>a<sp/>failsafe<sp/>in<sp/>case<sp/>something<sp/>really<sp/>strange<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>++outerIterations;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>innerIterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!unfinishedSections.isEmpty()<sp/>&amp;&amp;<sp/>innerIterations<sp/>&lt;<sp/>sectionCount*2)<sp/></highlight><highlight class="comment">//<sp/>the<sp/>iteration<sp/>check<sp/>ist<sp/>just<sp/>a<sp/>failsafe<sp/>in<sp/>case<sp/>something<sp/>really<sp/>strange<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++innerIterations;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>section<sp/>that<sp/>hits<sp/>its<sp/>maximum<sp/>next:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextId<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextMax<sp/>=<sp/>1e12;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;unfinishedSections.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secId<sp/>=<sp/>unfinishedSections.at(i);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hitsMaxAt<sp/>=<sp/>(maxSizes.at(secId)-sectionSizes.at(secId))/stretchFactors.at(secId);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hitsMaxAt<sp/>&lt;<sp/>nextMax)</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextMax<sp/>=<sp/>hitsMaxAt;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextId<sp/>=<sp/>secId;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>that<sp/>maximum<sp/>is<sp/>actually<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>total<sp/>size<sp/>(i.e.<sp/>can<sp/>we<sp/>stretch<sp/>all<sp/>remaining<sp/>sections<sp/>so<sp/>far<sp/>that<sp/>the<sp/>found<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>hits<sp/>its<sp/>maximum,<sp/>without<sp/>exceeding<sp/>the<sp/>total<sp/>size<sp/>when<sp/>we<sp/>add<sp/>up<sp/>all<sp/>sections)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stretchFactorSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;unfinishedSections.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stretchFactorSum<sp/>+=<sp/>stretchFactors.at(unfinishedSections.at(i));</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextMaxLimit<sp/>=<sp/>freeSize/stretchFactorSum;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextMax<sp/>&lt;<sp/>nextMaxLimit)<sp/></highlight><highlight class="comment">//<sp/>next<sp/>maximum<sp/>is<sp/>actually<sp/>hit,<sp/>move<sp/>forward<sp/>to<sp/>that<sp/>point<sp/>and<sp/>fix<sp/>the<sp/>size<sp/>of<sp/>that<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;unfinishedSections.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectionSizes[unfinishedSections.at(i)]<sp/>+=<sp/>nextMax*stretchFactors.at(unfinishedSections.at(i));<sp/></highlight><highlight class="comment">//<sp/>increment<sp/>all<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeSize<sp/>-=<sp/>nextMax*stretchFactors.at(unfinishedSections.at(i));</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unfinishedSections.removeOne(nextId);<sp/></highlight><highlight class="comment">//<sp/>exclude<sp/>the<sp/>section<sp/>that<sp/>is<sp/>now<sp/>at<sp/>maximum<sp/>from<sp/>further<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>next<sp/>maximum<sp/>isn&apos;t<sp/>hit,<sp/>just<sp/>distribute<sp/>rest<sp/>of<sp/>free<sp/>space<sp/>on<sp/>remaining<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;unfinishedSections.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectionSizes[unfinishedSections.at(i)]<sp/>+=<sp/>nextMaxLimit*stretchFactors.at(unfinishedSections.at(i));<sp/></highlight><highlight class="comment">//<sp/>increment<sp/>all<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unfinishedSections.clear();</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(innerIterations<sp/>==<sp/>sectionCount*2)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exceeded<sp/>maximum<sp/>expected<sp/>inner<sp/>iteration<sp/>count,<sp/>layouting<sp/>aborted.<sp/>Input<sp/>was:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxSizes<sp/>&lt;&lt;<sp/>minSizes<sp/>&lt;&lt;<sp/>stretchFactors<sp/>&lt;&lt;<sp/>totalSize;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>check<sp/>whether<sp/>the<sp/>resulting<sp/>section<sp/>sizes<sp/>violate<sp/>minimum<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundMinimumViolation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sectionSizes.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimumLockedSections.contains(i))</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sectionSizes.at(i)<sp/>&lt;<sp/>minSizes.at(i))<sp/></highlight><highlight class="comment">//<sp/>section<sp/>violates<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectionSizes[i]<sp/>=<sp/>minSizes.at(i);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>it<sp/>to<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundMinimumViolation<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>repeat<sp/>the<sp/>whole<sp/>optimization<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimumLockedSections.append(i);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundMinimumViolation)</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freeSize<sp/>=<sp/>totalSize;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sectionCount;<sp/>++i)</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!minimumLockedSections.contains(i))<sp/></highlight><highlight class="comment">//<sp/>only<sp/>put<sp/>sections<sp/>that<sp/>haven&apos;t<sp/>hit<sp/>their<sp/>minimum<sp/>back<sp/>into<sp/>the<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unfinishedSections.append(i);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeSize<sp/>-=<sp/>sectionSizes.at(i);<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>size<sp/>of<sp/>minimum<sp/>locked<sp/>sections<sp/>from<sp/>available<sp/>space<sp/>in<sp/>next<sp/>round</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>all<sp/>section<sp/>sizes<sp/>to<sp/>zero<sp/>that<sp/>are<sp/>in<sp/>unfinished<sp/>sections<sp/>(all<sp/>others<sp/>have<sp/>been<sp/>set<sp/>to<sp/>their<sp/>minimum):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;unfinishedSections.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectionSizes[unfinishedSections.at(i)]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outerIterations<sp/>==<sp/>sectionCount*2)</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exceeded<sp/>maximum<sp/>expected<sp/>outer<sp/>iteration<sp/>count,<sp/>layouting<sp/>aborted.<sp/>Input<sp/>was:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxSizes<sp/>&lt;&lt;<sp/>minSizes<sp/>&lt;&lt;<sp/>stretchFactors<sp/>&lt;&lt;<sp/>totalSize;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/>QVector&lt;int&gt;<sp/>result(sectionCount);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sectionCount;<sp/>++i)</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>result[i]<sp/>=<sp/>qRound(sectionSizes.at(i));</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"></codeline>
<codeline lineno="2499"><highlight class="normal"><ref refid="class_q_c_p_layout_grid_1ab2a4c1587dc8aed4c41c509c8d8d2a64" kindref="member">QCPLayoutGrid::QCPLayoutGrid</ref>()<sp/>:</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/>mColumnSpacing(5),</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/>mRowSpacing(5)</highlight></codeline>
<codeline lineno="2502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><ref refid="class_q_c_p_layout_grid_1af859f4a4db693a21056a9e615f6c4a90" kindref="member">QCPLayoutGrid::~QCPLayoutGrid</ref>()</highlight></codeline>
<codeline lineno="2506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>all<sp/>child<sp/>layout<sp/>elements.<sp/>This<sp/>is<sp/>important<sp/>because<sp/>only<sp/>the<sp/>specific<sp/>layouts<sp/>know<sp/>how</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>handle<sp/>removing<sp/>elements<sp/>(clear<sp/>calls<sp/>virtual<sp/>removeAt<sp/>method<sp/>to<sp/>do<sp/>that).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_1a02883bdf2769b5b227f0232dba1ac4ee" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal">QCPLayoutElement<sp/>*<ref refid="class_q_c_p_layout_grid_1a525f25e6ba43ee228151d074251b4e6a" kindref="member">QCPLayoutGrid::element</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2521"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>row<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.size())</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>column<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.first().size())</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*result<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(column))</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>cell<sp/>is<sp/>empty.<sp/>Row:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Column:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>column;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>column.<sp/>Row:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Column:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>column;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>row.<sp/>Row:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Column:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>column;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">QCPLayoutGrid::rowCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2543"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.size();</highlight></codeline>
<codeline lineno="2545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">QCPLayoutGrid::columnCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2553"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.first().size();</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1adff1a2ca691ed83d2d24a4cd1fe17012" kindref="member">QCPLayoutGrid::addElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column,<sp/>QCPLayoutElement<sp/>*element)</highlight></codeline>
<codeline lineno="2571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element)</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layout_grid_1ab0cf4f7edc9414a3bfaddac0f46dc0a0" kindref="member">hasElement</ref>(row,<sp/>column))</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element-&gt;<ref refid="class_q_c_p_layout_element_1a6235f5384db871fc6e3387a1bc558b0d" kindref="member">layout</ref>())<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>old<sp/>layout<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;<ref refid="class_q_c_p_layout_element_1a6235f5384db871fc6e3387a1bc558b0d" kindref="member">layout</ref>()-&gt;<ref refid="class_q_c_p_layout_1ada26cd17e56472b0b4d7fbbc96873e4c" kindref="member">take</ref>(element);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a886c0dcbabd51a45da399e044552b685" kindref="member">expandTo</ref>(row+1,<sp/>column+1);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>[row][column]<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1a525f25e6ba43ee228151d074251b4e6a" kindref="member">element</ref>;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_1af6dbbc24156a808da29cd1ec031729a3" kindref="member">adoptElement</ref>(element);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>already<sp/>an<sp/>element<sp/>in<sp/>the<sp/>specified<sp/>row/column:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row<sp/>&lt;&lt;<sp/>column;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>add<sp/>null<sp/>element<sp/>to<sp/>row/column:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row<sp/>&lt;&lt;<sp/>column;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1ab0cf4f7edc9414a3bfaddac0f46dc0a0" kindref="member">QCPLayoutGrid::hasElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column)</highlight></codeline>
<codeline lineno="2596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>row<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>()<sp/>&amp;&amp;<sp/>column<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>column<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>())</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(column);</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1ae38f31a71687b9d7ee3104852528fb50" kindref="member">QCPLayoutGrid::setColumnStretchFactor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor)</highlight></codeline>
<codeline lineno="2615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>column<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>())</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factor<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>[column]<sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>stretch<sp/>factor,<sp/>must<sp/>be<sp/>positive:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>factor;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>column:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>column;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a6c2591d1a7e2534ce036989543b49e57" kindref="member">QCPLayoutGrid::setColumnStretchFactors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;double&gt;<sp/>&amp;factors)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factors.size()<sp/>==<sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.size())</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref><sp/>=<sp/>factors;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.at(i)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>stretch<sp/>factor,<sp/>must<sp/>be<sp/>positive:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.at(i);</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Column<sp/>count<sp/>not<sp/>equal<sp/>to<sp/>passed<sp/>stretch<sp/>factor<sp/>count:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>factors;</highlight></codeline>
<codeline lineno="2652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a7b0273de5369bd93d942edbaf5b166ec" kindref="member">QCPLayoutGrid::setRowStretchFactor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor)</highlight></codeline>
<codeline lineno="2666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>row<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>())</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factor<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>[row]<sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>stretch<sp/>factor,<sp/>must<sp/>be<sp/>positive:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>factor;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>row:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>row;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a200b45f9c908f96ebadaa3c8d87a2782" kindref="member">QCPLayoutGrid::setRowStretchFactors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;double&gt;<sp/>&amp;factors)</highlight></codeline>
<codeline lineno="2689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factors.size()<sp/>==<sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.size())</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref><sp/>=<sp/>factors;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.at(i)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>stretch<sp/>factor,<sp/>must<sp/>be<sp/>positive:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.at(i);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Row<sp/>count<sp/>not<sp/>equal<sp/>to<sp/>passed<sp/>stretch<sp/>factor<sp/>count:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>factors;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a3a49272aba32bb0fddc3bb2a45a3dba0" kindref="member">QCPLayoutGrid::setColumnSpacing</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixels)</highlight></codeline>
<codeline lineno="2711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ae9ac48f0791be07ead0a96dbd5622770" kindref="member">mColumnSpacing</ref><sp/>=<sp/>pixels;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1aaef2cd2d456197ee06a208793678e436" kindref="member">QCPLayoutGrid::setRowSpacing</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixels)</highlight></codeline>
<codeline lineno="2721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a8b67f183f4645739cc4c794d75843b40" kindref="member">mRowSpacing</ref><sp/>=<sp/>pixels;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a886c0dcbabd51a45da399e044552b685" kindref="member">QCPLayoutGrid::expandTo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newRowCount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newColumnCount)</highlight></codeline>
<codeline lineno="2740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>rows<sp/>as<sp/>necessary:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>()<sp/>&lt;<sp/>newRowCount)</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.append(QList&lt;QCPLayoutElement*&gt;());</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.append(1);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>rows<sp/>and<sp/>expand<sp/>columns<sp/>as<sp/>necessary:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newColCount<sp/>=<sp/>qMax(<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>(),<sp/>newColumnCount);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(i).size()<sp/>&lt;<sp/>newColCount)</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>[i].append(0);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.size()<sp/>&lt;<sp/>newColCount)</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.append(1);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a48af3dd7c3a653d9c3d7dd99bd02e838" kindref="member">QCPLayoutGrid::insertRow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newIndex)</highlight></codeline>
<codeline lineno="2765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.isEmpty()<sp/>||<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.first().isEmpty())<sp/></highlight><highlight class="comment">//<sp/>if<sp/>grid<sp/>is<sp/>completely<sp/>empty,<sp/>add<sp/>first<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a886c0dcbabd51a45da399e044552b685" kindref="member">expandTo</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newIndex<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>newIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newIndex<sp/>&gt;<sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>())</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>newIndex<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.insert(newIndex,<sp/>1);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>newRow;</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();<sp/>++col)</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/>newRow.append((QCPLayoutElement*)0);</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.insert(newIndex,<sp/>newRow);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a1e880a321dbe8b43b471ccd764433dc4" kindref="member">QCPLayoutGrid::insertColumn</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newIndex)</highlight></codeline>
<codeline lineno="2791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.isEmpty()<sp/>||<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.first().isEmpty())<sp/></highlight><highlight class="comment">//<sp/>if<sp/>grid<sp/>is<sp/>completely<sp/>empty,<sp/>add<sp/>first<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a886c0dcbabd51a45da399e044552b685" kindref="member">expandTo</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newIndex<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>newIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newIndex<sp/>&gt;<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>())</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/>newIndex<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.insert(newIndex,<sp/>1);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();<sp/>++row)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>[row].insert(newIndex,<sp/>(QCPLayoutElement*)0);</highlight></codeline>
<codeline lineno="2806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a07f8dd7d3d61d7345026621d446042a4" kindref="member">QCPLayoutGrid::updateLayout</ref>()</highlight></codeline>
<codeline lineno="2810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>QVector&lt;int&gt;<sp/>minColWidths,<sp/>minRowHeights,<sp/>maxColWidths,<sp/>maxRowHeights;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac645fb9b1c4257b08a9f09dee10b9b3f" kindref="member">getMinimumRowColSizes</ref>(&amp;minColWidths,<sp/>&amp;minRowHeights);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1af348d903e3b8bc416f1fe1b8125d1173" kindref="member">getMaximumRowColSizes</ref>(&amp;maxColWidths,<sp/>&amp;maxRowHeights);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalRowSpacing<sp/>=<sp/>(<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>()-1)<sp/>*<sp/><ref refid="class_q_c_p_layout_grid_1a8b67f183f4645739cc4c794d75843b40" kindref="member">mRowSpacing</ref>;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalColSpacing<sp/>=<sp/>(<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>()-1)<sp/>*<sp/><ref refid="class_q_c_p_layout_grid_1ae9ac48f0791be07ead0a96dbd5622770" kindref="member">mColumnSpacing</ref>;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/>QVector&lt;int&gt;<sp/>colWidths<sp/>=<sp/><ref refid="class_q_c_p_layout_1a92d9dcd95e9510b323706ef7fc4ff62e" kindref="member">getSectionSizes</ref>(maxColWidths,<sp/>minColWidths,<sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.toVector(),<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.width()-totalColSpacing);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/>QVector&lt;int&gt;<sp/>rowHeights<sp/>=<sp/><ref refid="class_q_c_p_layout_1a92d9dcd95e9510b323706ef7fc4ff62e" kindref="member">getSectionSizes</ref>(maxRowHeights,<sp/>minRowHeights,<sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.toVector(),<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.height()-totalRowSpacing);</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>cells<sp/>and<sp/>set<sp/>rects<sp/>accordingly:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yOffset<sp/>=<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.top();</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();<sp/>++row)</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yOffset<sp/>+=<sp/>rowHeights.at(row-1)+<ref refid="class_q_c_p_layout_grid_1a8b67f183f4645739cc4c794d75843b40" kindref="member">mRowSpacing</ref>;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xOffset<sp/>=<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.left();</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();<sp/>++col)</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xOffset<sp/>+=<sp/>colWidths.at(col-1)+<ref refid="class_q_c_p_layout_grid_1ae9ac48f0791be07ead0a96dbd5622770" kindref="member">mColumnSpacing</ref>;</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col))</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col)-&gt;setOuterRect(QRect(xOffset,<sp/>yOffset,<sp/>colWidths.at(col),<sp/>rowHeights.at(row)));</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1aa682b1d36660478f665bab3c64e956a9" kindref="member">QCPLayoutGrid::elementCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2839"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>()*<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();</highlight></codeline>
<codeline lineno="2841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal">QCPLayoutElement<sp/>*<ref refid="class_q_c_p_layout_grid_1a26849ee5c47b4c940e8d65e8462f1065" kindref="member">QCPLayoutGrid::elementAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2845"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_grid_1aa682b1d36660478f665bab3c64e956a9" kindref="member">elementCount</ref>())</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(index<sp/>/<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>()).at(index<sp/>%<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>());</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal">QCPLayoutElement<sp/>*<ref refid="class_q_c_p_layout_grid_1acc1277394ff8a6432e111ff9463e6375" kindref="member">QCPLayoutGrid::takeAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="2854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*el<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1a26849ee5c47b4c940e8d65e8462f1065" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_1a4afbb4bef0071f72f91afdac4433a18e" kindref="member">releaseElement</ref>(el);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>[index<sp/>/<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>()][index<sp/>%<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>()]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>take<sp/>invalid<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a666a9fe9e92054436f9b66eba25cca0c" kindref="member">QCPLayoutGrid::take</ref>(QCPLayoutElement<sp/>*element)</highlight></codeline>
<codeline lineno="2869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element)</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layout_grid_1aa682b1d36660478f665bab3c64e956a9" kindref="member">elementCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a26849ee5c47b4c940e8d65e8462f1065" kindref="member">elementAt</ref>(i)<sp/>==<sp/><ref refid="class_q_c_p_layout_grid_1a525f25e6ba43ee228151d074251b4e6a" kindref="member">element</ref>)</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1acc1277394ff8a6432e111ff9463e6375" kindref="member">takeAt</ref>(i);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Element<sp/>not<sp/>in<sp/>this<sp/>layout,<sp/>couldn&apos;t<sp/>take&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>take<sp/>null<sp/>element&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal">QList&lt;QCPLayoutElement*&gt;<sp/><ref refid="class_q_c_p_layout_grid_1ae9e24e01552f6667b6d05b12a54a4caa" kindref="member">QCPLayoutGrid::elements</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2888"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colC<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowC<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&gt;=<sp/>QT_VERSION_CHECK(4,<sp/>7,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/>result.reserve(colC*rowC);</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;rowC;<sp/>++row)</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;colC;<sp/>++col)</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col));</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recursive)</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>result.size();</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;c;<sp/>++i)</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.at(i))</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>result.at(i)-&gt;elements(recursive);</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1a08bba60e4acd20165526a8fd7f986b58" kindref="member">QCPLayoutGrid::simplify</ref>()</highlight></codeline>
<codeline lineno="2918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>rows<sp/>with<sp/>only<sp/>empty<sp/>cells:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>()-1;<sp/>row&gt;=0;<sp/>--row)</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasElements<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();<sp/>++col)</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col))</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasElements<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasElements)</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a36c85a7eaf342680fb9b8a4977486f16" kindref="member">mRowStretchFactors</ref>.removeAt(row);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.removeAt(row);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.isEmpty())<sp/></highlight><highlight class="comment">//<sp/>removed<sp/>last<sp/>element,<sp/>also<sp/>remove<sp/>stretch<sp/>factor<sp/>(wouldn&apos;t<sp/>happen<sp/>below<sp/>because<sp/>also<sp/>columnCount<sp/>changed<sp/>to<sp/>0<sp/>now)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.clear();</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>columns<sp/>with<sp/>only<sp/>empty<sp/>cells:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>()-1;<sp/>col&gt;=0;<sp/>--col)</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasElements<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();<sp/>++row)</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col))</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasElements<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasElements)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac6aabe62339f94f18b9f8adab94b1840" kindref="member">mColumnStretchFactors</ref>.removeAt(col);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();<sp/>++row)</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>[row].<ref refid="class_q_c_p_layout_1a2403f684fee3ce47132faaeed00bb066" kindref="member">removeAt</ref>(col);</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal">QSize<sp/><ref refid="class_q_c_p_layout_grid_1a67aae235fb4dd9a479aafe07462ef9ee" kindref="member">QCPLayoutGrid::minimumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2963"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/>QVector&lt;int&gt;<sp/>minColWidths,<sp/>minRowHeights;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1ac645fb9b1c4257b08a9f09dee10b9b3f" kindref="member">getMinimumRowColSizes</ref>(&amp;minColWidths,<sp/>&amp;minRowHeights);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/>QSize<sp/>result(0,<sp/>0);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;minColWidths.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>result.rwidth()<sp/>+=<sp/>minColWidths.at(i);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;minRowHeights.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>result.rheight()<sp/>+=<sp/>minRowHeights.at(i);</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/>result.rwidth()<sp/>+=<sp/>qMax(0,<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>()-1)<sp/>*<sp/><ref refid="class_q_c_p_layout_grid_1ae9ac48f0791be07ead0a96dbd5622770" kindref="member">mColumnSpacing</ref><sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.left()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.right();</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/>result.rheight()<sp/>+=<sp/>qMax(0,<sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>()-1)<sp/>*<sp/><ref refid="class_q_c_p_layout_grid_1a8b67f183f4645739cc4c794d75843b40" kindref="member">mRowSpacing</ref><sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.top()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.bottom();</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal">QSize<sp/><ref refid="class_q_c_p_layout_grid_1a1ec4bf5914900a51829a7919f74aa58c" kindref="member">QCPLayoutGrid::maximumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2978"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/>QVector&lt;int&gt;<sp/>maxColWidths,<sp/>maxRowHeights;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1af348d903e3b8bc416f1fe1b8125d1173" kindref="member">getMaximumRowColSizes</ref>(&amp;maxColWidths,<sp/>&amp;maxRowHeights);</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/>QSize<sp/>result(0,<sp/>0);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;maxColWidths.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/>result.setWidth(qMin(result.width()+maxColWidths.at(i),<sp/>QWIDGETSIZE_MAX));</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;maxRowHeights.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/>result.setHeight(qMin(result.height()+maxRowHeights.at(i),<sp/>QWIDGETSIZE_MAX));</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>result.rwidth()<sp/>+=<sp/>qMax(0,<sp/><ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>()-1)<sp/>*<sp/><ref refid="class_q_c_p_layout_grid_1ae9ac48f0791be07ead0a96dbd5622770" kindref="member">mColumnSpacing</ref><sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.left()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.right();</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/>result.rheight()<sp/>+=<sp/>qMax(0,<sp/><ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>()-1)<sp/>*<sp/><ref refid="class_q_c_p_layout_grid_1a8b67f183f4645739cc4c794d75843b40" kindref="member">mRowSpacing</ref><sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.top()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.bottom();</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1ac645fb9b1c4257b08a9f09dee10b9b3f" kindref="member">QCPLayoutGrid::getMinimumRowColSizes</ref>(QVector&lt;int&gt;<sp/>*minColWidths,<sp/>QVector&lt;int&gt;<sp/>*minRowHeights)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3005"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/>*minColWidths<sp/>=<sp/>QVector&lt;int&gt;(<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>*minRowHeights<sp/>=<sp/>QVector&lt;int&gt;(<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();<sp/>++row)</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();<sp/>++col)</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col))</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>minHint<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col)-&gt;minimumSizeHint();</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>min<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col)-&gt;minimumSize();</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">(min.width()<sp/>&gt;<sp/>0<sp/>?<sp/>min.width()<sp/>:<sp/>minHint.width(),<sp/>min.height()<sp/>&gt;<sp/>0<sp/>?<sp/>min.height()<sp/>:<sp/>minHint.height());</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minColWidths-&gt;at(col)<sp/>&lt;<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.width())</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*minColWidths)[col]<sp/>=<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.width();</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minRowHeights-&gt;at(row)<sp/>&lt;<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.height())</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*minRowHeights)[row]<sp/>=<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.height();</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1af348d903e3b8bc416f1fe1b8125d1173" kindref="member">QCPLayoutGrid::getMaximumRowColSizes</ref>(QVector&lt;int&gt;<sp/>*maxColWidths,<sp/>QVector&lt;int&gt;<sp/>*maxRowHeights)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3039"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/>*maxColWidths<sp/>=<sp/>QVector&lt;int&gt;(<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>(),<sp/>QWIDGETSIZE_MAX);</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/>*maxRowHeights<sp/>=<sp/>QVector&lt;int&gt;(<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>(),<sp/>QWIDGETSIZE_MAX);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row=0;<sp/>row&lt;<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>();<sp/>++row)</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;<ref refid="class_q_c_p_layout_grid_1ac39074eafd148b82d0762090f258189e" kindref="member">columnCount</ref>();<sp/>++col)</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col))</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>maxHint<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col)-&gt;maximumSizeHint();</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>max<sp/>=<sp/><ref refid="class_q_c_p_layout_grid_1a3577d3855bf8ad20ef9079291a49f397" kindref="member">mElements</ref>.at(row).at(col)-&gt;maximumSize();</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">(max.width()<sp/>&lt;<sp/>QWIDGETSIZE_MAX<sp/>?<sp/>max.width()<sp/>:<sp/>maxHint.width(),<sp/>max.height()<sp/>&lt;<sp/>QWIDGETSIZE_MAX<sp/>?<sp/>max.height()<sp/>:<sp/>maxHint.height());</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxColWidths-&gt;at(col)<sp/>&gt;<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.width())</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*maxColWidths)[col]<sp/>=<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.width();</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxRowHeights-&gt;at(row)<sp/>&gt;<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.height())</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*maxRowHeights)[row]<sp/>=<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">.height();</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"></codeline>
<codeline lineno="3082"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><ref refid="class_q_c_p_layout_inset_1a3ad984f3221735374cc5dee14356a7dd" kindref="member">QCPLayoutInset::QCPLayoutInset</ref>()</highlight></codeline>
<codeline lineno="3096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><ref refid="class_q_c_p_layout_inset_1a7d0e5647b2e92df92abab532441db112" kindref="member">QCPLayoutInset::~QCPLayoutInset</ref>()</highlight></codeline>
<codeline lineno="3100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>all<sp/>child<sp/>layout<sp/>elements.<sp/>This<sp/>is<sp/>important<sp/>because<sp/>only<sp/>the<sp/>specific<sp/>layouts<sp/>know<sp/>how</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>handle<sp/>removing<sp/>elements<sp/>(clear<sp/>calls<sp/>virtual<sp/>removeAt<sp/>method<sp/>to<sp/>do<sp/>that).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_1a02883bdf2769b5b227f0232dba1ac4ee" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="3104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192" kindref="member">QCPLayoutInset::InsetPlacement</ref><sp/><ref refid="class_q_c_p_layout_inset_1a8472ff2508807513e4cb0ce0c1d652b3" kindref="member">QCPLayoutInset::insetPlacement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3110"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a57a0a4e445cc78eada29765ecf092abe" kindref="member">mInsetPlacement</ref>.at(index);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>element<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa4802986ea2cea457f932b115acba59e" kindref="member">ipFree</ref>;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal">Qt::Alignment<sp/><ref refid="class_q_c_p_layout_inset_1a78c0c494bb5728237cebb63ae8ef5c58" kindref="member">QCPLayoutInset::insetAlignment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3125"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a55e9b84c310136ff985a6544184ab64a" kindref="member">mInsetAlignment</ref>.at(index);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>element<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal">QRectF<sp/><ref refid="class_q_c_p_layout_inset_1a5ec7037b3b8d20fbf9560e01779b1442" kindref="member">QCPLayoutInset::insetRect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3140"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.at(index);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>element<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRectF();</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a63298830744d5d8c5345511c00fd2144" kindref="member">QCPLayoutInset::setInsetPlacement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192" kindref="member">QCPLayoutInset::InsetPlacement</ref><sp/>placement)</highlight></codeline>
<codeline lineno="3156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a57a0a4e445cc78eada29765ecf092abe" kindref="member">mInsetPlacement</ref>[index]<sp/>=<sp/>placement;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>element<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a62882a4f9ad58bb0f53da12fde022abe" kindref="member">QCPLayoutInset::setInsetAlignment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>Qt::Alignment<sp/>alignment)</highlight></codeline>
<codeline lineno="3172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a55e9b84c310136ff985a6544184ab64a" kindref="member">mInsetAlignment</ref>[index]<sp/>=<sp/>alignment;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>element<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight></codeline>
<codeline lineno="3190"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1aa487c8378a6f9533567a2e6430099dc3" kindref="member">QCPLayoutInset::setInsetRect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>[index]<sp/>=<sp/><ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>element<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a7b33fdd51b18e6db7cea9bfb2d263b4a" kindref="member">QCPLayoutInset::updateLayout</ref>()</highlight></codeline>
<codeline lineno="3200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/><ref refid="class_q_c_p_layout_inset_1a5ec7037b3b8d20fbf9560e01779b1442" kindref="member">insetRect</ref>;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>finalMinSize,<sp/>finalMaxSize;</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>minSizeHint<sp/>=<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;minimumSizeHint();</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>maxSizeHint<sp/>=<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;maximumSizeHint();</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>finalMinSize.setWidth(<ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;minimumSize().width()<sp/>&gt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;minimumSize().width()<sp/>:<sp/>minSizeHint.width());</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/>finalMinSize.setHeight(<ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;minimumSize().height()<sp/>&gt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;minimumSize().height()<sp/>:<sp/>minSizeHint.height());</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/>finalMaxSize.setWidth(<ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;maximumSize().width()<sp/>&lt;<sp/>QWIDGETSIZE_MAX<sp/>?<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;maximumSize().width()<sp/>:<sp/>maxSizeHint.width());</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>finalMaxSize.setHeight(<ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;maximumSize().height()<sp/>&lt;<sp/>QWIDGETSIZE_MAX<sp/>?<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;maximumSize().height()<sp/>:<sp/>maxSizeHint.height());</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1a57a0a4e445cc78eada29765ecf092abe" kindref="member">mInsetPlacement</ref>.at(i)<sp/>==<sp/><ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa4802986ea2cea457f932b115acba59e" kindref="member">ipFree</ref>)</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>insetRect<sp/>=<sp/>QRect(<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().x()+<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().width()*<ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.at(i).x(),</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().y()+<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().height()*<ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.at(i).y(),</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().width()*<ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.at(i).width(),</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().height()*<ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.at(i).height());</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insetRect.size().width()<sp/>&lt;<sp/>finalMinSize.width())</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insetRect.setWidth(finalMinSize.width());</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insetRect.size().height()<sp/>&lt;<sp/>finalMinSize.height())</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insetRect.setHeight(finalMinSize.height());</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insetRect.size().width()<sp/>&gt;<sp/>finalMaxSize.width())</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insetRect.setWidth(finalMaxSize.width());</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insetRect.size().height()<sp/>&gt;<sp/>finalMaxSize.height())</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insetRect.setHeight(finalMaxSize.height());</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1a57a0a4e445cc78eada29765ecf092abe" kindref="member">mInsetPlacement</ref>.at(i)<sp/>==<sp/><ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa81e7df4a785ddee2229a8f47c46e817" kindref="member">ipBorderAligned</ref>)</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>insetRect.setSize(finalMinSize);</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Qt::Alignment<sp/>al<sp/>=<sp/><ref refid="class_q_c_p_layout_inset_1a55e9b84c310136ff985a6544184ab64a" kindref="member">mInsetAlignment</ref>.at(i);</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(al.testFlag(Qt::AlignLeft))<sp/>insetRect.moveLeft(rect().x());</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(al.testFlag(Qt::AlignRight))<sp/>insetRect.moveRight(rect().x()+<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().width());</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>insetRect.moveLeft(<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().x()+<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().width()*0.5-finalMinSize.width()*0.5);<sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>Qt::AlignHCenter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(al.testFlag(Qt::AlignTop))<sp/>insetRect.moveTop(rect().y());</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(al.testFlag(Qt::AlignBottom))<sp/>insetRect.moveBottom(rect().y()+<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().height());</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>insetRect.moveTop(<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().y()+<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().height()*0.5-finalMinSize.height()*0.5);<sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>Qt::AlignVCenter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;setOuterRect(insetRect);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a2087b97b9266fd9e0f571a8d3cf709f9" kindref="member">QCPLayoutInset::elementCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3242"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.size();</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal">QCPLayoutElement<sp/>*<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">QCPLayoutInset::elementAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3248"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.size())</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(index);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal">QCPLayoutElement<sp/>*<ref refid="class_q_c_p_layout_inset_1ad6756a3b507e20496aaf7f5ca16c47d1" kindref="member">QCPLayoutInset::takeAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="3257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*el<sp/>=<sp/><ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(index))</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_1a4afbb4bef0071f72f91afdac4433a18e" kindref="member">releaseElement</ref>(el);</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.removeAt(index);</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a57a0a4e445cc78eada29765ecf092abe" kindref="member">mInsetPlacement</ref>.removeAt(index);</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a55e9b84c310136ff985a6544184ab64a" kindref="member">mInsetAlignment</ref>.removeAt(index);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.removeAt(index);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>el;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>take<sp/>invalid<sp/>index:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1a9ac707ccff650633b97f52dd5cddcf49" kindref="member">QCPLayoutInset::take</ref>(QCPLayoutElement<sp/>*element)</highlight></codeline>
<codeline lineno="3275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element)</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layout_inset_1a2087b97b9266fd9e0f571a8d3cf709f9" kindref="member">elementCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1ab096d07b08f9b5455647f3ba7ff60e27" kindref="member">elementAt</ref>(i)<sp/>==<sp/>element)</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1ad6756a3b507e20496aaf7f5ca16c47d1" kindref="member">takeAt</ref>(i);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Element<sp/>not<sp/>in<sp/>this<sp/>layout,<sp/>couldn&apos;t<sp/>take&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>take<sp/>null<sp/>element&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1ab5a2f2b88c05e369fd7da9583d17aa3a" kindref="member">QCPLayoutInset::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3302"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/>for<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inset<sp/>layout<sp/>shall<sp/>only<sp/>return<sp/>positive<sp/>selectTest,<sp/>if<sp/>actually<sp/>an<sp/>inset<sp/>object<sp/>is<sp/>at<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>it<sp/>would<sp/>block<sp/>the<sp/>entire<sp/>underlying<sp/>QCPAxisRect<sp/>with<sp/>its<sp/>surface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;realVisibility()<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.at(i)-&gt;selectTest(pos,<sp/>onlySelectable)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1ad61529eb576af7f04dff94abb10c745a" kindref="member">QCPLayoutInset::addElement</ref>(QCPLayoutElement<sp/>*element,<sp/>Qt::Alignment<sp/>alignment)</highlight></codeline>
<codeline lineno="3329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element)</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element-&gt;<ref refid="class_q_c_p_layout_element_1a6235f5384db871fc6e3387a1bc558b0d" kindref="member">layout</ref>())<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>old<sp/>layout<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;<ref refid="class_q_c_p_layout_element_1a6235f5384db871fc6e3387a1bc558b0d" kindref="member">layout</ref>()-&gt;<ref refid="class_q_c_p_layout_1ada26cd17e56472b0b4d7fbbc96873e4c" kindref="member">take</ref>(element);</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.append(element);</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a57a0a4e445cc78eada29765ecf092abe" kindref="member">mInsetPlacement</ref>.append(<ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa81e7df4a785ddee2229a8f47c46e817" kindref="member">ipBorderAligned</ref>);</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a55e9b84c310136ff985a6544184ab64a" kindref="member">mInsetAlignment</ref>.append(alignment);</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.append(QRectF(0.6,<sp/>0.6,<sp/>0.4,<sp/>0.4));</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_1af6dbbc24156a808da29cd1ec031729a3" kindref="member">adoptElement</ref>(element);</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>add<sp/>null<sp/>element&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_inset_1ad61529eb576af7f04dff94abb10c745a" kindref="member">QCPLayoutInset::addElement</ref>(QCPLayoutElement<sp/>*element,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="3355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element)</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element-&gt;<ref refid="class_q_c_p_layout_element_1a6235f5384db871fc6e3387a1bc558b0d" kindref="member">layout</ref>())<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>old<sp/>layout<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element-&gt;<ref refid="class_q_c_p_layout_element_1a6235f5384db871fc6e3387a1bc558b0d" kindref="member">layout</ref>()-&gt;<ref refid="class_q_c_p_layout_1ada26cd17e56472b0b4d7fbbc96873e4c" kindref="member">take</ref>(element);</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a8fff7eae9a1be9a5c1e544fb379f682f" kindref="member">mElements</ref>.append(element);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a57a0a4e445cc78eada29765ecf092abe" kindref="member">mInsetPlacement</ref>.append(<ref refid="class_q_c_p_layout_inset_1a8b9e17d9a2768293d2a7d72f5e298192aa4802986ea2cea457f932b115acba59e" kindref="member">ipFree</ref>);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1a55e9b84c310136ff985a6544184ab64a" kindref="member">mInsetAlignment</ref>.append(Qt::AlignRight|Qt::AlignTop);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_inset_1aaa8f6b5029458f3d97a65239524a2b33" kindref="member">mInsetRect</ref>.append(rect);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_1af6dbbc24156a808da29cd1ec031729a3" kindref="member">adoptElement</ref>(element);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>add<sp/>null<sp/>element&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"></codeline>
<codeline lineno="3397"><highlight class="normal"><ref refid="class_q_c_p_line_ending_1af2eaf8123b000d97fbd11929c669f61b" kindref="member">QCPLineEnding::QCPLineEnding</ref>()<sp/>:</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/>mStyle(esNone),</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/>mWidth(8),</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/>mLength(10),</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>mInverted(false)</highlight></codeline>
<codeline lineno="3402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><ref refid="class_q_c_p_line_ending_1af2eaf8123b000d97fbd11929c669f61b" kindref="member">QCPLineEnding::QCPLineEnding</ref>(<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">QCPLineEnding::EndingStyle</ref><sp/>style,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted)<sp/>:</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/>mStyle(style),</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/>mWidth(width),</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/>mLength(length),</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/>mInverted(inverted)</highlight></codeline>
<codeline lineno="3413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a56953b9cb8ed1bed0f025c3935f16910" kindref="member">QCPLineEnding::setStyle</ref>(<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5" kindref="member">QCPLineEnding::EndingStyle</ref><sp/>style)</highlight></codeline>
<codeline lineno="3420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending_1a4696fc9117b60f1ca7690fcd2ba56611" kindref="member">mStyle</ref><sp/>=<sp/><ref refid="class_q_c_p_line_ending_1aea324dbfddbca9895ca8a3a968671299" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a26dc020ea985a72cc25881ce2115e34e" kindref="member">QCPLineEnding::setWidth</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="3431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref><sp/>=<sp/><ref refid="class_q_c_p_line_ending_1a028328ee3fb139a40acaf65fb56edf67" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1ae36fa01763751cd64b7f56c3507e935a" kindref="member">QCPLineEnding::setLength</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="3442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" kindref="member">mLength</ref><sp/>=<sp/><ref refid="class_q_c_p_line_ending_1a1744315d7b73f6e7ead3621e2cb18c28" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="3444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a580e4e2360b35ebb8d68f3494aa2335d" kindref="member">QCPLineEnding::setInverted</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inverted)</highlight></codeline>
<codeline lineno="3455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" kindref="member">mInverted</ref><sp/>=<sp/><ref refid="class_q_c_p_line_ending_1aa4ffbb182cbc89fc3d92eb348630502c" kindref="member">inverted</ref>;</highlight></codeline>
<codeline lineno="3457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a586b45cf738881a70119e353dc1ed59c" kindref="member">QCPLineEnding::boundingDistance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3469"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_line_ending_1a4696fc9117b60f1ca7690fcd2ba56611" kindref="member">mStyle</ref>)</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">esNone</ref>:</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" kindref="member">esFlatArrow</ref>:</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" kindref="member">esSpikeArrow</ref>:</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a61f78ee8f375fb21cb9d250687bbcbd2" kindref="member">esLineArrow</ref>:</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2b2cc96e757ca9bcd91fb70221ed43ab" kindref="member">esSkewedBar</ref>:</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(<ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref>*<ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref>+<ref refid="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" kindref="member">mLength</ref>*<ref refid="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" kindref="member">mLength</ref>);<sp/></highlight><highlight class="comment">//<sp/>items<sp/>that<sp/>have<sp/>width<sp/>and<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" kindref="member">esDisc</ref>:</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" kindref="member">esSquare</ref>:</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" kindref="member">esDiamond</ref>:</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" kindref="member">esBar</ref>:</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" kindref="member">esHalfBar</ref>:</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref>*1.42;<sp/></highlight><highlight class="comment">//<sp/>items<sp/>that<sp/>only<sp/>have<sp/>a<sp/>width<sp/>-&gt;<sp/>width*sqrt(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a6a528e6dc5aabe1077a573b045715f03" kindref="member">QCPLineEnding::realLength</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3504"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_line_ending_1a4696fc9117b60f1ca7690fcd2ba56611" kindref="member">mStyle</ref>)</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">esNone</ref>:</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a61f78ee8f375fb21cb9d250687bbcbd2" kindref="member">esLineArrow</ref>:</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2b2cc96e757ca9bcd91fb70221ed43ab" kindref="member">esSkewedBar</ref>:</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" kindref="member">esBar</ref>:</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" kindref="member">esHalfBar</ref>:</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" kindref="member">esFlatArrow</ref>:</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" kindref="member">mLength</ref>;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" kindref="member">esDisc</ref>:</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" kindref="member">esSquare</ref>:</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" kindref="member">esDiamond</ref>:</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref>*0.5;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" kindref="member">esSpikeArrow</ref>:</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" kindref="member">mLength</ref>*0.8;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">QCPLineEnding::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;dir)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3534"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_line_ending_1a4696fc9117b60f1ca7690fcd2ba56611" kindref="member">mStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">esNone</ref>)</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/>QVector2D<sp/>lengthVec(dir.normalized());</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthVec.isNull())</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/>lengthVec<sp/>=<sp/>QVector2D(1,<sp/>0);</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/>QVector2D<sp/>widthVec(-lengthVec.y(),<sp/>lengthVec.x());</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/>lengthVec<sp/>*=<sp/>(float)(<ref refid="class_q_c_p_line_ending_1ae8e1e2566b96c05736cd92662dba8af8" kindref="member">mLength</ref>*(<ref refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" kindref="member">mInverted</ref><sp/>?<sp/>-1<sp/>:<sp/>1));</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/>widthVec<sp/>*=<sp/>(float)(<ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref>*0.5*(<ref refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" kindref="member">mInverted</ref><sp/>?<sp/>-1<sp/>:<sp/>1));</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/>QPen<sp/>penBackup<sp/>=<sp/>painter-&gt;pen();</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/>QBrush<sp/>brushBackup<sp/>=<sp/>painter-&gt;brush();</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>QPen<sp/>miterPen<sp/>=<sp/>penBackup;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/>miterPen.setJoinStyle(Qt::MiterJoin);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>arrow<sp/>heads<sp/>spikey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/>QBrush<sp/>brush(painter-&gt;pen().color(),<sp/>Qt::SolidPattern);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_line_ending_1a4696fc9117b60f1ca7690fcd2ba56611" kindref="member">mStyle</ref>)</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">esNone</ref>:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a3d7dcea2f100671727c3417142154f8f" kindref="member">esFlatArrow</ref>:</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>points[3]<sp/>=<sp/>{pos.toPointF(),</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-lengthVec+widthVec).toPointF(),</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-lengthVec-widthVec).toPointF()</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(miterPen);</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brush);</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawConvexPolygon(points,<sp/>3);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brushBackup);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(penBackup);</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ab9964d0d03f812d1e79de15edbeb2cbf" kindref="member">esSpikeArrow</ref>:</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>points[4]<sp/>=<sp/>{pos.toPointF(),</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-lengthVec+widthVec).toPointF(),</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-lengthVec*0.8f).toPointF(),</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-lengthVec-widthVec).toPointF()</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(miterPen);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brush);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawConvexPolygon(points,<sp/>4);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brushBackup);</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(penBackup);</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a61f78ee8f375fb21cb9d250687bbcbd2" kindref="member">esLineArrow</ref>:</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>points[3]<sp/>=<sp/>{(pos-lengthVec+widthVec).toPointF(),</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.toPointF(),</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-lengthVec-widthVec).toPointF()</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(miterPen);</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(points,<sp/>3);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(penBackup);</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae5a3414916817258bcc6dddd605e8f5c" kindref="member">esDisc</ref>:</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brush);</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(pos.toPointF(),<sp/><sp/><ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_line_ending_1aca89d21341133c20dc6825c33a5eac48" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brushBackup);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5ae1836502fa43d8990bb62b2d493a140a" kindref="member">esSquare</ref>:</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVector2D<sp/>widthVecPerp(-widthVec.y(),<sp/>widthVec.x());</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>points[4]<sp/>=<sp/>{(pos-widthVecPerp+widthVec).toPointF(),</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-widthVecPerp-widthVec).toPointF(),</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos+widthVecPerp-widthVec).toPointF(),</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos+widthVecPerp+widthVec).toPointF()</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(miterPen);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brush);</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawConvexPolygon(points,<sp/>4);</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brushBackup);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(penBackup);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a378fe5a8b768411b0bc1765210fe7200" kindref="member">esDiamond</ref>:</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVector2D<sp/>widthVecPerp(-widthVec.y(),<sp/>widthVec.x());</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>points[4]<sp/>=<sp/>{(pos-widthVecPerp).toPointF(),</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-widthVec).toPointF(),</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos+widthVecPerp).toPointF(),</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos+widthVec).toPointF()</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(miterPen);</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brush);</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawConvexPolygon(points,<sp/>4);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(brushBackup);</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(penBackup);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2cf543bbca332df26d89bf779f50469f" kindref="member">esBar</ref>:</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>((pos+widthVec).toPointF(),<sp/>(pos-widthVec).toPointF());</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" kindref="member">esHalfBar</ref>:</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>((pos+widthVec).toPointF(),<sp/>pos.toPointF());</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a2b2cc96e757ca9bcd91fb70221ed43ab" kindref="member">esSkewedBar</ref>:</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(painter-&gt;pen().widthF())<sp/>&amp;&amp;<sp/>!painter-&gt;<ref refid="class_q_c_p_painter_1a99b89eaf5363faaa1e1e6162856f436c" kindref="member">modes</ref>().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" kindref="member">QCPPainter::pmNonCosmetic</ref>))</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>drawing<sp/>with<sp/>cosmetic<sp/>pen<sp/>(perfectly<sp/>thin<sp/>stroke,<sp/>happens<sp/>only<sp/>in<sp/>vector<sp/>exports),<sp/>draw<sp/>bar<sp/>exactly<sp/>on<sp/>tip<sp/>of<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>((pos+widthVec+lengthVec*0.2f*(<ref refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" kindref="member">mInverted</ref>?-1:1)).toPointF(),</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-widthVec-lengthVec*0.2f*(<ref refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" kindref="member">mInverted</ref>?-1:1)).toPointF());</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>drawing<sp/>with<sp/>thick<sp/>(non-cosmetic)<sp/>pen,<sp/>shift<sp/>bar<sp/>a<sp/>little<sp/>in<sp/>line<sp/>direction<sp/>to<sp/>prevent<sp/>line<sp/>from<sp/>sticking<sp/>through<sp/>bar<sp/>slightly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>((pos+widthVec+lengthVec*0.2f*(<ref refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" kindref="member">mInverted</ref>?-1:1)+dir.normalized()*qMax(1.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)painter-&gt;pen().widthF())*0.5f).toPointF(),</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pos-widthVec-lengthVec*0.2f*(<ref refid="class_q_c_p_line_ending_1a91306fe771d54c955e0af21af14349d5" kindref="member">mInverted</ref>?-1:1)+dir.normalized()*qMax(1.0f,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)painter-&gt;pen().widthF())*0.5f).toPointF());</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3661"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">QCPLineEnding::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3662"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">draw</ref>(painter,<sp/>pos,<sp/>QVector2D(qCos(angle),<sp/>qSin(angle)));</highlight></codeline>
<codeline lineno="3664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"></codeline>
<codeline lineno="3689"><highlight class="normal"><ref refid="class_q_c_p_grid_1acd1cdd2909625388a13048b698494a17" kindref="member">QCPGrid::QCPGrid</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*parentAxis)<sp/>:</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>(parentAxis-&gt;parentPlot(),<sp/>QString(),<sp/>parentAxis),</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/>mParentAxis(parentAxis)</highlight></codeline>
<codeline lineno="3692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>this<sp/>is<sp/>called<sp/>in<sp/>QCPAxis<sp/>constructor,<sp/>so<sp/>parentAxis<sp/>members<sp/>should<sp/>not<sp/>be<sp/>accessed/called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/>setParent(parentAxis);</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/>setPen(QPen(QColor(200,200,200),<sp/>0,<sp/>Qt::DotLine));</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/>setSubGridPen(QPen(QColor(220,220,220),<sp/>0,<sp/>Qt::DotLine));</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/>setZeroLinePen(QPen(QColor(200,200,200),<sp/>0,<sp/>Qt::SolidLine));</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/>setSubGridVisible(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/>setAntialiased(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/>setAntialiasedSubGrid(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/>setAntialiasedZeroLine(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1ad4ad6bf714ec45e08845456355a1b700" kindref="member">QCPGrid::setSubGridVisible</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible)</highlight></codeline>
<codeline lineno="3710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_grid_1a4e4a0400d6319bb44c06341f6298c87b" kindref="member">mSubGridVisible</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1a10a3cc92e0fa63e4a929e61d34e275a7" kindref="member">visible</ref>;</highlight></codeline>
<codeline lineno="3712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a5692310ba183721a413d60951407d114" kindref="member">QCPGrid::setAntialiasedSubGrid</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="3718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_grid_1a71b7051f833f0c5de3094998d6afdd87" kindref="member">mAntialiasedSubGrid</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a3cc6d54647393ee71afb6da56af07aa4" kindref="member">QCPGrid::setAntialiasedZeroLine</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="3726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_grid_1a8c0df56ae86440408c050895dcdb922b" kindref="member">mAntialiasedZeroLine</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1aa05ab9816ffb440908171e45e833b593" kindref="member">QCPGrid::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="3734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_grid_1a1cdc4a3bccf6a40c2d4360def9fefa40" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_grid_1aca20b67548e3ae31fd02e6398ffd6cb9" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a9edd3593f384d1f0b0202a39cef4453d" kindref="member">QCPGrid::setSubGridPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="3742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_grid_1aa9004bc139ad3ea92629f0aaae81d83f" kindref="member">mSubGridPen</ref><sp/>=<sp/><ref refid="class_q_c_p_grid_1aca20b67548e3ae31fd02e6398ffd6cb9" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a209f40fdb252397b418b82d3494d8ea0" kindref="member">QCPGrid::setZeroLinePen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="3753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_grid_1a379481871f17655c27eda30af233554f" kindref="member">mZeroLinePen</ref><sp/>=<sp/><ref refid="class_q_c_p_grid_1aca20b67548e3ae31fd02e6398ffd6cb9" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="3755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a9916f5e38b4d6cae446537aeb47c7272" kindref="member">QCPGrid::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3771"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4fbb37118d62288af0ca601ff2b07a2f" kindref="member">QCP::aeGrid</ref>);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1ad009c23f96078616aa4f66a750974b23" kindref="member">QCPGrid::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="3781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>parent<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_grid_1a4e4a0400d6319bb44c06341f6298c87b" kindref="member">mSubGridVisible</ref>)</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_grid_1afa5d9d12de419e881f381f2ab7cb414d" kindref="member">drawSubGridLines</ref>(painter);</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_grid_1a3aff10e993f6625e255c19e4f97a09d8" kindref="member">drawGridLines</ref>(painter);</highlight></codeline>
<codeline lineno="3787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1a3aff10e993f6625e255c19e4f97a09d8" kindref="member">QCPGrid::drawGridLines</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3796"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>parent<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowTick<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref>;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highTick<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref>;</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t;<sp/></highlight><highlight class="comment">//<sp/>helper<sp/>variable,<sp/>result<sp/>of<sp/>coordinate-to-pixel<sp/>transforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>zeroline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zeroLineIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_grid_1a379481871f17655c27eda30af233554f" kindref="member">mZeroLinePen</ref>.style()<sp/>!=<sp/>Qt::NoPen<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_grid_1a8c0df56ae86440408c050895dcdb922b" kindref="member">mAntialiasedZeroLine</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca261f8ea78cf3c9561726223ffa33dc12" kindref="member">QCP::aeZeroLine</ref>);</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_grid_1a379481871f17655c27eda30af233554f" kindref="member">mZeroLinePen</ref>);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()*1E-6;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>comparing<sp/>double<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=lowTick;<sp/>i<sp/>&lt;=<sp/>highTick;<sp/>++i)</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qAbs(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i))<sp/>&lt;<sp/>epsilon)</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeroLineIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i));<sp/></highlight><highlight class="comment">//<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>(),<sp/>t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1ac45aef1eb75cea46b241b6303028a607" kindref="member">top</ref>()));</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>grid<sp/>lines:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_grid_1a9916f5e38b4d6cae446537aeb47c7272" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_grid_1a1cdc4a3bccf6a40c2d4360def9fefa40" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=lowTick;<sp/>i<sp/>&lt;=<sp/>highTick;<sp/>++i)</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>zeroLineIndex)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>a<sp/>gridline<sp/>on<sp/>top<sp/>of<sp/>the<sp/>zeroline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i));<sp/></highlight><highlight class="comment">//<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>(),<sp/>t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1ac45aef1eb75cea46b241b6303028a607" kindref="member">top</ref>()));</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>zeroline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zeroLineIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_grid_1a379481871f17655c27eda30af233554f" kindref="member">mZeroLinePen</ref>.style()<sp/>!=<sp/>Qt::NoPen<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_grid_1a8c0df56ae86440408c050895dcdb922b" kindref="member">mAntialiasedZeroLine</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca261f8ea78cf3c9561726223ffa33dc12" kindref="member">QCP::aeZeroLine</ref>);</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_grid_1a379481871f17655c27eda30af233554f" kindref="member">mZeroLinePen</ref>);</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()*1E-6;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>comparing<sp/>double<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=lowTick;<sp/>i<sp/>&lt;=<sp/>highTick;<sp/>++i)</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qAbs(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i))<sp/>&lt;<sp/>epsilon)</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeroLineIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i));<sp/></highlight><highlight class="comment">//<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>(),<sp/>t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a6d0f989fc552aa2b563cf82f8fc81e61" kindref="member">right</ref>(),<sp/>t));</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>grid<sp/>lines:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_grid_1a9916f5e38b4d6cae446537aeb47c7272" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_grid_1a1cdc4a3bccf6a40c2d4360def9fefa40" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=lowTick;<sp/>i<sp/>&lt;=<sp/>highTick;<sp/>++i)</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>zeroLineIndex)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>a<sp/>gridline<sp/>on<sp/>top<sp/>of<sp/>the<sp/>zeroline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i));<sp/></highlight><highlight class="comment">//<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>(),<sp/>t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a6d0f989fc552aa2b563cf82f8fc81e61" kindref="member">right</ref>(),<sp/>t));</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_grid_1afa5d9d12de419e881f381f2ab7cb414d" kindref="member">QCPGrid::drawSubGridLines</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3870"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>parent<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_grid_1a71b7051f833f0c5de3094998d6afdd87" kindref="member">mAntialiasedSubGrid</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caaedf83369188a15a69f92bb1d85ca97b" kindref="member">QCP::aeSubGrid</ref>);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t;<sp/></highlight><highlight class="comment">//<sp/>helper<sp/>variable,<sp/>result<sp/>of<sp/>coordinate-to-pixel<sp/>transforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_grid_1aa9004bc139ad3ea92629f0aaae81d83f" kindref="member">mSubGridPen</ref>);</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.at(i));<sp/></highlight><highlight class="comment">//<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>(),<sp/>t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1ac45aef1eb75cea46b241b6303028a607" kindref="member">top</ref>()));</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.at(i));<sp/></highlight><highlight class="comment">//<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(<ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>(),<sp/>t,<sp/><ref refid="class_q_c_p_grid_1a9a8a76731e6e737b65b929fd1995cc88" kindref="member">mParentAxis</ref>-&gt;<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a6d0f989fc552aa2b563cf82f8fc81e61" kindref="member">right</ref>(),<sp/>t));</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"></codeline>
<codeline lineno="3916"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><ref refid="class_q_c_p_axis_1ac62c042968bae0e6d474fcfc57c9b71f" kindref="member">QCPAxis::QCPAxis</ref>(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*parent,<sp/>AxisType<sp/>type)<sp/>:</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>(parent-&gt;parentPlot(),<sp/>QString(),<sp/>parent),</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>base:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/>mAxisType(type),</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/>mAxisRect(parent),</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/>mPadding(5),</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/>mOrientation(orientation(type)),</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/>mSelectableParts(spAxis<sp/>|<sp/>spTickLabels<sp/>|<sp/>spAxisLabel),</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>mSelectedParts(spNone),</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>mBasePen(QPen(Qt::black,<sp/>0,<sp/>Qt::SolidLine,<sp/>Qt::SquareCap)),</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/>mSelectedBasePen(QPen(Qt::blue,<sp/>2)),</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>label:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/>mLabel(),</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/>mLabelFont(mParentPlot-&gt;font()),</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/>mSelectedLabelFont(QFont(mLabelFont.family(),<sp/>mLabelFont.pointSize(),<sp/>QFont::Bold)),</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/>mLabelColor(Qt::black),</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/>mSelectedLabelColor(Qt::blue),</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tick<sp/>labels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/>mTickLabels(true),</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/>mAutoTickLabels(true),</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/>mTickLabelType(ltNumber),</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/>mTickLabelFont(mParentPlot-&gt;font()),</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/>mSelectedTickLabelFont(QFont(mTickLabelFont.family(),<sp/>mTickLabelFont.pointSize(),<sp/>QFont::Bold)),</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/>mTickLabelColor(Qt::black),</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/>mSelectedTickLabelColor(Qt::blue),</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/>mDateTimeFormat(QLatin1String(</highlight><highlight class="stringliteral">&quot;hh:mm:ss\ndd.MM.yy&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/>mDateTimeSpec(Qt::LocalTime),</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/>mNumberPrecision(6),</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/>mNumberFormatChar(</highlight><highlight class="stringliteral">&apos;g&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/>mNumberBeautifulPowers(true),</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ticks<sp/>and<sp/>subticks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/>mTicks(true),</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/>mTickStep(1),</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>mSubTickCount(4),</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/>mAutoTickCount(6),</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/>mAutoTicks(true),</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/>mAutoTickStep(true),</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/>mAutoSubTicks(true),</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/>mTickPen(QPen(Qt::black,<sp/>0,<sp/>Qt::SolidLine,<sp/>Qt::SquareCap)),</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/>mSelectedTickPen(QPen(Qt::blue,<sp/>2)),</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/>mSubTickPen(QPen(Qt::black,<sp/>0,<sp/>Qt::SolidLine,<sp/>Qt::SquareCap)),</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/>mSelectedSubTickPen(QPen(Qt::blue,<sp/>2)),</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>and<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/>mRange(0,<sp/>5),</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/>mRangeReversed(false),</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/>mScaleType(stLinear),</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/>mScaleLogBase(10),</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/>mScaleLogBaseLogInv(1.0/qLn(mScaleLogBase)),</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>internal<sp/>members:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/>mGrid(new<sp/><ref refid="class_q_c_p_grid" kindref="compound">QCPGrid</ref>(this)),</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/>mAxisPainter(new<sp/><ref refid="class_q_c_p_axis_painter_private" kindref="compound">QCPAxisPainterPrivate</ref>(parent-&gt;parentPlot())),</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/>mLowestVisibleTick(0),</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/>mHighestVisibleTick(-1),</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>mCachedMarginValid(false),</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/>mCachedMargin(0)</highlight></codeline>
<codeline lineno="4051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/>mGrid-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/>setAntialiased(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/>setLayer(mParentPlot-&gt;currentLayer());<sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>actually<sp/>on<sp/>that<sp/>layer<sp/>already,<sp/>but<sp/>we<sp/>want<sp/>it<sp/>in<sp/>front<sp/>of<sp/>the<sp/>grid,<sp/>so<sp/>we<sp/>place<sp/>it<sp/>on<sp/>there<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>atTop)</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/>setTickLabelPadding(3);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/>setLabelPadding(6);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>atRight)</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/>setTickLabelPadding(7);</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/>setLabelPadding(12);</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>atBottom)</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/>setTickLabelPadding(3);</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/>setLabelPadding(3);</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>atLeft)</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/>setTickLabelPadding(5);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/>setLabelPadding(10);</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><ref refid="class_q_c_p_axis_1a7cfa27ea9da0bb1fe0ae995572c0b85d" kindref="member">QCPAxis::~QCPAxis</ref>()</highlight></codeline>
<codeline lineno="4076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>;</highlight></codeline>
<codeline lineno="4078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1af7bc2fac3f95949ecd0204d20dc1463b" kindref="member">QCPAxis::tickLabelPadding</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4082"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref>;</highlight></codeline>
<codeline lineno="4084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ab9199d72b8c4c06cc6c9b928c30d00d2" kindref="member">QCPAxis::tickLabelRotation</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4088"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9" kindref="member">QCPAxis::LabelSide</ref><sp/><ref refid="class_q_c_p_axis_1a0a33835705406506b02a445b1ba32357" kindref="member">QCPAxis::tickLabelSide</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4094"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref>;</highlight></codeline>
<codeline lineno="4096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4099"><highlight class="normal">QString<sp/><ref refid="class_q_c_p_axis_1ae6729b40845b29ffa5a440aa53cec215" kindref="member">QCPAxis::numberFormat</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4100"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/>QString<sp/>result;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/>result.append(<ref refid="class_q_c_p_axis_1a39594313deef458f425bba25cd337a8a" kindref="member">mNumberFormatChar</ref>);</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1af03809bee3f3e35fcc38d25b6dd5003b" kindref="member">mNumberBeautifulPowers</ref>)</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/>result.append(QLatin1Char(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a0deb7524009140f00a774dfd286d002c" kindref="member">numberMultiplyCross</ref>)</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(QLatin1Char(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a59265d65c5034695ac2578bccbbb0f4a" kindref="member">QCPAxis::tickLengthIn</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4114"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae7360ff805fc6097019de8b35ffbd7e7" kindref="member">tickLengthIn</ref>;</highlight></codeline>
<codeline lineno="4116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae1b3d7473f50ba8544b2027c1cdc80f2" kindref="member">QCPAxis::tickLengthOut</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4120"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>;</highlight></codeline>
<codeline lineno="4122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4125"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a052e6ab2ada7e87fa5e5831dcbd4a517" kindref="member">QCPAxis::subTickLengthIn</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1af11f7d83021c9cb3b0e76fe7814c6110" kindref="member">subTickLengthIn</ref>;</highlight></codeline>
<codeline lineno="4128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a091fdf8d1b3f9660e38b854578efb9bc" kindref="member">QCPAxis::subTickLengthOut</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4132"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>;</highlight></codeline>
<codeline lineno="4134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a59c9a0e362dec811491fc9a0709d2afa" kindref="member">QCPAxis::labelPadding</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4138"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a3f7465372df132bf7814345ea697dd34" kindref="member">labelPadding</ref>;</highlight></codeline>
<codeline lineno="4140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aebc032ac6eea164a02859c017f52d5e7" kindref="member">QCPAxis::offset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="4146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"></highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/><ref refid="class_q_c_p_axis_1ac85aebbedf67d7bc9e1e5c182151536b" kindref="member">QCPAxis::lowerEnding</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4150"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a077696dd1e7efb96e4c199f521433e24" kindref="member">lowerEnding</ref>;</highlight></codeline>
<codeline lineno="4152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>No<sp/>documentation<sp/>as<sp/>it<sp/>is<sp/>a<sp/>property<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/><ref refid="class_q_c_p_axis_1aad503ac95ee34e614ffee0bd66473e1a" kindref="member">QCPAxis::upperEnding</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1af764be913be5f924700ac9bbb8c01139" kindref="member">upperEnding</ref>;</highlight></codeline>
<codeline lineno="4158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1adef29cae617af4f519f6c40d1a866ca6" kindref="member">QCPAxis::setScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>type)</highlight></codeline>
<codeline lineno="4174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>());</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a3505ed8a93bd2e349d858d84996bf767" kindref="member">scaleTypeChanged</ref>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref>);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a726186054be90487885a748aa1b42188" kindref="member">QCPAxis::setScaleLogBase</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>base)</highlight></codeline>
<codeline lineno="4193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1abc727ddb4af745151755d1b5e60d03c3" kindref="member">mScaleLogBase</ref><sp/>=<sp/>base;</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a93e068984b475467929e7f6768754227" kindref="member">mScaleLogBaseLogInv</ref><sp/>=<sp/>1.0/qLn(<ref refid="class_q_c_p_axis_1abc727ddb4af745151755d1b5e60d03c3" kindref="member">mScaleLogBase</ref>);<sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>faster<sp/>baseLog()<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>logarithmic<sp/>scale<sp/>base<sp/>(must<sp/>be<sp/>greater<sp/>1):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>base;</highlight></codeline>
<codeline lineno="4201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">QCPAxis::setRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range)</highlight></codeline>
<codeline lineno="4212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&amp;&amp;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(range))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>oldRange<sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/>range.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>();</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/>range.<ref refid="class_q_c_p_range_1a1ff029704c29a75adbc1dc36cecaf44c" kindref="member">sanitizedForLinScale</ref>();</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>);</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>,<sp/>oldRange);</highlight></codeline>
<codeline lineno="4228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a513f9b9e326c505d9bec54880031b085" kindref="member">QCPAxis::setSelectableParts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectableParts<sp/>&amp;selectable)</highlight></codeline>
<codeline lineno="4241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ab9042d8a095998f27a28b39411d8b9c3" kindref="member">mSelectableParts</ref><sp/>!=<sp/>selectable)</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1ab9042d8a095998f27a28b39411d8b9c3" kindref="member">mSelectableParts</ref><sp/>=<sp/>selectable;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1aa5ff1fd851139028a3bb4efcb31de9fc" kindref="member">selectableChanged</ref>(<ref refid="class_q_c_p_axis_1ab9042d8a095998f27a28b39411d8b9c3" kindref="member">mSelectableParts</ref>);</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ab9d7a69277dcbed9119b3c1f25ca19c3" kindref="member">QCPAxis::setSelectedParts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectableParts<sp/>&amp;selected)</highlight></codeline>
<codeline lineno="4265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref><sp/>!=<sp/>selected)</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref><sp/>=<sp/>selected;</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a62b598abeee7174a05f9d542cc85b1f5" kindref="member">selectionChanged</ref>(<ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">QCPAxis::setRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper)</highlight></codeline>
<codeline lineno="4283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>==<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&amp;&amp;<sp/>upper<sp/>==<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(lower,<sp/>upper))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>oldRange<sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>;</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>upper;</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>();</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1a1ff029704c29a75adbc1dc36cecaf44c" kindref="member">sanitizedForLinScale</ref>();</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>);</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>,<sp/>oldRange);</highlight></codeline>
<codeline lineno="4301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight></codeline>
<codeline lineno="4314"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">QCPAxis::setRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size,<sp/>Qt::AlignmentFlag<sp/>alignment)</highlight></codeline>
<codeline lineno="4315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignment<sp/>==<sp/>Qt::AlignLeft)</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(position,<sp/>position+size);</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignment<sp/>==<sp/>Qt::AlignRight)</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(position-size,<sp/>position);</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>alignment<sp/>==<sp/>Qt::AlignCenter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(position-size/2.0,<sp/>position+size/2.0);</highlight></codeline>
<codeline lineno="4322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"></highlight></codeline>
<codeline lineno="4328"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1afcf51227d337db28d1a9ce9a4d1bc91a" kindref="member">QCPAxis::setRangeLower</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower)</highlight></codeline>
<codeline lineno="4329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>==<sp/>lower)</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>oldRange<sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>;</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>();</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1a1ff029704c29a75adbc1dc36cecaf44c" kindref="member">sanitizedForLinScale</ref>();</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>);</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>,<sp/>oldRange);</highlight></codeline>
<codeline lineno="4345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1acd3ca1247aa867b540cd5ec30ccd3bef" kindref="member">QCPAxis::setRangeUpper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper)</highlight></codeline>
<codeline lineno="4352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>==<sp/>upper)</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>oldRange<sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>upper;</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>();</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1a1ff029704c29a75adbc1dc36cecaf44c" kindref="member">sanitizedForLinScale</ref>();</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>);</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>,<sp/>oldRange);</highlight></codeline>
<codeline lineno="4368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"></highlight></codeline>
<codeline lineno="4379"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a2172fdb196b1a0dc3f40992fcad8e9e1" kindref="member">QCPAxis::setRangeReversed</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed)</highlight></codeline>
<codeline lineno="4380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref><sp/>!=<sp/>reversed)</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref><sp/>=<sp/>reversed;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"></highlight></codeline>
<codeline lineno="4403"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae867c23d3a6a7bd4d09cc66c5d018f63" kindref="member">QCPAxis::setAutoTicks</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="4404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aac23adcbae246bf165d4539ad65ac9f9" kindref="member">mAutoTicks</ref><sp/>!=<sp/>on)</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aac23adcbae246bf165d4539ad65ac9f9" kindref="member">mAutoTicks</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a7c7111cbeac9ec5fcb40f93a1ef51a0b" kindref="member">QCPAxis::setAutoTickCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>approximateCount)</highlight></codeline>
<codeline lineno="4424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a499fbb67111e4b204738f6c1aa28d842" kindref="member">mAutoTickCount</ref><sp/>!=<sp/>approximateCount)</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(approximateCount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a499fbb67111e4b204738f6c1aa28d842" kindref="member">mAutoTickCount</ref><sp/>=<sp/>approximateCount;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;approximateCount<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>zero:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>approximateCount;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4451"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aaa47e3a6bac0c20d4beb9028f01bc1a1" kindref="member">QCPAxis::setAutoTickLabels</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="4452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a721e496b342f272078c5ff84564e472f" kindref="member">mAutoTickLabels</ref><sp/>!=<sp/>on)</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a721e496b342f272078c5ff84564e472f" kindref="member">mAutoTickLabels</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a99fe77b034e06f5b723995beab96e741" kindref="member">QCPAxis::setAutoTickStep</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aada8934a5c44978653031782aa37d101" kindref="member">mAutoTickStep</ref><sp/>!=<sp/>on)</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aada8934a5c44978653031782aa37d101" kindref="member">mAutoTickStep</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"></highlight></codeline>
<codeline lineno="4490"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1adcbdec7a60054b88571e89599f4a45bf" kindref="member">QCPAxis::setAutoSubTicks</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="4491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aaae980b0d193d959674e314dbb6c2c3b" kindref="member">mAutoSubTicks</ref><sp/>!=<sp/>on)</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aaae980b0d193d959674e314dbb6c2c3b" kindref="member">mAutoSubTicks</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"></highlight></codeline>
<codeline lineno="4505"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ac891409315bc379e3b1abdb162c1a011" kindref="member">QCPAxis::setTicks</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show)</highlight></codeline>
<codeline lineno="4506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ab111e74bba22e06848897c932fc549fe" kindref="member">mTicks</ref><sp/>!=<sp/>show)</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1ab111e74bba22e06848897c932fc549fe" kindref="member">mTicks</ref><sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"></highlight></codeline>
<codeline lineno="4517"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a04ba16e1f6f78d70f938519576ed32c8" kindref="member">QCPAxis::setTickLabels</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show)</highlight></codeline>
<codeline lineno="4518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a3e4315be072026644e69009557a2fa11" kindref="member">mTickLabels</ref><sp/>!=<sp/>show)</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a3e4315be072026644e69009557a2fa11" kindref="member">mTickLabels</ref><sp/>=<sp/>show;</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1af302c479af9dbc2e9f0e44e07c0012ee" kindref="member">QCPAxis::setTickLabelPadding</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding)</highlight></codeline>
<codeline lineno="4531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref><sp/>!=<sp/>padding)</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1abb85015a9467ec176e70698307ec833a" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"></highlight></codeline>
<codeline lineno="4560"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a54f24f5ce8feea25209388a863d7e448" kindref="member">QCPAxis::setTickLabelType</ref>(LabelType<sp/>type)</highlight></codeline>
<codeline lineno="4561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a6e056c1cb1aab0eddebfebbcb78c8f90" kindref="member">mTickLabelType</ref><sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a6e056c1cb1aab0eddebfebbcb78c8f90" kindref="member">mTickLabelType</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a2b8690c4e8dbc39d9185d2b398ce7a6c" kindref="member">QCPAxis::setTickLabelFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="4575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font<sp/>!=<sp/><ref refid="class_q_c_p_axis_1add79d1e39c4ed65869a1e9cc79043f3f" kindref="member">mTickLabelFont</ref>)</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1add79d1e39c4ed65869a1e9cc79043f3f" kindref="member">mTickLabelFont</ref><sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a395e445c3fe496b935bee7b911ecfd1c" kindref="member">QCPAxis::setTickLabelColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="4589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>!=<sp/><ref refid="class_q_c_p_axis_1a6384a749b3b56a97df081d8082321ab4" kindref="member">mTickLabelColor</ref>)</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a6384a749b3b56a97df081d8082321ab4" kindref="member">mTickLabelColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a1bddd4413df8a576b7ad4b067fb33375" kindref="member">QCPAxis::setTickLabelRotation</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees)</highlight></codeline>
<codeline lineno="4607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(degrees-<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>))</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref><sp/>=<sp/>qBound(-90.0,<sp/>degrees,<sp/>90.0);</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a13ec644fc6e22715744c92c6dfa4f0fa" kindref="member">QCPAxis::setTickLabelSide</ref>(LabelSide<sp/>side)</highlight></codeline>
<codeline lineno="4623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>=<sp/>side;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a2ee0191daa03524a682113e63e05f7a7" kindref="member">QCPAxis::setDateTimeFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;format)</highlight></codeline>
<codeline lineno="4637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a0b7ad83550d71daab4cfee2918e168e0" kindref="member">mDateTimeFormat</ref><sp/>!=<sp/>format)</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a0b7ad83550d71daab4cfee2918e168e0" kindref="member">mDateTimeFormat</ref><sp/>=<sp/>format;</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a262e06731debed7eee11fa6a81d67eaf" kindref="member">QCPAxis::setDateTimeSpec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Qt::TimeSpec<sp/>&amp;timeSpec)</highlight></codeline>
<codeline lineno="4656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1af73bec228c1a3203dc8aef1e84a46759" kindref="member">mDateTimeSpec</ref><sp/>=<sp/>timeSpec;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae585a54dc2aac662e90a2ca82f002590" kindref="member">QCPAxis::setNumberFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;formatCode)</highlight></codeline>
<codeline lineno="4697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatCode.isEmpty())</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Passed<sp/>formatCode<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>interpret<sp/>first<sp/>char<sp/>as<sp/>number<sp/>format<sp/>char:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/>QString<sp/>allowedFormatChars(QLatin1String(</highlight><highlight class="stringliteral">&quot;eEfgG&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowedFormatChars.contains(formatCode.at(0)))</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a39594313deef458f425bba25cd337a8a" kindref="member">mNumberFormatChar</ref><sp/>=<sp/>QLatin1Char(formatCode.at(0).toLatin1());</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>number<sp/>format<sp/>code<sp/>(first<sp/>char<sp/>not<sp/>in<sp/>&apos;eEfgG&apos;):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>formatCode;</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatCode.length()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1af03809bee3f3e35fcc38d25b6dd5003b" kindref="member">mNumberBeautifulPowers</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a0deb7524009140f00a774dfd286d002c" kindref="member">numberMultiplyCross</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>interpret<sp/>second<sp/>char<sp/>as<sp/>indicator<sp/>for<sp/>beautiful<sp/>decimal<sp/>powers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatCode.at(1)<sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_axis_1a39594313deef458f425bba25cd337a8a" kindref="member">mNumberFormatChar</ref><sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="class_q_c_p_axis_1a39594313deef458f425bba25cd337a8a" kindref="member">mNumberFormatChar</ref><sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;g&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1af03809bee3f3e35fcc38d25b6dd5003b" kindref="member">mNumberBeautifulPowers</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>number<sp/>format<sp/>code<sp/>(second<sp/>char<sp/>not<sp/>&apos;b&apos;<sp/>or<sp/>first<sp/>char<sp/>neither<sp/>&apos;e&apos;<sp/>nor<sp/>&apos;g&apos;):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>formatCode;</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatCode.length()<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a0deb7524009140f00a774dfd286d002c" kindref="member">numberMultiplyCross</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>interpret<sp/>third<sp/>char<sp/>as<sp/>indicator<sp/>for<sp/>dot<sp/>or<sp/>cross<sp/>multiplication<sp/>symbol:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatCode.at(2)<sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a0deb7524009140f00a774dfd286d002c" kindref="member">numberMultiplyCross</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatCode.at(2)<sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a0deb7524009140f00a774dfd286d002c" kindref="member">numberMultiplyCross</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>number<sp/>format<sp/>code<sp/>(third<sp/>char<sp/>neither<sp/>&apos;c&apos;<sp/>nor<sp/>&apos;d&apos;):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>formatCode;</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a21dc8023ad7500382ad9574b48137e63" kindref="member">QCPAxis::setNumberPrecision</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision)</highlight></codeline>
<codeline lineno="4763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1acd76e8c783384d99ccc4a13797eec188" kindref="member">mNumberPrecision</ref><sp/>!=<sp/>precision)</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1acd76e8c783384d99ccc4a13797eec188" kindref="member">mNumberPrecision</ref><sp/>=<sp/>precision;</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1af727db0acc6492c4c774c0700e738205" kindref="member">QCPAxis::setTickStep</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step)</highlight></codeline>
<codeline lineno="4777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref><sp/>!=<sp/>step)</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref><sp/>=<sp/>step;</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"></highlight></codeline>
<codeline lineno="4798"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a871db94c5d796c80fcbe1a9d4506e27e" kindref="member">QCPAxis::setTickVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;vec)</highlight></codeline>
<codeline lineno="4799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>check<sp/>whether<sp/>mTickVector<sp/>!=<sp/>vec<sp/>here,<sp/>because<sp/>it<sp/>takes<sp/>longer<sp/>than<sp/>we<sp/>would<sp/>save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref><sp/>=<sp/>vec;</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a921d3ba3853ca3bd2cce3459f7a243ed" kindref="member">QCPAxis::setTickVectorLabels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QString&gt;<sp/>&amp;vec)</highlight></codeline>
<codeline lineno="4817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>check<sp/>whether<sp/>mTickVectorLabels<sp/>!=<sp/>vec<sp/>here,<sp/>because<sp/>it<sp/>takes<sp/>longer<sp/>than<sp/>we<sp/>would<sp/>save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref><sp/>=<sp/>vec;</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"></highlight></codeline>
<codeline lineno="4831"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a62ec40bebe3540e9c1479a8fd2be3b0d" kindref="member">QCPAxis::setTickLength</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside)</highlight></codeline>
<codeline lineno="4832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1afae1a37a99611366275a51204d991739" kindref="member">setTickLengthIn</ref>(inside);</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a3b8a0debd1ffedd2c22d0592dfbb4e62" kindref="member">setTickLengthOut</ref>(outside);</highlight></codeline>
<codeline lineno="4835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight></codeline>
<codeline lineno="4843"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1afae1a37a99611366275a51204d991739" kindref="member">QCPAxis::setTickLengthIn</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside)</highlight></codeline>
<codeline lineno="4844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae7360ff805fc6097019de8b35ffbd7e7" kindref="member">tickLengthIn</ref><sp/>!=<sp/>inside)</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae7360ff805fc6097019de8b35ffbd7e7" kindref="member">tickLengthIn</ref><sp/>=<sp/>inside;</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"></highlight></codeline>
<codeline lineno="4858"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a3b8a0debd1ffedd2c22d0592dfbb4e62" kindref="member">QCPAxis::setTickLengthOut</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside)</highlight></codeline>
<codeline lineno="4859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref><sp/>!=<sp/>outside)</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref><sp/>=<sp/>outside;</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>outside<sp/>tick<sp/>length<sp/>can<sp/>change<sp/>margin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"></highlight></codeline>
<codeline lineno="4878"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a4b1554ead9d7f9799650d51383e326dd" kindref="member">QCPAxis::setSubTickCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="4879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref><sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="4881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"></highlight></codeline>
<codeline lineno="4891"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ab702d6fd42fc620607435339a1c2a2e1" kindref="member">QCPAxis::setSubTickLength</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside)</highlight></codeline>
<codeline lineno="4892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ac46fa2a993a9f5789540977610acf1de" kindref="member">setSubTickLengthIn</ref>(inside);</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a4c6dfc3963492ed72a77724012df5f23" kindref="member">setSubTickLengthOut</ref>(outside);</highlight></codeline>
<codeline lineno="4895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4903"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ac46fa2a993a9f5789540977610acf1de" kindref="member">QCPAxis::setSubTickLengthIn</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inside)</highlight></codeline>
<codeline lineno="4904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1af11f7d83021c9cb3b0e76fe7814c6110" kindref="member">subTickLengthIn</ref><sp/>!=<sp/>inside)</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1af11f7d83021c9cb3b0e76fe7814c6110" kindref="member">subTickLengthIn</ref><sp/>=<sp/>inside;</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a4c6dfc3963492ed72a77724012df5f23" kindref="member">QCPAxis::setSubTickLengthOut</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outside)</highlight></codeline>
<codeline lineno="4919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref><sp/>!=<sp/>outside)</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref><sp/>=<sp/>outside;</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>outside<sp/>tick<sp/>length<sp/>can<sp/>change<sp/>margin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a778d45fb71b3c7ab3bb7079e18b058e4" kindref="member">QCPAxis::setBasePen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="4933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ad6b4a0aee9558fb35529e960b8fef72d" kindref="member">mBasePen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="4935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ad80923bcc1c5da4c4db602c5325e797e" kindref="member">QCPAxis::setTickPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="4943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a1d52c78c856d8bd1f331d4ec4e63d944" kindref="member">mTickPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="4945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"></highlight></codeline>
<codeline lineno="4952"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aede4028ae7516bd51a60618a8233f9cf" kindref="member">QCPAxis::setSubTickPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="4953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a32ef56d3a417866720eb12667d27dbd1" kindref="member">mSubTickPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="4955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a71ac1a47f7547e490a8c4311d1433cf3" kindref="member">QCPAxis::setLabelFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="4963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a37442d470e30e19b81ecaf979a34d046" kindref="member">mLabelFont</ref><sp/>!=<sp/>font)</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a37442d470e30e19b81ecaf979a34d046" kindref="member">mLabelFont</ref><sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight></codeline>
<codeline lineno="4976"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a6c906fe56d75f0122335b9f79b999608" kindref="member">QCPAxis::setLabelColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="4977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a457a003bb1c2b6ab73e5a173ba7558fd" kindref="member">mLabelColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="4979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a33bcc382c111c9f31bb0687352a2dea4" kindref="member">QCPAxis::setLabel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;str)</highlight></codeline>
<codeline lineno="4986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ae8001dbdfc47685c1cf7b98b044460e6" kindref="member">mLabel</ref><sp/>!=<sp/>str)</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1ae8001dbdfc47685c1cf7b98b044460e6" kindref="member">mLabel</ref><sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a4391192a766e5d20cfe5cbc17607a7a2" kindref="member">QCPAxis::setLabelPadding</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding)</highlight></codeline>
<codeline lineno="5000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a3f7465372df132bf7814345ea697dd34" kindref="member">labelPadding</ref><sp/>!=<sp/>padding)</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a3f7465372df132bf7814345ea697dd34" kindref="member">labelPadding</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1abb85015a9467ec176e70698307ec833a" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"></highlight></codeline>
<codeline lineno="5018"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a5691441cb3de9e9844855d339c0db279" kindref="member">QCPAxis::setPadding</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding)</highlight></codeline>
<codeline lineno="5019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a52a805a4f03231210e0880db7f77e098" kindref="member">mPadding</ref><sp/>!=<sp/>padding)</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a52a805a4f03231210e0880db7f77e098" kindref="member">mPadding</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1abb85015a9467ec176e70698307ec833a" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"></highlight></codeline>
<codeline lineno="5035"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a04a652603cbe50eba9969ee6d68873c3" kindref="member">QCPAxis::setOffset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="5036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1aebc032ac6eea164a02859c017f52d5e7" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="5038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a845ccb560b7bc5281098a5be494145f6" kindref="member">QCPAxis::setSelectedTickLabelFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="5046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font<sp/>!=<sp/><ref refid="class_q_c_p_axis_1a4f2e4919da9615dac612662c249b1119" kindref="member">mSelectedTickLabelFont</ref>)</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a4f2e4919da9615dac612662c249b1119" kindref="member">mSelectedTickLabelFont</ref><sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>set<sp/>mCachedMarginValid<sp/>to<sp/>false<sp/>here<sp/>because<sp/>margin<sp/>calculation<sp/>is<sp/>always<sp/>done<sp/>with<sp/>non-selected<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"></highlight></codeline>
<codeline lineno="5059"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a02ec2a75d4d8401eaab834fbc6803d30" kindref="member">QCPAxis::setSelectedLabelFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="5060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ae48fe3489afadc0b3cd003233e2bf19f" kindref="member">mSelectedLabelFont</ref><sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>set<sp/>mCachedMarginValid<sp/>to<sp/>false<sp/>here<sp/>because<sp/>margin<sp/>calculation<sp/>is<sp/>always<sp/>done<sp/>with<sp/>non-selected<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a9bdbf5e63ab15187f3a1de9440129227" kindref="member">QCPAxis::setSelectedTickLabelColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="5071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>!=<sp/><ref refid="class_q_c_p_axis_1a3bcad40902f45dc4c991a2c3e4d31d70" kindref="member">mSelectedTickLabelColor</ref>)</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a3bcad40902f45dc4c991a2c3e4d31d70" kindref="member">mSelectedTickLabelColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a5d502dec597c634f491fdd73d151c72d" kindref="member">QCPAxis::setSelectedLabelColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="5084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a94f57de3ba024471ca206d83cf2258dd" kindref="member">mSelectedLabelColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="5086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"></highlight></codeline>
<codeline lineno="5093"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aeb917a909215605b95ef2be843de1ee8" kindref="member">QCPAxis::setSelectedBasePen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="5094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a80baa4e3c16f9b6edf3eccacd2a50fde" kindref="member">mSelectedBasePen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="5096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"></highlight></codeline>
<codeline lineno="5103"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8360502685eb782edbf04019c9345cdc" kindref="member">QCPAxis::setSelectedTickPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="5104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a9524593dbc75a5c5b29dbd1cb4b37df5" kindref="member">mSelectedTickPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="5106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"></highlight></codeline>
<codeline lineno="5113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a2a00a7166600155eac26843132eb9576" kindref="member">QCPAxis::setSelectedSubTickPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="5114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aa5cc6afc5dc2a365f5abbd36eb04a1dc" kindref="member">mSelectedSubTickPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="5116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"></highlight></codeline>
<codeline lineno="5128"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a08af1c72db9ae4dc8cb8a973d44405ab" kindref="member">QCPAxis::setLowerEnding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;ending)</highlight></codeline>
<codeline lineno="5129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a077696dd1e7efb96e4c199f521433e24" kindref="member">lowerEnding</ref><sp/>=<sp/>ending;</highlight></codeline>
<codeline lineno="5131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"></highlight></codeline>
<codeline lineno="5143"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a69119b892fc306f651763596685aa377" kindref="member">QCPAxis::setUpperEnding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;ending)</highlight></codeline>
<codeline lineno="5144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1af764be913be5f924700ac9bbb8c01139" kindref="member">upperEnding</ref><sp/>=<sp/>ending;</highlight></codeline>
<codeline lineno="5146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"></highlight></codeline>
<codeline lineno="5155"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a18f3a68f2b691af1fd34b6593c886630" kindref="member">QCPAxis::moveRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff)</highlight></codeline>
<codeline lineno="5156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>oldRange<sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>;</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>+=<sp/>diff;</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>+=<sp/>diff;</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>*=<sp/>diff;</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>*=<sp/>diff;</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>);</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>,<sp/>oldRange);</highlight></codeline>
<codeline lineno="5170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"></highlight></codeline>
<codeline lineno="5178"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a7072ff96fe690148f1bbcdb4f773ea1c" kindref="member">QCPAxis::scaleRange</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center)</highlight></codeline>
<codeline lineno="5179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>oldRange<sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>;</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange;</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>-center)*factor<sp/>+<sp/>center;</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-center)*factor<sp/>+<sp/>center;</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(newRange))</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/>newRange.<ref refid="class_q_c_p_range_1a1ff029704c29a75adbc1dc36cecaf44c" kindref="member">sanitizedForLinScale</ref>();</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>center<sp/>&lt;<sp/>0)<sp/>||<sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>center<sp/>&gt;<sp/>0))<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>center<sp/>has<sp/>same<sp/>sign<sp/>as<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange;</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>qPow(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>/center,<sp/>factor)*center;</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>qPow(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/center,<sp/>factor)*center;</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(newRange))</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref><sp/>=<sp/>newRange.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>();</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Center<sp/>of<sp/>scaling<sp/>operation<sp/>doesn&apos;t<sp/>lie<sp/>in<sp/>same<sp/>logarithmic<sp/>sign<sp/>domain<sp/>as<sp/>range:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>center;</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>);</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1a0894084e4c16a1736534c4095746f910" kindref="member">rangeChanged</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>,<sp/>oldRange);</highlight></codeline>
<codeline lineno="5203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"></highlight></codeline>
<codeline lineno="5218"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1af4bbd446dcaee5a83ac30ce9bcd6e125" kindref="member">QCPAxis::setScaleRatio</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*otherAxis,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio)</highlight></codeline>
<codeline lineno="5219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>otherPixelSize,<sp/>ownPixelSize;</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/>otherPixelSize<sp/>=<sp/>otherAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/>otherPixelSize<sp/>=<sp/>otherAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/>ownPixelSize<sp/>=<sp/><ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/>ownPixelSize<sp/>=<sp/><ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newRangeSize<sp/>=<sp/>ratio*otherAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()*ownPixelSize/(double)otherPixelSize;</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().center(),<sp/>newRangeSize,<sp/>Qt::AlignCenter);</highlight></codeline>
<codeline lineno="5234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" kindref="member">QCPAxis::rescale</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisiblePlottables)</highlight></codeline>
<codeline lineno="5243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>p<sp/>=<sp/><ref refid="class_q_c_p_axis_1a4f7404494cccdbfc00e1e865b7ed16a4" kindref="member">plottables</ref>();</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange;</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;p.size();<sp/>++i)</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p.at(i)-&gt;realVisibility()<sp/>&amp;&amp;<sp/>onlyVisiblePlottables)</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>plottableRange;</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>currentFoundRange;</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">QCPAbstractPlottable::SignDomain</ref><sp/>signDomain<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">QCPAbstractPlottable::sdBoth</ref>;</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signDomain<sp/>=<sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">QCPAbstractPlottable::sdNegative</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">QCPAbstractPlottable::sdPositive</ref>);</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.at(i)-&gt;keyAxis()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plottableRange<sp/>=<sp/>p.at(i)-&gt;getKeyRange(currentFoundRange,<sp/>signDomain);</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plottableRange<sp/>=<sp/>p.at(i)-&gt;getValueRange(currentFoundRange,<sp/>signDomain);</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentFoundRange)</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!haveRange)</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange<sp/>=<sp/>plottableRange;</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">expand</ref>(plottableRange);</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>haveRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRange)</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(newRange))<sp/></highlight><highlight class="comment">//<sp/>likely<sp/>due<sp/>to<sp/>range<sp/>being<sp/>zero<sp/>(plottable<sp/>has<sp/>only<sp/>constant<sp/>data<sp/>in<sp/>this<sp/>axis<sp/>dimension),<sp/>shift<sp/>current<sp/>range<sp/>to<sp/>at<sp/>least<sp/>center<sp/>the<sp/>plottable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center<sp/>=<sp/>(newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>+newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)*0.5;<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>and<sp/>lower<sp/>should<sp/>be<sp/>equal<sp/>anyway,<sp/>but<sp/>just<sp/>to<sp/>make<sp/>sure,<sp/>incase<sp/>validRange<sp/>returned<sp/>false<sp/>for<sp/>other<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center-<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center+<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center/qSqrt(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center*qSqrt(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(newRange);</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"></highlight></codeline>
<codeline lineno="5291"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">QCPAxis::pixelToCoord</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5292"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value-<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>())/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>()*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()+<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(value-<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>())/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>()*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()+<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qPow(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/>(value-<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>())/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>())*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qPow(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/>(<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>()-value)/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>())*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>orientation()<sp/>==<sp/>Qt::Vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()-value)/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>()*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()+<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()-value)/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>()*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()+<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qPow(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/>(<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()-value)/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>())*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qPow(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/>(value-<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>())/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>())*<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight></codeline>
<codeline lineno="5329"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">QCPAxis::coordToPixel</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5330"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value-<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>()+<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-value)/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>()+<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>value<sp/>for<sp/>logarithmic<sp/>scale,<sp/>just<sp/>draw<sp/>it<sp/>outside<sp/>visible<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref><sp/>?<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a6d0f989fc552aa2b563cf82f8fc81e61" kindref="member">right</ref>()+200<sp/>:<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>()-200;</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>mRange.upper<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>value<sp/>for<sp/>logarithmic<sp/>scale,<sp/>just<sp/>draw<sp/>it<sp/>outside<sp/>visible<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref><sp/>?<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>()-200<sp/>:<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a6d0f989fc552aa2b563cf82f8fc81e61" kindref="member">right</ref>()+200;</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(value/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>()+<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/value)/<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>()+<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>orientation()<sp/>==<sp/>Qt::Vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()-(value-<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()-(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-value)/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>value<sp/>for<sp/>logarithmic<sp/>scale,<sp/>just<sp/>draw<sp/>it<sp/>outside<sp/>visible<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref><sp/>?<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1ac45aef1eb75cea46b241b6303028a607" kindref="member">top</ref>()-200<sp/>:<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()+200;</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>mRange.upper<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>value<sp/>for<sp/>logarithmic<sp/>scale,<sp/>just<sp/>draw<sp/>it<sp/>outside<sp/>visible<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref><sp/>?<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()+200<sp/>:<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1ac45aef1eb75cea46b241b6303028a607" kindref="member">top</ref>()-200;</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>)</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()-<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(value/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>()-<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/value)/<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*<ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"></highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">QCPAxis::SelectablePart</ref><sp/><ref refid="class_q_c_p_axis_1ab2965a8ab1da948b897f1c006080760b" kindref="member">QCPAxis::getPartAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5388"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" kindref="member">mVisible</ref>)</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fae0df8123a5528d5ccf87cb7794f971ea" kindref="member">spNone</ref>;</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1aaf93529ac60215ea020cdff5635c3e80" kindref="member">axisSelectionBox</ref>().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">spAxis</ref>;</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1af02fc189ab8460c202eb4138c9aca516" kindref="member">tickLabelsSelectionBox</ref>().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa584e0a3dc4d064880647619f4bd4e771" kindref="member">spTickLabels</ref>;</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae907476bf8cf0ecd17620575e17c06b1" kindref="member">labelSelectionBox</ref>().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa851e0600e0d08b4f5fee9361e3fedabd" kindref="member">spAxisLabel</ref>;</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fae0df8123a5528d5ccf87cb7794f971ea" kindref="member">spNone</ref>;</highlight></codeline>
<codeline lineno="5400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"></highlight></codeline>
<codeline lineno="5402"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5403"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a2877a6230920c118be65c6113089f467" kindref="member">QCPAxis::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5404"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">SelectablePart</ref><sp/>part<sp/>=<sp/><ref refid="class_q_c_p_axis_1ab2965a8ab1da948b897f1c006080760b" kindref="member">getPartAt</ref>(pos);</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_axis_1ab9042d8a095998f27a28b39411d8b9c3" kindref="member">mSelectableParts</ref>.testFlag(part))<sp/>||<sp/>part<sp/>==<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fae0df8123a5528d5ccf87cb7794f971ea" kindref="member">spNone</ref>)</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(details)</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/>details-&gt;setValue(part);</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="5413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"></highlight></codeline>
<codeline lineno="5422"><highlight class="normal">QList&lt;QCPAbstractPlottable*&gt;<sp/><ref refid="class_q_c_p_axis_1a4f7404494cccdbfc00e1e865b7ed16a4" kindref="member">QCPAxis::plottables</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5423"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.at(i)-&gt;keyAxis()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.at(i)-&gt;valueAxis()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.at(i));</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"></highlight></codeline>
<codeline lineno="5440"><highlight class="normal">QList&lt;QCPGraph*&gt;<sp/><ref refid="class_q_c_p_axis_1ad3919e7d7400f55446ea82018fe5e3a8" kindref="member">QCPAxis::graphs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/>QList&lt;QCPGraph*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.at(i)-&gt;keyAxis()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.at(i)-&gt;valueAxis()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.at(i));</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"></highlight></codeline>
<codeline lineno="5459"><highlight class="normal">QList&lt;QCPAbstractItem*&gt;<sp/><ref refid="class_q_c_p_axis_1ae437656a5fd1a03721a8f2d7aab460fe" kindref="member">QCPAxis::items</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5460"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractItem*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemId=0;<sp/>itemId&lt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.size();<sp/>++itemId)</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QCPItemPosition*&gt;<sp/>positions<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.at(itemId)-&gt;positions();</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posId=0;<sp/>posId&lt;positions.size();<sp/>++posId)</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positions.at(posId)-&gt;keyAxis()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/>positions.at(posId)-&gt;valueAxis()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.at(itemId));</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"></highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/><ref refid="class_q_c_p_axis_1ac0a6b77bd52bec6c81cd62d167cfeba6" kindref="member">QCPAxis::marginSideToAxisType</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)</highlight></codeline>
<codeline lineno="5484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(side)</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" kindref="member">QCP::msLeft</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">atLeft</ref>;</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" kindref="member">QCP::msRight</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">atRight</ref>;</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" kindref="member">QCP::msTop</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">atTop</ref>;</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" kindref="member">QCP::msBottom</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">atBottom</ref>;</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>margin<sp/>side<sp/>passed:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)side;</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">atLeft</ref>;</highlight></codeline>
<codeline lineno="5495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/><ref refid="class_q_c_p_axis_1aa85ba73dfee6483e23825461b725e363" kindref="member">QCPAxis::opposite</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type)</highlight></codeline>
<codeline lineno="5501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">atLeft</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">atRight</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">atRight</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">atLeft</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">atBottom</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">atTop</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">atTop</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">atBottom</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>axis<sp/>type&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">atLeft</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"></highlight></codeline>
<codeline lineno="5519"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a57d9e961bae7d62f5b4e1f143e660c78" kindref="member">QCPAxis::setupTickVectors</ref>()</highlight></codeline>
<codeline lineno="5520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!<ref refid="class_q_c_p_axis_1ab111e74bba22e06848897c932fc549fe" kindref="member">mTicks</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_axis_1a3e4315be072026644e69009557a2fa11" kindref="member">mTickLabels</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_axis_1a17bffb94aaa40311f259c6ac7bcb5d5f" kindref="member">mGrid</ref>-&gt;<ref refid="class_q_c_p_layerable_1a10a3cc92e0fa63e4a929e61d34e275a7" kindref="member">visible</ref>())<sp/>||<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>tick<sp/>vectors,<sp/>either<sp/>by<sp/>auto<sp/>generating<sp/>or<sp/>by<sp/>notifying<sp/>user<sp/>to<sp/>fill<sp/>the<sp/>vectors<sp/>himself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aac23adcbae246bf165d4539ad65ac9f9" kindref="member">mAutoTicks</ref>)</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a626eef437c874148df1a5ac78506d463" kindref="member">generateAutoTicks</ref>();</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1af46d99613d29518795134ec4928e3873" kindref="member">ticksRequest</ref>();</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a06320a944d1120732cc0d72fe1306d8b" kindref="member">visibleTickBounds</ref>(<ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref>,<sp/><ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref>);</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.isEmpty())</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.clear();</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>subticks<sp/>between<sp/>ticks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.resize((<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.size()-1)*<ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref>);</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>subTickStep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>subTickPosition<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subTickIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowTick<sp/>=<sp/><ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref><sp/>&gt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref>-1<sp/>:<sp/><ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref>;</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highTick<sp/>=<sp/><ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref><sp/>&lt;<sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.size()-1<sp/>?<sp/><ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref>+1<sp/>:<sp/><ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref>;</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=lowTick+1;<sp/>i&lt;=highTick;<sp/>++i)</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subTickStep<sp/>=<sp/>(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i)-<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i-1))/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(<ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref>+1);</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=1;<sp/>k&lt;=<ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref>;<sp/>++k)</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subTickPosition<sp/>=<sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i-1)<sp/>+<sp/>k*subTickStep;</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subTickPosition<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subTickPosition<sp/>&gt;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>[subTickIndex]<sp/>=<sp/>subTickPosition;</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subTickIndex++;</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(done)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.resize(subTickIndex);</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>tick<sp/>labels<sp/>according<sp/>to<sp/>tick<sp/>positions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a721e496b342f272078c5ff84564e472f" kindref="member">mAutoTickLabels</ref>)</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vecsize<sp/>=<sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.size();</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>.resize(vecsize);</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a6e056c1cb1aab0eddebfebbcb78c8f90" kindref="member">mTickLabelType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a4a7da0166f755f5abac23b765d184cada7f1eacf3b73adaefd334bea04e094b7e" kindref="member">ltNumber</ref>)</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref>;<sp/>i&lt;=<ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>[i]<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;locale().toString(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i),<sp/><ref refid="class_q_c_p_axis_1a39594313deef458f425bba25cd337a8a" kindref="member">mNumberFormatChar</ref>.toLatin1(),<sp/><ref refid="class_q_c_p_axis_1acd76e8c783384d99ccc4a13797eec188" kindref="member">mNumberPrecision</ref>);</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a6e056c1cb1aab0eddebfebbcb78c8f90" kindref="member">mTickLabelType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a4a7da0166f755f5abac23b765d184cadafc70594a9d877124dd11ccc187d4ac52" kindref="member">ltDateTime</ref>)</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref>;<sp/>i&lt;=<ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&lt;<sp/>QT_VERSION_CHECK(4,<sp/>7,<sp/>0)<sp/>//<sp/>use<sp/>fromMSecsSinceEpoch<sp/>function<sp/>if<sp/>available,<sp/>to<sp/>gain<sp/>sub-second<sp/>accuracy<sp/>on<sp/>tick<sp/>labels<sp/>(e.g.<sp/>for<sp/>format<sp/>&quot;hh:mm:ss:zzz&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>[i]<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;locale().toString(QDateTime::fromTime_t(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i)).toTimeSpec(<ref refid="class_q_c_p_axis_1af73bec228c1a3203dc8aef1e84a46759" kindref="member">mDateTimeSpec</ref>),<sp/><ref refid="class_q_c_p_axis_1a0b7ad83550d71daab4cfee2918e168e0" kindref="member">mDateTimeFormat</ref>);</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>[i]<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;locale().toString(QDateTime::fromMSecsSinceEpoch(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i)*1000).toTimeSpec(<ref refid="class_q_c_p_axis_1af73bec228c1a3203dc8aef1e84a46759" kindref="member">mDateTimeSpec</ref>),<sp/><ref refid="class_q_c_p_axis_1a0b7ad83550d71daab4cfee2918e168e0" kindref="member">mDateTimeFormat</ref>);</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mAutoTickLabels<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aac23adcbae246bf165d4539ad65ac9f9" kindref="member">mAutoTicks</ref>)<sp/></highlight><highlight class="comment">//<sp/>ticks<sp/>generated<sp/>automatically,<sp/>but<sp/>not<sp/>ticklabels,<sp/>so<sp/>emit<sp/>ticksRequest<sp/>here<sp/>for<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_axis_1af46d99613d29518795134ec4928e3873" kindref="member">ticksRequest</ref>();</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>provided<sp/>tick<sp/>label<sp/>vector<sp/>has<sp/>correct<sp/>(minimal)<sp/>length:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>.size()<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.size())</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>.resize(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.size());</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"></highlight></codeline>
<codeline lineno="5612"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a626eef437c874148df1a5ac78506d463" kindref="member">QCPAxis::generateAutoTicks</ref>()</highlight></codeline>
<codeline lineno="5613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">stLinear</ref>)</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aada8934a5c44978653031782aa37d101" kindref="member">mAutoTickStep</ref>)</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>tick<sp/>positions<sp/>according<sp/>to<sp/>linear<sp/>scaling:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/(double)(<ref refid="class_q_c_p_axis_1a499fbb67111e4b204738f6c1aa28d842" kindref="member">mAutoTickCount</ref>+1e-10);<sp/></highlight><highlight class="comment">//<sp/>mAutoTickCount<sp/>ticks<sp/>on<sp/>average,<sp/>the<sp/>small<sp/>addition<sp/>is<sp/>to<sp/>prevent<sp/>jitter<sp/>on<sp/>exact<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>magnitudeFactor<sp/>=<sp/>qPow(10.0,<sp/>qFloor(qLn(<ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref>)/qLn(10.0)));<sp/></highlight><highlight class="comment">//<sp/>get<sp/>magnitude<sp/>factor<sp/>e.g.<sp/>0.01,<sp/>1,<sp/>10,<sp/>1000<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStepMantissa<sp/>=<sp/><ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref>/magnitudeFactor;</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tickStepMantissa<sp/>&lt;<sp/>5)</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>round<sp/>digit<sp/>after<sp/>decimal<sp/>point<sp/>to<sp/>0.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref><sp/>=<sp/>(int)(tickStepMantissa*2)/2.0*magnitudeFactor;</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>round<sp/>to<sp/>first<sp/>digit<sp/>in<sp/>multiples<sp/>of<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref><sp/>=<sp/>(int)(tickStepMantissa/2.0)*2.0*magnitudeFactor;</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aaae980b0d193d959674e314dbb6c2c3b" kindref="member">mAutoSubTicks</ref>)</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a3c5c045019fcdc0843a3e064eda7478a" kindref="member">calculateAutoSubTickCount</ref>(<ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref>);</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>tick<sp/>positions<sp/>according<sp/>to<sp/>mTickStep:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/>qint64<sp/>firstStep<sp/>=<sp/>floor(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>/<ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref>);<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use<sp/>qFloor<sp/>here,<sp/>or<sp/>we&apos;ll<sp/>lose<sp/>64<sp/>bit<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/>qint64<sp/>lastStep<sp/>=<sp/>ceil(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref>);<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use<sp/>qCeil<sp/>here,<sp/>or<sp/>we&apos;ll<sp/>lose<sp/>64<sp/>bit<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickcount<sp/>=<sp/>lastStep-firstStep+1;</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tickcount<sp/>&lt;<sp/>0)<sp/>tickcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.resize(tickcount);</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;tickcount;<sp/>++i)</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>[i]<sp/>=<sp/>(firstStep+i)*<ref refid="class_q_c_p_axis_1a4fe96830fc5a2711e20fe5edccfe2ed3" kindref="member">mTickStep</ref>;</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>tick<sp/>positions<sp/>according<sp/>to<sp/>logbase<sp/>scaling:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>positive<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerMag<sp/>=<sp/><ref refid="class_q_c_p_axis_1a97d69f021a05126fcb978d0aefea47b8" kindref="member">basePow</ref>(qFloor(<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)));</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentMag<sp/>=<sp/>lowerMag;</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.clear();</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.append(currentMag);</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currentMag<sp/>&lt;<sp/>mRange.upper<sp/>&amp;&amp;<sp/>currentMag<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>currentMag<sp/>might<sp/>be<sp/>zero<sp/>for<sp/>ranges<sp/>~1e-300,<sp/>just<sp/>cancel<sp/>in<sp/>that<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMag<sp/>*=<sp/><ref refid="class_q_c_p_axis_1abc727ddb4af745151755d1b5e60d03c3" kindref="member">mScaleLogBase</ref>;</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.append(currentMag);</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>negative<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerMag<sp/>=<sp/>-<ref refid="class_q_c_p_axis_1a97d69f021a05126fcb978d0aefea47b8" kindref="member">basePow</ref>(qCeil(<ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">baseLog</ref>(-<ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)));</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentMag<sp/>=<sp/>lowerMag;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.clear();</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.append(currentMag);</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currentMag<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&amp;&amp;<sp/>currentMag<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>currentMag<sp/>might<sp/>be<sp/>zero<sp/>for<sp/>ranges<sp/>~1e-300,<sp/>just<sp/>cancel<sp/>in<sp/>that<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMag<sp/>/=<sp/><ref refid="class_q_c_p_axis_1abc727ddb4af745151755d1b5e60d03c3" kindref="member">mScaleLogBase</ref>;</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.append(currentMag);</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>range<sp/>for<sp/>logarithmic<sp/>scale,<sp/>because<sp/>lower<sp/>and<sp/>upper<sp/>have<sp/>different<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.clear();</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>range<sp/>for<sp/>logarithmic<sp/>plot:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"></highlight></codeline>
<codeline lineno="5688"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a3c5c045019fcdc0843a3e064eda7478a" kindref="member">QCPAxis::calculateAutoSubTickCount</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStep)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5689"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref>;<sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>current<sp/>setting,<sp/>if<sp/>no<sp/>proper<sp/>value<sp/>can<sp/>be<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>mantissa<sp/>of<sp/>tickstep:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>magnitudeFactor<sp/>=<sp/>qPow(10.0,<sp/>qFloor(qLn(tickStep)/qLn(10.0)));<sp/></highlight><highlight class="comment">//<sp/>get<sp/>magnitude<sp/>factor<sp/>e.g.<sp/>0.01,<sp/>1,<sp/>10,<sp/>1000<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickStepMantissa<sp/>=<sp/>tickStep/magnitudeFactor;</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>separate<sp/>integer<sp/>and<sp/>fractional<sp/>part<sp/>of<sp/>mantissa:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intPartf;</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intPart;</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fracPart<sp/>=<sp/>modf(tickStepMantissa,<sp/>&amp;intPartf);</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/>intPart<sp/>=<sp/>intPartf;</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>cases<sp/>with<sp/>(almost)<sp/>integer<sp/>mantissa:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fracPart<sp/>&lt;<sp/>epsilon<sp/>||<sp/>1.0-fracPart<sp/>&lt;<sp/>epsilon)</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1.0-fracPart<sp/>&lt;<sp/>epsilon)</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++intPart;</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(intPart)</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>1.0<sp/>-&gt;<sp/>0.2<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>result<sp/>=<sp/>3;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>2.0<sp/>-&gt;<sp/>0.5<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>result<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>3.0<sp/>-&gt;<sp/>1.0<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>result<sp/>=<sp/>3;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>4.0<sp/>-&gt;<sp/>1.0<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>5.0<sp/>-&gt;<sp/>1.0<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>result<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>6.0<sp/>-&gt;<sp/>2.0<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>result<sp/>=<sp/>6;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>7.0<sp/>-&gt;<sp/>1.0<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>result<sp/>=<sp/>3;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>8.0<sp/>-&gt;<sp/>2.0<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>result<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>9.0<sp/>-&gt;<sp/>3.0<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>cases<sp/>with<sp/>significantly<sp/>fractional<sp/>mantissa:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qAbs(fracPart-0.5)<sp/>&lt;<sp/>epsilon)<sp/></highlight><highlight class="comment">//<sp/>*.5<sp/>mantissa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(intPart)</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>result<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>1.5<sp/>-&gt;<sp/>0.5<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>2.5<sp/>-&gt;<sp/>0.5<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>3.5<sp/>-&gt;<sp/>0.7<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>result<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>4.5<sp/>-&gt;<sp/>1.5<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>5.5<sp/>-&gt;<sp/>1.1<sp/>substep<sp/>(won&apos;t<sp/>occur<sp/>with<sp/>autoTickStep<sp/>from<sp/>here<sp/>on)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>6.5<sp/>-&gt;<sp/>1.3<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>result<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>7.5<sp/>-&gt;<sp/>2.5<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>8.5<sp/>-&gt;<sp/>1.7<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>result<sp/>=<sp/>4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>9.5<sp/>-&gt;<sp/>1.9<sp/>substep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>mantissa<sp/>fraction<sp/>isnt<sp/>0.0<sp/>or<sp/>0.5,<sp/>don&apos;t<sp/>bother<sp/>finding<sp/>good<sp/>sub<sp/>tick<sp/>marks,<sp/>leave<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5745"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1aa8a5fe80e2898ec08ada26b5fbee9eca" kindref="member">QCPAxis::selectEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="5746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">SelectablePart</ref><sp/>part<sp/>=<sp/>details.value&lt;<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">SelectablePart</ref>&gt;();</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_axis_1ab9042d8a095998f27a28b39411d8b9c3" kindref="member">mSelectableParts</ref>.testFlag(part))</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/>SelectableParts<sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>;</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1ab9d7a69277dcbed9119b3c1f25ca19c3" kindref="member">setSelectedParts</ref>(additive<sp/>?<sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>^part<sp/>:<sp/>part);</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"></highlight></codeline>
<codeline lineno="5758"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a53512242cde6ec21943a3ba10dbf78c3" kindref="member">QCPAxis::deselectEvent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="5760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>;</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1ab9d7a69277dcbed9119b3c1f25ca19c3" kindref="member">setSelectedParts</ref>(<ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref><sp/>&amp;<sp/>~<ref refid="class_q_c_p_axis_1ab9042d8a095998f27a28b39411d8b9c3" kindref="member">mSelectableParts</ref>);</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="5765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"></highlight></codeline>
<codeline lineno="5780"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a13bde39eb1e0b7c14a02935689be8aba" kindref="member">QCPAxis::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5781"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caefa92e89cd37f8a081fd2075aa1af73f" kindref="member">QCP::aeAxes</ref>);</highlight></codeline>
<codeline lineno="5783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"></highlight></codeline>
<codeline lineno="5790"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a258b1e783eda5cd14ec5552c696a424e" kindref="member">QCPAxis::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="5791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowTick<sp/>=<sp/><ref refid="class_q_c_p_axis_1aebb24ba8734b7e054efc6e1ecc5414c7" kindref="member">mLowestVisibleTick</ref>;</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highTick<sp/>=<sp/><ref refid="class_q_c_p_axis_1abb3b3ccce7e9779fef2be91ce1a46ef0" kindref="member">mHighestVisibleTick</ref>;</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>subTickPositions;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>final<sp/>coordToPixel<sp/>transformed<sp/>vector<sp/>passed<sp/>to<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>tickPositions;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>final<sp/>coordToPixel<sp/>transformed<sp/>vector<sp/>passed<sp/>to<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/><ref refid="class_q_c_p_axis_1a9a78fcccd98a73d37b3d991df7b6ef1d" kindref="member">tickLabels</ref>;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>final<sp/>vector<sp/>passed<sp/>to<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/>tickPositions.reserve(highTick-lowTick+1);</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/>tickLabels.reserve(highTick-lowTick+1);</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/>subTickPositions.reserve(<ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.size());</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ab111e74bba22e06848897c932fc549fe" kindref="member">mTicks</ref>)</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=lowTick;<sp/>i&lt;=highTick;<sp/>++i)</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickPositions.append(<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i)));</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a3e4315be072026644e69009557a2fa11" kindref="member">mTickLabels</ref>)</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickLabels.append(<ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>.at(i));</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ad70198e6ae2801fc409bc3caec707da9" kindref="member">mSubTickCount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a290b4c1375476826daa10e914cb71dab" kindref="member">subTickCount</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.size();</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_axis_1a290b4c1375476826daa10e914cb71dab" kindref="member">subTickCount</ref>;<sp/>++i)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>check<sp/>bounds<sp/>because<sp/>subticks<sp/>are<sp/>always<sp/>only<sp/>created<sp/>inside<sp/>current<sp/>mRange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subTickPositions.append(<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_axis_1a28353081e0ff35c3fe5ced923a287faa" kindref="member">mSubTickVector</ref>.at(i)));</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>all<sp/>properties<sp/>of<sp/>this<sp/>axis<sp/>to<sp/>QCPAxisPainterPrivate<sp/>which<sp/>it<sp/>needs<sp/>to<sp/>draw<sp/>the<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>some<sp/>axis<sp/>painter<sp/>properties<sp/>are<sp/>already<sp/>set<sp/>by<sp/>direct<sp/>feed-through<sp/>with<sp/>QCPAxis<sp/>setters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae04594e97417336933d807c86d353098" kindref="member">type</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ae704bf9f2c2b026f08dd4ccad79c616e" kindref="member">mAxisType</ref>;</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ab4affb27ae3485fecb7466622cabcbb2" kindref="member">basePen</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a3eb0681d31baf579bb73b86a0153cb02" kindref="member">getBasePen</ref>();</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1add1ff1030fbc36112c19b1468ad82d55" kindref="member">labelFont</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ab0768eb2879efb202645d19ff789e63e" kindref="member">getLabelFont</ref>();</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a5c36467daf057da0cf0792f3c5a06089" kindref="member">labelColor</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a42bd69b9e9c571f13624079be18ccdc1" kindref="member">getLabelColor</ref>();</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ae8001dbdfc47685c1cf7b98b044460e6" kindref="member">mLabel</ref>;</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a546d22b10ddb5ca8582b7deb90223a91" kindref="member">substituteExponent</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a721e496b342f272078c5ff84564e472f" kindref="member">mAutoTickLabels</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_1af03809bee3f3e35fcc38d25b6dd5003b" kindref="member">mNumberBeautifulPowers</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_1a6e056c1cb1aab0eddebfebbcb78c8f90" kindref="member">mTickLabelType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a4a7da0166f755f5abac23b765d184cada7f1eacf3b73adaefd334bea04e094b7e" kindref="member">ltNumber</ref>;</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a389dde97f02fdee23965e4736e7d8c62" kindref="member">tickPen</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a7f503910be40fb1717e1635be3ef17e1" kindref="member">getTickPen</ref>();</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a9b9cf594cd16575f52ecda9abef4e412" kindref="member">subTickPen</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ab4f7e60a40eb051c775afcaeab895c85" kindref="member">getSubTickPen</ref>();</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a06cb4b185feb1e560e01d65887e4d80d" kindref="member">tickLabelFont</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1aef30b66668986523225089a67280ec7a" kindref="member">getTickLabelFont</ref>();</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a88032cf15c997e3956b79617b859e8ad" kindref="member">tickLabelColor</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a0f8583f7ac24ccc70d39fdd2389cad6e" kindref="member">getTickLabelColor</ref>();</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>();</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>();</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a68353c2eeabd00d96a2e36a0b3809cb2" kindref="member">abbreviateDecimalPowers</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ad706039549cbbbec5fcb2baf7894e04d" kindref="member">mScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">stLogarithmic</ref>;</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a06d0ef3f4f1b567feb84196fc3b140da" kindref="member">reversedEndings</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a5cb034f57aa3d773a9ca55a0931dbf7b" kindref="member">mRangeReversed</ref>;</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae55e3dc2cf2af8d8a6e7235ccab54786" kindref="member">tickPositions</ref><sp/>=<sp/>tickPositions;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ad0a4998ca358ba751e84fca45a025abd" kindref="member">tickLabels</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a9a78fcccd98a73d37b3d991df7b6ef1d" kindref="member">tickLabels</ref>;</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1afcde7484bbcc1004b8f59ab984ada6f9" kindref="member">subTickPositions</ref><sp/>=<sp/>subTickPositions;</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a0207a99bdf9c4f70af20928898ddc2fc" kindref="member">draw</ref>(painter);</highlight></codeline>
<codeline lineno="5837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"></highlight></codeline>
<codeline lineno="5855"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a06320a944d1120732cc0d72fe1306d8b" kindref="member">QCPAxis::visibleTickBounds</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;lowIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;highIndex)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5856"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lowFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>highFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/>lowIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/>highIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i)<sp/>&gt;=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lowFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lowIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.size()-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i)<sp/>&lt;=<sp/><ref refid="class_q_c_p_axis_1a1ee36773c49062d751560e11f90845f7" kindref="member">mRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>highFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>highIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lowFound<sp/>&amp;&amp;<sp/>highFound)</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/>lowIndex<sp/>=<sp/>highIndex+1;</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lowFound<sp/>&amp;&amp;<sp/>!highFound)</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/>highIndex<sp/>=<sp/>lowIndex-1;</highlight></codeline>
<codeline lineno="5885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"></highlight></codeline>
<codeline lineno="5895"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a1385765db2419ee5fb5505a6cf9130fb" kindref="member">QCPAxis::baseLog</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5896"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qLn(value)*<ref refid="class_q_c_p_axis_1a93e068984b475467929e7f6768754227" kindref="member">mScaleLogBaseLogInv</ref>;</highlight></codeline>
<codeline lineno="5898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"></highlight></codeline>
<codeline lineno="5907"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a97d69f021a05126fcb978d0aefea47b8" kindref="member">QCPAxis::basePow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5908"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qPow(<ref refid="class_q_c_p_axis_1abc727ddb4af745151755d1b5e60d03c3" kindref="member">mScaleLogBase</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="5910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"></highlight></codeline>
<codeline lineno="5917"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_axis_1a3eb0681d31baf579bb73b86a0153cb02" kindref="member">QCPAxis::getBasePen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5918"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">spAxis</ref>)<sp/>?<sp/><ref refid="class_q_c_p_axis_1a80baa4e3c16f9b6edf3eccacd2a50fde" kindref="member">mSelectedBasePen</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_1ad6b4a0aee9558fb35529e960b8fef72d" kindref="member">mBasePen</ref>;</highlight></codeline>
<codeline lineno="5920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"></highlight></codeline>
<codeline lineno="5927"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_axis_1a7f503910be40fb1717e1635be3ef17e1" kindref="member">QCPAxis::getTickPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5928"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">spAxis</ref>)<sp/>?<sp/><ref refid="class_q_c_p_axis_1a9524593dbc75a5c5b29dbd1cb4b37df5" kindref="member">mSelectedTickPen</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_1a1d52c78c856d8bd1f331d4ec4e63d944" kindref="member">mTickPen</ref>;</highlight></codeline>
<codeline lineno="5930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"></highlight></codeline>
<codeline lineno="5937"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_axis_1ab4f7e60a40eb051c775afcaeab895c85" kindref="member">QCPAxis::getSubTickPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5938"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">spAxis</ref>)<sp/>?<sp/><ref refid="class_q_c_p_axis_1aa5cc6afc5dc2a365f5abbd36eb04a1dc" kindref="member">mSelectedSubTickPen</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_1a32ef56d3a417866720eb12667d27dbd1" kindref="member">mSubTickPen</ref>;</highlight></codeline>
<codeline lineno="5940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"></highlight></codeline>
<codeline lineno="5947"><highlight class="normal">QFont<sp/><ref refid="class_q_c_p_axis_1aef30b66668986523225089a67280ec7a" kindref="member">QCPAxis::getTickLabelFont</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5948"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa584e0a3dc4d064880647619f4bd4e771" kindref="member">spTickLabels</ref>)<sp/>?<sp/><ref refid="class_q_c_p_axis_1a4f2e4919da9615dac612662c249b1119" kindref="member">mSelectedTickLabelFont</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_1add79d1e39c4ed65869a1e9cc79043f3f" kindref="member">mTickLabelFont</ref>;</highlight></codeline>
<codeline lineno="5950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"></highlight></codeline>
<codeline lineno="5957"><highlight class="normal">QFont<sp/><ref refid="class_q_c_p_axis_1ab0768eb2879efb202645d19ff789e63e" kindref="member">QCPAxis::getLabelFont</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5958"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa851e0600e0d08b4f5fee9361e3fedabd" kindref="member">spAxisLabel</ref>)<sp/>?<sp/><ref refid="class_q_c_p_axis_1ae48fe3489afadc0b3cd003233e2bf19f" kindref="member">mSelectedLabelFont</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_1a37442d470e30e19b81ecaf979a34d046" kindref="member">mLabelFont</ref>;</highlight></codeline>
<codeline lineno="5960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"></highlight></codeline>
<codeline lineno="5967"><highlight class="normal">QColor<sp/><ref refid="class_q_c_p_axis_1a0f8583f7ac24ccc70d39fdd2389cad6e" kindref="member">QCPAxis::getTickLabelColor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5968"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa584e0a3dc4d064880647619f4bd4e771" kindref="member">spTickLabels</ref>)<sp/>?<sp/><ref refid="class_q_c_p_axis_1a3bcad40902f45dc4c991a2c3e4d31d70" kindref="member">mSelectedTickLabelColor</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_1a6384a749b3b56a97df081d8082321ab4" kindref="member">mTickLabelColor</ref>;</highlight></codeline>
<codeline lineno="5970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal">QColor<sp/><ref refid="class_q_c_p_axis_1a42bd69b9e9c571f13624079be18ccdc1" kindref="member">QCPAxis::getLabelColor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5978"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a8f1eb0abfe2ae64652aa46b360e841e4" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa851e0600e0d08b4f5fee9361e3fedabd" kindref="member">spAxisLabel</ref>)<sp/>?<sp/><ref refid="class_q_c_p_axis_1a94f57de3ba024471ca206d83cf2258dd" kindref="member">mSelectedLabelColor</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_1a457a003bb1c2b6ab73e5a173ba7558fd" kindref="member">mLabelColor</ref>;</highlight></codeline>
<codeline lineno="5980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"></highlight></codeline>
<codeline lineno="5996"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a47bdb0a55de6759489ee47665199aebb" kindref="member">QCPAxis::calculateMargin</ref>()</highlight></codeline>
<codeline lineno="5997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" kindref="member">mVisible</ref>)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>visible,<sp/>directly<sp/>return<sp/>0,<sp/>don&apos;t<sp/>cache<sp/>0<sp/>because<sp/>we<sp/>can&apos;t<sp/>react<sp/>to<sp/>setVisible<sp/>in<sp/>QCPAxis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref>)</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1a48ace55cbd54f7241e7f1b06fd369b64" kindref="member">mCachedMargin</ref>;</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>through<sp/>similar<sp/>steps<sp/>as<sp/>QCPAxis::draw,<sp/>and<sp/>caluclate<sp/>margin<sp/>needed<sp/>to<sp/>fit<sp/>axis<sp/>and<sp/>its<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowTick,<sp/>highTick;</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a06320a944d1120732cc0d72fe1306d8b" kindref="member">visibleTickBounds</ref>(lowTick,<sp/>highTick);</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>tickPositions;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>final<sp/>coordToPixel<sp/>transformed<sp/>vector<sp/>passed<sp/>to<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/>QVector&lt;QString&gt;<sp/><ref refid="class_q_c_p_axis_1a9a78fcccd98a73d37b3d991df7b6ef1d" kindref="member">tickLabels</ref>;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>final<sp/>vector<sp/>passed<sp/>to<sp/>QCPAxisPainter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/>tickPositions.reserve(highTick-lowTick+1);</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/>tickLabels.reserve(highTick-lowTick+1);</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ab111e74bba22e06848897c932fc549fe" kindref="member">mTicks</ref>)</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=lowTick;<sp/>i&lt;=highTick;<sp/>++i)</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickPositions.append(<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(<ref refid="class_q_c_p_axis_1aae0f9b9973b85be601200f00f5825087" kindref="member">mTickVector</ref>.at(i)));</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a3e4315be072026644e69009557a2fa11" kindref="member">mTickLabels</ref>)</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickLabels.append(<ref refid="class_q_c_p_axis_1aeee4bd0fca3f587eafe33843d1cb4f82" kindref="member">mTickVectorLabels</ref>.at(i));</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>all<sp/>properties<sp/>of<sp/>this<sp/>axis<sp/>to<sp/>QCPAxisPainterPrivate<sp/>which<sp/>it<sp/>needs<sp/>to<sp/>calculate<sp/>the<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>some<sp/>axis<sp/>painter<sp/>properties<sp/>are<sp/>already<sp/>set<sp/>by<sp/>direct<sp/>feed-through<sp/>with<sp/>QCPAxis<sp/>setters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae04594e97417336933d807c86d353098" kindref="member">type</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ae704bf9f2c2b026f08dd4ccad79c616e" kindref="member">mAxisType</ref>;</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1add1ff1030fbc36112c19b1468ad82d55" kindref="member">labelFont</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ab0768eb2879efb202645d19ff789e63e" kindref="member">getLabelFont</ref>();</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1ae8001dbdfc47685c1cf7b98b044460e6" kindref="member">mLabel</ref>;</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a06cb4b185feb1e560e01d65887e4d80d" kindref="member">tickLabelFont</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1add79d1e39c4ed65869a1e9cc79043f3f" kindref="member">mTickLabelFont</ref>;</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a6f150b65a202f32936997960e331dfcb" kindref="member">mAxisRect</ref>-&gt;<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>();</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>();</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ae55e3dc2cf2af8d8a6e7235ccab54786" kindref="member">tickPositions</ref><sp/>=<sp/>tickPositions;</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1ad0a4998ca358ba751e84fca45a025abd" kindref="member">tickLabels</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_1a9a78fcccd98a73d37b3d991df7b6ef1d" kindref="member">tickLabels</ref>;</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/>margin<sp/>+=<sp/><ref refid="class_q_c_p_axis_1aeeae00935bd2dab82d64f32544a90913" kindref="member">mAxisPainter</ref>-&gt;<ref refid="class_q_c_p_axis_painter_private_1a8b2dc0bd2ccbf6bd450733ec9e410a38" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/>margin<sp/>+=<sp/><ref refid="class_q_c_p_axis_1a52a805a4f03231210e0880db7f77e098" kindref="member">mPadding</ref>;</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"></highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a48ace55cbd54f7241e7f1b06fd369b64" kindref="member">mCachedMargin</ref><sp/>=<sp/>margin;</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_1a2cde37b6e385f47e11322df4ac1b0e9b" kindref="member">mCachedMarginValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>margin;</highlight></codeline>
<codeline lineno="6038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"></highlight></codeline>
<codeline lineno="6040"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/><ref refid="class_q_c_p_axis_1aca53b2f365dfc1257cba9e62395aa68f" kindref="member">QCPAxis::selectionCategory</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6042"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037ad6644ac55bef621645326e9dd7469caa" kindref="member">QCP::iSelectAxes</ref>;</highlight></codeline>
<codeline lineno="6044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"></highlight></codeline>
<codeline lineno="6046"><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"></codeline>
<codeline lineno="6067"><highlight class="normal"><ref refid="class_q_c_p_axis_painter_private_1a0f14aa5c4aa83dbcd68984a7c73bf94f" kindref="member">QCPAxisPainterPrivate::QCPAxisPainterPrivate</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/>type(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>::atLeft),</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/>basePen(QPen(Qt::black,<sp/>0,<sp/>Qt::SolidLine,<sp/>Qt::SquareCap)),</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/>lowerEnding(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref>::esNone),</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/>upperEnding(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref>::esNone),</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/>labelPadding(0),</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/>tickLabelPadding(0),</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/>tickLabelRotation(0),</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/>tickLabelSide(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>::lsOutside),</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/>substituteExponent(true),</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/>numberMultiplyCross(false),</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/>tickLengthIn(5),</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/>tickLengthOut(0),</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/>subTickLengthIn(2),</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/>subTickLengthOut(0),</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/>tickPen(QPen(Qt::black,<sp/>0,<sp/>Qt::SolidLine,<sp/>Qt::SquareCap)),</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/>subTickPen(QPen(Qt::black,<sp/>0,<sp/>Qt::SolidLine,<sp/>Qt::SquareCap)),</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/>offset(0),</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/>abbreviateDecimalPowers(false),</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/>reversedEndings(false),</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/>mParentPlot(parentPlot),</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/>mLabelCache(16)<sp/></highlight><highlight class="comment">//<sp/>cache<sp/>at<sp/>most<sp/>16<sp/>(tick)<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"></highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><ref refid="class_q_c_p_axis_painter_private_1a7c7f95313f0f78c3c3975f822a5fea35" kindref="member">QCPAxisPainterPrivate::~QCPAxisPainterPrivate</ref>()</highlight></codeline>
<codeline lineno="6093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"></highlight></codeline>
<codeline lineno="6103"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1a0207a99bdf9c4f70af20928898ddc2fc" kindref="member">QCPAxisPainterPrivate::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="6104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/>QByteArray<sp/>newHash<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1a91a023bbefe1c3bf330570c0b985de84" kindref="member">generateLabelParameterHash</ref>();</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newHash<sp/>!=<sp/><ref refid="class_q_c_p_axis_painter_private_1aab8be59df22ed4e43e3a6d511cbc466a" kindref="member">mLabelParameterHash</ref>)</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a07ac270ea0c0ae084debd48d6a740e35" kindref="member">mLabelCache</ref>.clear();</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1aab8be59df22ed4e43e3a6d511cbc466a" kindref="member">mLabelParameterHash</ref><sp/>=<sp/>newHash;</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/>QPoint<sp/>origin;</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>:<sp/><sp/><sp/>origin<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottomLeft()<sp/>+QPoint(-<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>:<sp/><sp/>origin<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottomRight()+QPoint(+<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>,<sp/>0);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>:<sp/><sp/><sp/><sp/>origin<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.topLeft()<sp/><sp/><sp/><sp/>+QPoint(0,<sp/>-<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>:<sp/>origin<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottomLeft()<sp/>+QPoint(0,<sp/>+<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"></highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xCor<sp/>=<sp/>0,<sp/>yCor<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>paint<sp/>system<sp/>correction,<sp/>for<sp/>pixel<sp/>exact<sp/>matches<sp/>(affects<sp/>baselines<sp/>and<sp/>ticks<sp/>of<sp/>top/right<sp/>axes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>:<sp/>yCor<sp/>=<sp/>-1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>:<sp/>xCor<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6128"><highlight class="normal"></highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>baseline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/>QLineF<sp/>baseLine;</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_axis_painter_private_1ab4affb27ae3485fecb7466622cabcbb2" kindref="member">basePen</ref>);</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/>baseLine.setPoints(origin+QPointF(xCor,<sp/>yCor),<sp/>origin+QPointF(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.width()+xCor,<sp/>yCor));</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/><sp/><sp/>baseLine.setPoints(origin+QPointF(xCor,<sp/>yCor),<sp/>origin+QPointF(xCor,<sp/>-<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.height()+yCor));</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a06d0ef3f4f1b567feb84196fc3b140da" kindref="member">reversedEndings</ref>)</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/>baseLine<sp/>=<sp/>QLineF(baseLine.p2(),<sp/>baseLine.p1());<sp/></highlight><highlight class="comment">//<sp/>won&apos;t<sp/>make<sp/>a<sp/>difference<sp/>for<sp/>line<sp/>itself,<sp/>but<sp/>for<sp/>line<sp/>endings<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(baseLine);</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>ticks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tickPositions.isEmpty())</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_axis_painter_private_1a389dde97f02fdee23965e4736e7d8c62" kindref="member">tickPen</ref>);</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickDir<sp/>=<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)<sp/>?<sp/>-1<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>direction<sp/>of<sp/>ticks<sp/>(&quot;inward&quot;<sp/>is<sp/>right<sp/>for<sp/>left<sp/>axis<sp/>and<sp/>left<sp/>for<sp/>right<sp/>axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;tickPositions.size();<sp/>++i)</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(tickPositions.at(i)+xCor,<sp/>origin.y()-<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>*tickDir+yCor,<sp/>tickPositions.at(i)+xCor,<sp/>origin.y()+<ref refid="class_q_c_p_axis_painter_private_1ae7360ff805fc6097019de8b35ffbd7e7" kindref="member">tickLengthIn</ref>*tickDir+yCor));</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;tickPositions.size();<sp/>++i)</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(origin.x()-<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>*tickDir+xCor,<sp/>tickPositions.at(i)+yCor,<sp/>origin.x()+<ref refid="class_q_c_p_axis_painter_private_1ae7360ff805fc6097019de8b35ffbd7e7" kindref="member">tickLengthIn</ref>*tickDir+xCor,<sp/>tickPositions.at(i)+yCor));</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>subticks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!subTickPositions.isEmpty())</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_axis_painter_private_1a9b9cf594cd16575f52ecda9abef4e412" kindref="member">subTickPen</ref>);</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>of<sp/>ticks<sp/>(&quot;inward&quot;<sp/>is<sp/>right<sp/>for<sp/>left<sp/>axis<sp/>and<sp/>left<sp/>for<sp/>right<sp/>axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tickDir<sp/>=<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)<sp/>?<sp/>-1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;subTickPositions.size();<sp/>++i)</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(subTickPositions.at(i)+xCor,<sp/>origin.y()-<ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>*tickDir+yCor,<sp/>subTickPositions.at(i)+xCor,<sp/>origin.y()+<ref refid="class_q_c_p_axis_painter_private_1af11f7d83021c9cb3b0e76fe7814c6110" kindref="member">subTickLengthIn</ref>*tickDir+yCor));</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;subTickPositions.size();<sp/>++i)</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(origin.x()-<ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>*tickDir+xCor,<sp/>subTickPositions.at(i)+yCor,<sp/>origin.x()+<ref refid="class_q_c_p_axis_painter_private_1af11f7d83021c9cb3b0e76fe7814c6110" kindref="member">subTickLengthIn</ref>*tickDir+xCor,<sp/>subTickPositions.at(i)+yCor));</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/>margin<sp/>+=<sp/>qMax(0,<sp/>qMax(<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>,<sp/><ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>));</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>axis<sp/>base<sp/>endings:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>antialiasingBackup<sp/>=<sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a13370d7996315a7150be2fc868da3d4a" kindref="member">antialiasing</ref>();</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>always<sp/>want<sp/>endings<sp/>to<sp/>be<sp/>antialiased,<sp/>even<sp/>if<sp/>base<sp/>and<sp/>ticks<sp/>themselves<sp/>aren&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/>painter-&gt;setBrush(QBrush(<ref refid="class_q_c_p_axis_painter_private_1ab4affb27ae3485fecb7466622cabcbb2" kindref="member">basePen</ref>.color()));</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/>QVector2D<sp/>baseLineVector(baseLine.dx(),<sp/>baseLine.dy());</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a077696dd1e7efb96e4c199f521433e24" kindref="member">lowerEnding</ref>.<ref refid="class_q_c_p_line_ending_1aea324dbfddbca9895ca8a3a968671299" kindref="member">style</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">QCPLineEnding::esNone</ref>)</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a077696dd1e7efb96e4c199f521433e24" kindref="member">lowerEnding</ref>.<ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">draw</ref>(painter,<sp/>QVector2D(baseLine.p1())-baseLineVector.normalized()*<ref refid="class_q_c_p_axis_painter_private_1a077696dd1e7efb96e4c199f521433e24" kindref="member">lowerEnding</ref>.<ref refid="class_q_c_p_line_ending_1a6a528e6dc5aabe1077a573b045715f03" kindref="member">realLength</ref>()*(<ref refid="class_q_c_p_axis_painter_private_1a077696dd1e7efb96e4c199f521433e24" kindref="member">lowerEnding</ref>.<ref refid="class_q_c_p_line_ending_1aa4ffbb182cbc89fc3d92eb348630502c" kindref="member">inverted</ref>()?-1:1),<sp/>-baseLineVector);</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1af764be913be5f924700ac9bbb8c01139" kindref="member">upperEnding</ref>.<ref refid="class_q_c_p_line_ending_1aea324dbfddbca9895ca8a3a968671299" kindref="member">style</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">QCPLineEnding::esNone</ref>)</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1af764be913be5f924700ac9bbb8c01139" kindref="member">upperEnding</ref>.<ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">draw</ref>(painter,<sp/>QVector2D(baseLine.p2())+baseLineVector.normalized()*<ref refid="class_q_c_p_axis_painter_private_1af764be913be5f924700ac9bbb8c01139" kindref="member">upperEnding</ref>.<ref refid="class_q_c_p_line_ending_1a6a528e6dc5aabe1077a573b045715f03" kindref="member">realLength</ref>()*(<ref refid="class_q_c_p_axis_painter_private_1af764be913be5f924700ac9bbb8c01139" kindref="member">upperEnding</ref>.<ref refid="class_q_c_p_line_ending_1aa4ffbb182cbc89fc3d92eb348630502c" kindref="member">inverted</ref>()?-1:1),<sp/>baseLineVector);</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(antialiasingBackup);</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tick<sp/>labels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/>QRect<sp/>oldClipRect;</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">QCPAxis::lsInside</ref>)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>using<sp/>inside<sp/>labels,<sp/>clip<sp/>them<sp/>to<sp/>the<sp/>axis<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/>oldClipRect<sp/>=<sp/>painter-&gt;clipRegion().boundingRect();</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setClipRect(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>);</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/>QSize<sp/>tickLabelsSize(0,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>largest<sp/>tick<sp/>label,<sp/>for<sp/>offset<sp/>calculation<sp/>of<sp/>axis<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tickLabels.isEmpty())</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>margin<sp/>+=<sp/><ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref>;</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setFont(<ref refid="class_q_c_p_axis_painter_private_1a06cb4b185feb1e560e01d65887e4d80d" kindref="member">tickLabelFont</ref>);</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(QPen(<ref refid="class_q_c_p_axis_painter_private_1a88032cf15c997e3956b79617b859e8ad" kindref="member">tickLabelColor</ref>));</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLabelIndex<sp/>=<sp/>qMin(tickPositions.size(),<sp/>tickLabels.size());</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distanceToAxis<sp/>=<sp/>margin;</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">QCPAxis::lsInside</ref>)</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distanceToAxis<sp/>=<sp/>-(qMax(<ref refid="class_q_c_p_axis_painter_private_1ae7360ff805fc6097019de8b35ffbd7e7" kindref="member">tickLengthIn</ref>,<sp/><ref refid="class_q_c_p_axis_painter_private_1af11f7d83021c9cb3b0e76fe7814c6110" kindref="member">subTickLengthIn</ref>)+<ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref>);</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;maxLabelIndex;<sp/>++i)</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1af8fe7350c19575bc33ca770f9b3a15fd" kindref="member">placeTickLabel</ref>(painter,<sp/>tickPositions.at(i),<sp/>distanceToAxis,<sp/>tickLabels.at(i),<sp/>&amp;tickLabelsSize);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>margin<sp/>+=<sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal)<sp/>?<sp/>tickLabelsSize.height()<sp/>:<sp/>tickLabelsSize.width();</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">QCPAxis::lsInside</ref>)</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setClipRect(oldClipRect);</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>label:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/>QRect<sp/>labelBounds;</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>.isEmpty())</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/>margin<sp/>+=<sp/><ref refid="class_q_c_p_axis_painter_private_1a3f7465372df132bf7814345ea697dd34" kindref="member">labelPadding</ref>;</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setFont(<ref refid="class_q_c_p_axis_painter_private_1add1ff1030fbc36112c19b1468ad82d55" kindref="member">labelFont</ref>);</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(QPen(<ref refid="class_q_c_p_axis_painter_private_1a5c36467daf057da0cf0792f3c5a06089" kindref="member">labelColor</ref>));</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/>labelBounds<sp/>=<sp/>painter-&gt;fontMetrics().boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip,<sp/><ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>)</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTransform<sp/>oldTransform<sp/>=<sp/>painter-&gt;transform();</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;translate((origin.x()-margin-labelBounds.height()),<sp/>origin.y());</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;rotate(-90);</highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawText(0,<sp/>0,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.height(),<sp/>labelBounds.height(),<sp/>Qt::TextDontClip<sp/>|<sp/>Qt::AlignCenter,<sp/><ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setTransform(oldTransform);</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QTransform<sp/>oldTransform<sp/>=<sp/>painter-&gt;transform();</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;translate((origin.x()+margin+labelBounds.height()),<sp/>origin.y()-<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.height());</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;rotate(90);</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawText(0,<sp/>0,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.height(),<sp/>labelBounds.height(),<sp/>Qt::TextDontClip<sp/>|<sp/>Qt::AlignCenter,<sp/><ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setTransform(oldTransform);</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawText(origin.x(),<sp/>origin.y()-margin-labelBounds.height(),<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.width(),<sp/>labelBounds.height(),<sp/>Qt::TextDontClip<sp/>|<sp/>Qt::AlignCenter,<sp/><ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>)</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawText(origin.x(),<sp/>origin.y()+margin,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.width(),<sp/>labelBounds.height(),<sp/>Qt::TextDontClip<sp/>|<sp/>Qt::AlignCenter,<sp/><ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>selection<sp/>boxes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectionTolerance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a882029a5f2d4abd71289d415c9b90a28" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/>selectionTolerance<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1a882029a5f2d4abd71289d415c9b90a28" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>();</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mParentPlot<sp/>is<sp/>null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selAxisOutSize<sp/>=<sp/>qMax(qMax(<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>,<sp/><ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>),<sp/>selectionTolerance);</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selAxisInSize<sp/>=<sp/>selectionTolerance;</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selTickLabelSize;</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selTickLabelOffset;</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/>selTickLabelSize<sp/>=<sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/>tickLabelsSize.height()<sp/>:<sp/>tickLabelsSize.width());</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/><sp/><sp/>selTickLabelOffset<sp/>=<sp/>qMax(<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>,<sp/><ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>)+<ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref>;</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/>selTickLabelSize<sp/>=<sp/>-(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/>tickLabelsSize.height()<sp/>:<sp/>tickLabelsSize.width());</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/>selTickLabelOffset<sp/>=<sp/>-(qMax(<ref refid="class_q_c_p_axis_painter_private_1ae7360ff805fc6097019de8b35ffbd7e7" kindref="member">tickLengthIn</ref>,<sp/><ref refid="class_q_c_p_axis_painter_private_1af11f7d83021c9cb3b0e76fe7814c6110" kindref="member">subTickLengthIn</ref>)+<ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref>);</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selLabelSize<sp/>=<sp/>labelBounds.height();</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selLabelOffset<sp/>=<sp/>qMax(<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>,<sp/><ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>)+(!tickLabels.isEmpty()<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref><sp/>?<sp/><ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref>+selTickLabelSize<sp/>:<sp/>0)+<ref refid="class_q_c_p_axis_painter_private_1a3f7465372df132bf7814345ea697dd34" kindref="member">labelPadding</ref>;</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>)</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a9d7586f4923994488bdd006415b13f5f" kindref="member">mAxisSelectionBox</ref>.setCoords(origin.x()-selAxisOutSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.top(),<sp/>origin.x()+selAxisInSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottom());</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a0adaf5f1d89be0f32dc4a904d157e5a9" kindref="member">mTickLabelsSelectionBox</ref>.setCoords(origin.x()-selTickLabelOffset-selTickLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.top(),<sp/>origin.x()-selTickLabelOffset,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottom());</highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1abac9a47048d537f72ca147b6f29d30f1" kindref="member">mLabelSelectionBox</ref>.setCoords(origin.x()-selLabelOffset-selLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.top(),<sp/>origin.x()-selLabelOffset,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottom());</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a9d7586f4923994488bdd006415b13f5f" kindref="member">mAxisSelectionBox</ref>.setCoords(origin.x()-selAxisInSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.top(),<sp/>origin.x()+selAxisOutSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottom());</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a0adaf5f1d89be0f32dc4a904d157e5a9" kindref="member">mTickLabelsSelectionBox</ref>.setCoords(origin.x()+selTickLabelOffset+selTickLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.top(),<sp/>origin.x()+selTickLabelOffset,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottom());</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1abac9a47048d537f72ca147b6f29d30f1" kindref="member">mLabelSelectionBox</ref>.setCoords(origin.x()+selLabelOffset+selLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.top(),<sp/>origin.x()+selLabelOffset,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottom());</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a9d7586f4923994488bdd006415b13f5f" kindref="member">mAxisSelectionBox</ref>.setCoords(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.left(),<sp/>origin.y()-selAxisOutSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.right(),<sp/>origin.y()+selAxisInSize);</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a0adaf5f1d89be0f32dc4a904d157e5a9" kindref="member">mTickLabelsSelectionBox</ref>.setCoords(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.left(),<sp/>origin.y()-selTickLabelOffset-selTickLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.right(),<sp/>origin.y()-selTickLabelOffset);</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1abac9a47048d537f72ca147b6f29d30f1" kindref="member">mLabelSelectionBox</ref>.setCoords(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.left(),<sp/>origin.y()-selLabelOffset-selLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.right(),<sp/>origin.y()-selLabelOffset);</highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>)</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a9d7586f4923994488bdd006415b13f5f" kindref="member">mAxisSelectionBox</ref>.setCoords(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.left(),<sp/>origin.y()-selAxisInSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.right(),<sp/>origin.y()+selAxisOutSize);</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a0adaf5f1d89be0f32dc4a904d157e5a9" kindref="member">mTickLabelsSelectionBox</ref>.setCoords(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.left(),<sp/>origin.y()+selTickLabelOffset+selTickLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.right(),<sp/>origin.y()+selTickLabelOffset);</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1abac9a47048d537f72ca147b6f29d30f1" kindref="member">mLabelSelectionBox</ref>.setCoords(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.left(),<sp/>origin.y()+selLabelOffset+selLabelSize,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.right(),<sp/>origin.y()+selLabelOffset);</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a9d7586f4923994488bdd006415b13f5f" kindref="member">mAxisSelectionBox</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1a9d7586f4923994488bdd006415b13f5f" kindref="member">mAxisSelectionBox</ref>.normalized();</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a0adaf5f1d89be0f32dc4a904d157e5a9" kindref="member">mTickLabelsSelectionBox</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1a0adaf5f1d89be0f32dc4a904d157e5a9" kindref="member">mTickLabelsSelectionBox</ref>.normalized();</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1abac9a47048d537f72ca147b6f29d30f1" kindref="member">mLabelSelectionBox</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1abac9a47048d537f72ca147b6f29d30f1" kindref="member">mLabelSelectionBox</ref>.normalized();</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>hitboxes<sp/>for<sp/>debug<sp/>purposes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//painter-&gt;setBrush(Qt::NoBrush);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//painter-&gt;drawRects(QVector&lt;QRect&gt;()<sp/>&lt;&lt;<sp/>mAxisSelectionBox<sp/>&lt;&lt;<sp/>mTickLabelsSelectionBox<sp/>&lt;&lt;<sp/>mLabelSelectionBox);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"></highlight></codeline>
<codeline lineno="6297"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1a8b2dc0bd2ccbf6bd450733ec9e410a38" kindref="member">QCPAxisPainterPrivate::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6298"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>length<sp/>of<sp/>tick<sp/>marks<sp/>pointing<sp/>outwards:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tickPositions.isEmpty())</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>qMax(0,<sp/>qMax(<ref refid="class_q_c_p_axis_painter_private_1acbebb1f868906200f968627bc907b77d" kindref="member">tickLengthOut</ref>,<sp/><ref refid="class_q_c_p_axis_painter_private_1a5f1afddc3dc7ccc4d5adcbcd8f0c2218" kindref="member">subTickLengthOut</ref>));</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>size<sp/>of<sp/>tick<sp/>labels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>tickLabelsSize(0,<sp/>0);</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tickLabels.isEmpty())</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;tickLabels.size();<sp/>++i)</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a8a7c82303e272485621fde78a5b674f9" kindref="member">getMaxTickLabelSize</ref>(<ref refid="class_q_c_p_axis_painter_private_1a06cb4b185feb1e560e01d65887e4d80d" kindref="member">tickLabelFont</ref>,<sp/>tickLabels.at(i),<sp/>&amp;tickLabelsSize);</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/>tickLabelsSize.height()<sp/>:<sp/>tickLabelsSize.width();</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_q_c_p_axis_painter_private_1a264cfa080e84e536cf2d1ab9c5d5cc5f" kindref="member">tickLabelPadding</ref>;</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>size<sp/>of<sp/>axis<sp/>label<sp/>(only<sp/>height<sp/>needed,<sp/>because<sp/>left/right<sp/>labels<sp/>are<sp/>rotated<sp/>by<sp/>90<sp/>degrees):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>.isEmpty())</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/>QFontMetrics<sp/>fontMetrics(<ref refid="class_q_c_p_axis_painter_private_1add1ff1030fbc36112c19b1468ad82d55" kindref="member">labelFont</ref>);</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>bounds;</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/>bounds<sp/>=<sp/>fontMetrics.boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip<sp/>|<sp/>Qt::AlignHCenter<sp/>|<sp/>Qt::AlignVCenter,<sp/><ref refid="class_q_c_p_axis_painter_private_1afe004c322f92543c0467afc02da6cf6d" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>bounds.height()<sp/>+<sp/><ref refid="class_q_c_p_axis_painter_private_1a3f7465372df132bf7814345ea697dd34" kindref="member">labelPadding</ref>;</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"></highlight></codeline>
<codeline lineno="6336"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1a7b6806e32c44384fd0ae4dcdaa72b1b5" kindref="member">QCPAxisPainterPrivate::clearCache</ref>()</highlight></codeline>
<codeline lineno="6337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a07ac270ea0c0ae084debd48d6a740e35" kindref="member">mLabelCache</ref>.clear();</highlight></codeline>
<codeline lineno="6339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"></highlight></codeline>
<codeline lineno="6348"><highlight class="normal">QByteArray<sp/><ref refid="class_q_c_p_axis_painter_private_1a91a023bbefe1c3bf330570c0b985de84" kindref="member">QCPAxisPainterPrivate::generateLabelParameterHash</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6349"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/>QByteArray<sp/>result;</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/>result.append(QByteArray::number(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>));</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/>result.append(QByteArray::number((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_painter_private_1a9d27f7625fcfbeb3a60193d0c18fc7e9" kindref="member">tickLabelSide</ref>));</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/>result.append(QByteArray::number((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_painter_private_1a546d22b10ddb5ca8582b7deb90223a91" kindref="member">substituteExponent</ref>));</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/>result.append(QByteArray::number((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_q_c_p_axis_painter_private_1a0deb7524009140f00a774dfd286d002c" kindref="member">numberMultiplyCross</ref>));</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/>result.append(<ref refid="class_q_c_p_axis_painter_private_1a88032cf15c997e3956b79617b859e8ad" kindref="member">tickLabelColor</ref>.name().toLatin1()+QByteArray::number(<ref refid="class_q_c_p_axis_painter_private_1a88032cf15c997e3956b79617b859e8ad" kindref="member">tickLabelColor</ref>.alpha(),<sp/>16));</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/>result.append(<ref refid="class_q_c_p_axis_painter_private_1a06cb4b185feb1e560e01d65887e4d80d" kindref="member">tickLabelFont</ref>.toString().toLatin1());</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"></highlight></codeline>
<codeline lineno="6379"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1af8fe7350c19575bc33ca770f9b3a15fd" kindref="member">QCPAxisPainterPrivate::placeTickLabel</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distanceToAxis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/>QSize<sp/>*tickLabelsSize)</highlight></codeline>
<codeline lineno="6380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>if<sp/>you<sp/>change<sp/>anything<sp/>here,<sp/>also<sp/>adapt<sp/>getMaxTickLabelSize()<sp/>accordingly!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text.isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/>QSize<sp/>finalSize;</highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/>QPointF<sp/>labelAnchor;</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>:<sp/><sp/><sp/>labelAnchor<sp/>=<sp/>QPointF(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.left()-distanceToAxis-<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>,<sp/>position);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>:<sp/><sp/>labelAnchor<sp/>=<sp/>QPointF(<ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.right()+distanceToAxis+<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>,<sp/>position);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>:<sp/><sp/><sp/><sp/>labelAnchor<sp/>=<sp/>QPointF(position,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.top()-distanceToAxis-<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>:<sp/>labelAnchor<sp/>=<sp/>QPointF(position,<sp/><ref refid="class_q_c_p_axis_painter_private_1afcd55b0e1ecd689fffd2b1fc75dc7732" kindref="member">axisRect</ref>.bottom()+distanceToAxis+<ref refid="class_q_c_p_axis_painter_private_1aea226a1e39357d71f66d85093e30a830" kindref="member">offset</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a882029a5f2d4abd71289d415c9b90a28" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a130b55e205697a5288081e9fc11e443e" kindref="member">plottingHints</ref>().testFlag(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a8e9cfe5ee0c5cd36dd7accf9739aff65" kindref="member">QCP::phCacheLabels</ref>)<sp/>&amp;&amp;<sp/>!painter-&gt;<ref refid="class_q_c_p_painter_1a99b89eaf5363faaa1e1e6162856f436c" kindref="member">modes</ref>().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">QCPPainter::pmNoCaching</ref>))<sp/></highlight><highlight class="comment">//<sp/>label<sp/>caching<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_painter_private_1a07ac270ea0c0ae084debd48d6a740e35" kindref="member">mLabelCache</ref>.contains(text))<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>cached<sp/>label<sp/>exists,<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CachedLabel<sp/>*newCachedLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CachedLabel;</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TickLabelData<sp/>labelData<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1ad9f24fbcbf9d8c92b34d9d00b010e6a3" kindref="member">getTickLabelData</ref>(painter-&gt;font(),<sp/>text);</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newCachedLabel-&gt;offset<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1a6b02e6fd70cc65f726ca8cb3e6f16de4" kindref="member">getTickLabelDrawOffset</ref>(labelData)+labelData.rotatedTotalBounds.topLeft();</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newCachedLabel-&gt;pixmap<sp/>=<sp/>QPixmap(labelData.rotatedTotalBounds.size());</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newCachedLabel-&gt;pixmap.fill(Qt::transparent);</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>cachePainter(&amp;newCachedLabel-&gt;pixmap);</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cachePainter.setPen(painter-&gt;pen());</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1ad8f2f12cd35b8189e8bf96679e873933" kindref="member">drawTickLabel</ref>(&amp;cachePainter,<sp/>-labelData.rotatedTotalBounds.topLeft().x(),<sp/>-labelData.rotatedTotalBounds.topLeft().y(),<sp/>labelData);</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1a07ac270ea0c0ae084debd48d6a740e35" kindref="member">mLabelCache</ref>.insert(text,<sp/>newCachedLabel,<sp/>1);</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>cached<sp/>label:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CachedLabel<sp/>*cachedLabel<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1a07ac270ea0c0ae084debd48d6a740e35" kindref="member">mLabelCache</ref>.object(text);</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>label<sp/>would<sp/>be<sp/>partly<sp/>clipped<sp/>by<sp/>widget<sp/>border<sp/>on<sp/>sides,<sp/>don&apos;t<sp/>draw<sp/>it<sp/>(only<sp/>for<sp/>outside<sp/>tick<sp/>labels):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labelAnchor.x()+cachedLabel-&gt;offset.x()+cachedLabel-&gt;pixmap.width()<sp/>&gt;<sp/><ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.right()<sp/>||</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelAnchor.x()+cachedLabel-&gt;offset.x()<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.left())</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labelAnchor.y()+cachedLabel-&gt;offset.y()+cachedLabel-&gt;pixmap.height()<sp/>&gt;<ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.bottom()<sp/>||</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labelAnchor.y()+cachedLabel-&gt;offset.y()<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.top())</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(labelAnchor+cachedLabel-&gt;offset,<sp/>cachedLabel-&gt;pixmap);</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/>finalSize<sp/>=<sp/>cachedLabel-&gt;pixmap.size();</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>label<sp/>caching<sp/>disabled,<sp/>draw<sp/>text<sp/>directly<sp/>on<sp/>surface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/>TickLabelData<sp/>labelData<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1ad9f24fbcbf9d8c92b34d9d00b010e6a3" kindref="member">getTickLabelData</ref>(painter-&gt;font(),<sp/>text);</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>finalPosition<sp/>=<sp/>labelAnchor<sp/>+<sp/><ref refid="class_q_c_p_axis_painter_private_1a6b02e6fd70cc65f726ca8cb3e6f16de4" kindref="member">getTickLabelDrawOffset</ref>(labelData);</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>label<sp/>would<sp/>be<sp/>partly<sp/>clipped<sp/>by<sp/>widget<sp/>border<sp/>on<sp/>sides,<sp/>don&apos;t<sp/>draw<sp/>it<sp/>(only<sp/>for<sp/>outside<sp/>tick<sp/>labels):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(type)<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalPosition.x()+(labelData.rotatedTotalBounds.width()+labelData.rotatedTotalBounds.left())<sp/>&gt;<sp/><ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.right()<sp/>||</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition.x()+labelData.rotatedTotalBounds.left()<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.left())</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalPosition.y()+(labelData.rotatedTotalBounds.height()+labelData.rotatedTotalBounds.top())<sp/>&gt;<sp/><ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.bottom()<sp/>||</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition.y()+labelData.rotatedTotalBounds.top()<sp/>&lt;<sp/><ref refid="class_q_c_p_axis_painter_private_1a8627dc6b40781e3291bb508e4ac574d6" kindref="member">viewportRect</ref>.top())</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_painter_private_1ad8f2f12cd35b8189e8bf96679e873933" kindref="member">drawTickLabel</ref>(painter,<sp/>finalPosition.x(),<sp/>finalPosition.y(),<sp/>labelData);</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/>finalSize<sp/>=<sp/>labelData.rotatedTotalBounds.size();</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>expand<sp/>passed<sp/>tickLabelsSize<sp/>if<sp/>current<sp/>tick<sp/>label<sp/>is<sp/>larger:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalSize.width()<sp/>&gt;<sp/>tickLabelsSize-&gt;width())</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/>tickLabelsSize-&gt;setWidth(finalSize.width());</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalSize.height()<sp/>&gt;<sp/>tickLabelsSize-&gt;height())</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/>tickLabelsSize-&gt;setHeight(finalSize.height());</highlight></codeline>
<codeline lineno="6453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"></highlight></codeline>
<codeline lineno="6464"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1ad8f2f12cd35b8189e8bf96679e873933" kindref="member">QCPAxisPainterPrivate::drawTickLabel</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickLabelData<sp/>&amp;labelData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6465"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>backup<sp/>painter<sp/>settings<sp/>that<sp/>we&apos;re<sp/>about<sp/>to<sp/>change:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/>QTransform<sp/>oldTransform<sp/>=<sp/>painter-&gt;transform();</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/>QFont<sp/>oldFont<sp/>=<sp/>painter-&gt;font();</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transform<sp/>painter<sp/>to<sp/>position/rotation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/>painter-&gt;translate(x,<sp/>y);</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>))</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;rotate(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>);</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>text:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!labelData.expPart.isEmpty())<sp/></highlight><highlight class="comment">//<sp/>indicator<sp/>that<sp/>beautiful<sp/>powers<sp/>must<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setFont(labelData.baseFont);</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawText(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip,<sp/>labelData.basePart);</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setFont(labelData.expFont);</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawText(labelData.baseBounds.width()+1,<sp/>0,<sp/>labelData.expBounds.width(),<sp/>labelData.expBounds.height(),<sp/>Qt::TextDontClip,<sp/><sp/>labelData.expPart);</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setFont(labelData.baseFont);</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawText(0,<sp/>0,<sp/>labelData.totalBounds.width(),<sp/>labelData.totalBounds.height(),<sp/>Qt::TextDontClip<sp/>|<sp/>Qt::AlignHCenter,<sp/>labelData.basePart);</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>painter<sp/>settings<sp/>to<sp/>what<sp/>it<sp/>was<sp/>before:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/>painter-&gt;setTransform(oldTransform);</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/>painter-&gt;setFont(oldFont);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"></highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><ref refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data" kindref="compound">QCPAxisPainterPrivate::TickLabelData</ref><sp/><ref refid="class_q_c_p_axis_painter_private_1ad9f24fbcbf9d8c92b34d9d00b010e6a3" kindref="member">QCPAxisPainterPrivate::getTickLabelData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6502"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/>TickLabelData<sp/>result;</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>whether<sp/>beautiful<sp/>decimal<sp/>powers<sp/>should<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useBeautifulPowers<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ePos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(substituteExponent)</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/>ePos<sp/>=<sp/>text.indexOf(QLatin1Char(</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ePos<sp/>&gt;<sp/>-1)</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>useBeautifulPowers<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>text<sp/>bounding<sp/>rects<sp/>and<sp/>do<sp/>string<sp/>preparation<sp/>for<sp/>beautiful<sp/>decimal<sp/>powers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/>result.<ref refid="struct_q_c_p_axis_painter_private_1_1_tick_label_data_1a0d4958a706debaa8d19a9b65fc090d56" kindref="member">baseFont</ref><sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.baseFont.pointSizeF()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>On<sp/>some<sp/>rare<sp/>systems,<sp/>this<sp/>sometimes<sp/>is<sp/>initialized<sp/>with<sp/>-1<sp/>(Qt<sp/>bug?),<sp/>so<sp/>we<sp/>check<sp/>here<sp/>before<sp/>possibly<sp/>setting<sp/>a<sp/>negative<sp/>value<sp/>in<sp/>the<sp/>next<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/>result.baseFont.setPointSizeF(result.baseFont.pointSizeF()+0.05);<sp/></highlight><highlight class="comment">//<sp/>QFontMetrics.boundingRect<sp/>has<sp/>a<sp/>bug<sp/>for<sp/>exact<sp/>point<sp/>sizes<sp/>that<sp/>make<sp/>the<sp/>results<sp/>oscillate<sp/>due<sp/>to<sp/>internal<sp/>rounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useBeautifulPowers)</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>text<sp/>into<sp/>parts<sp/>of<sp/>number/symbol<sp/>that<sp/>will<sp/>be<sp/>drawn<sp/>normally<sp/>and<sp/>part<sp/>that<sp/>will<sp/>be<sp/>drawn<sp/>as<sp/>exponent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/>result.basePart<sp/>=<sp/>text.left(ePos);</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>log<sp/>scaling,<sp/>we<sp/>want<sp/>to<sp/>turn<sp/>&quot;1*10^n&quot;<sp/>into<sp/>&quot;10^n&quot;,<sp/>else<sp/>add<sp/>multiplication<sp/>sign<sp/>and<sp/>decimal<sp/>base:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a68353c2eeabd00d96a2e36a0b3809cb2" kindref="member">abbreviateDecimalPowers</ref><sp/>&amp;&amp;<sp/>result.basePart<sp/>==<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.basePart<sp/>=<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.basePart<sp/>+=<sp/>(numberMultiplyCross<sp/>?<sp/>QString(QChar(215))<sp/>:<sp/>QString(QChar(183)))<sp/>+<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/>result.expPart<sp/>=<sp/>text.mid(ePos+1);</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip<sp/>&quot;+&quot;<sp/>and<sp/>leading<sp/>zeros<sp/>off<sp/>expPart:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(result.expPart.length()<sp/>&gt;<sp/>2<sp/>&amp;&amp;<sp/>result.expPart.at(1)<sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">))<sp/></highlight><highlight class="comment">//<sp/>length<sp/>&gt;<sp/>2<sp/>so<sp/>we<sp/>leave<sp/>one<sp/>zero<sp/>when<sp/>numberFormatChar<sp/>is<sp/>&apos;e&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.expPart.remove(1,<sp/>1);</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.expPart.isEmpty()<sp/>&amp;&amp;<sp/>result.expPart.at(0)<sp/>==<sp/>QLatin1Char(</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.expPart.remove(0,<sp/>1);</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>smaller<sp/>font<sp/>for<sp/>exponent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/><sp/>result.expFont<sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/>result.expFont.setPointSize(result.expFont.pointSize()*0.75);</highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>bounding<sp/>rects<sp/>of<sp/>base<sp/>part,<sp/>exponent<sp/>part<sp/>and<sp/>total<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/><sp/><sp/>result.baseBounds<sp/>=<sp/>QFontMetrics(result.baseFont).boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip,<sp/>result.basePart);</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/><sp/><sp/>result.expBounds<sp/>=<sp/>QFontMetrics(result.expFont).boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip,<sp/>result.expPart);</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/>result.totalBounds<sp/>=<sp/>result.baseBounds.adjusted(0,<sp/>0,<sp/>result.expBounds.width()+2,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>+2<sp/>consists<sp/>of<sp/>the<sp/>1<sp/>pixel<sp/>spacing<sp/>between<sp/>base<sp/>and<sp/>exponent<sp/>(see<sp/>drawTickLabel)<sp/>and<sp/>an<sp/>extra<sp/>pixel<sp/>to<sp/>include<sp/>AA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>useBeautifulPowers<sp/>==<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/>result.basePart<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/><sp/>result.totalBounds<sp/>=<sp/>QFontMetrics(result.baseFont).boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip<sp/>|<sp/>Qt::AlignHCenter,<sp/>result.basePart);</highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/>result.totalBounds.moveTopLeft(QPoint(0,<sp/>0));<sp/></highlight><highlight class="comment">//<sp/>want<sp/>bounding<sp/>box<sp/>aligned<sp/>top<sp/>left<sp/>at<sp/>origin,<sp/>independent<sp/>of<sp/>how<sp/>it<sp/>was<sp/>created,<sp/>to<sp/>make<sp/>further<sp/>processing<sp/>simpler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>possibly<sp/>different<sp/>bounding<sp/>rect<sp/>after<sp/>rotation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/>result.rotatedTotalBounds<sp/>=<sp/>result.totalBounds;</highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>))</highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/><sp/><sp/>QTransform<sp/>transform;</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/><sp/><sp/>transform.rotate(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>);</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/>result.rotatedTotalBounds<sp/>=<sp/>transform.mapRect(result.rotatedTotalBounds);</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"></highlight></codeline>
<codeline lineno="6570"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_axis_painter_private_1a6b02e6fd70cc65f726ca8cb3e6f16de4" kindref="member">QCPAxisPainterPrivate::getTickLabelDrawOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickLabelData<sp/>&amp;labelData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6571"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6573"><highlight class="comment"><sp/><sp/><sp/><sp/>calculate<sp/>label<sp/>offset<sp/>from<sp/>base<sp/>point<sp/>at<sp/>tick<sp/>(non-trivial,<sp/>for<sp/>best<sp/>visual<sp/>appearance):<sp/>short</highlight></codeline>
<codeline lineno="6574"><highlight class="comment"><sp/><sp/><sp/><sp/>explanation<sp/>for<sp/>bottom<sp/>axis:<sp/>The<sp/>anchor,<sp/>i.e.<sp/>the<sp/>point<sp/>in<sp/>the<sp/>label<sp/>that<sp/>is<sp/>placed</highlight></codeline>
<codeline lineno="6575"><highlight class="comment"><sp/><sp/><sp/><sp/>horizontally<sp/>under<sp/>the<sp/>corresponding<sp/>tick<sp/>is<sp/>always<sp/>on<sp/>the<sp/>label<sp/>side<sp/>that<sp/>is<sp/>closer<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="6576"><highlight class="comment"><sp/><sp/><sp/><sp/>axis<sp/>(e.g.<sp/>the<sp/>left<sp/>side<sp/>of<sp/>the<sp/>text<sp/>when<sp/>we&apos;re<sp/>rotating<sp/>clockwise).<sp/>On<sp/>that<sp/>side,<sp/>the<sp/>height</highlight></codeline>
<codeline lineno="6577"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>halved<sp/>and<sp/>the<sp/>resulting<sp/>point<sp/>is<sp/>defined<sp/>the<sp/>anchor.<sp/>This<sp/>way,<sp/>a<sp/>90<sp/>degree<sp/>rotated<sp/>text</highlight></codeline>
<codeline lineno="6578"><highlight class="comment"><sp/><sp/><sp/><sp/>will<sp/>be<sp/>centered<sp/>under<sp/>the<sp/>tick<sp/>(i.e.<sp/>displaced<sp/>horizontally<sp/>by<sp/>half<sp/>its<sp/>height).<sp/>At<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="6579"><highlight class="comment"><sp/><sp/><sp/><sp/>time,<sp/>a<sp/>45<sp/>degree<sp/>rotated<sp/>text<sp/>will<sp/>&quot;point<sp/>toward&quot;<sp/>its<sp/>tick,<sp/>as<sp/>is<sp/>typical<sp/>for<sp/>rotated<sp/>tick</highlight></codeline>
<codeline lineno="6580"><highlight class="comment"><sp/><sp/><sp/><sp/>labels.</highlight></codeline>
<codeline lineno="6581"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doRotation<sp/>=<sp/>!qFuzzyIsNull(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>);</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flip<sp/>=<sp/>qFuzzyCompare(qAbs(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>),<sp/>90.0);<sp/></highlight><highlight class="comment">//<sp/>perfect<sp/>+/-90<sp/>degree<sp/>flip.<sp/>Indicates<sp/>vertical<sp/>label<sp/>centering<sp/>on<sp/>vertical<sp/>axes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radians<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref>/180.0*M_PI;</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0,<sp/>y=0;</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)<sp/>||<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">QCPAxis::lsInside</ref>))<sp/></highlight><highlight class="comment">//<sp/>Anchor<sp/>at<sp/>right<sp/>side<sp/>of<sp/>tick<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doRotation)</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-qCos(radians)*labelData.totalBounds.width();</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>flip<sp/>?<sp/>-labelData.totalBounds.width()/2.0<sp/>:<sp/>-qSin(radians)*labelData.totalBounds.width()-qCos(radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-qCos(-radians)*labelData.totalBounds.width()-qSin(-radians)*labelData.totalBounds.height();</highlight></codeline>
<codeline lineno="6597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>flip<sp/>?<sp/>+labelData.totalBounds.width()/2.0<sp/>:<sp/>+qSin(-radians)*labelData.totalBounds.width()-qCos(-radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-labelData.totalBounds.width();</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)<sp/>||<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">QCPAxis::lsInside</ref>))<sp/></highlight><highlight class="comment">//<sp/>Anchor<sp/>at<sp/>left<sp/>side<sp/>of<sp/>tick<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doRotation)</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>+qSin(radians)*labelData.totalBounds.height();</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>flip<sp/>?<sp/>-labelData.totalBounds.width()/2.0<sp/>:<sp/>-qCos(radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>flip<sp/>?<sp/>+labelData.totalBounds.width()/2.0<sp/>:<sp/>-qCos(-radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)<sp/>||<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">QCPAxis::lsInside</ref>))<sp/></highlight><highlight class="comment">//<sp/>Anchor<sp/>at<sp/>bottom<sp/>side<sp/>of<sp/>tick<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doRotation)</highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-qCos(radians)*labelData.totalBounds.width()+qSin(radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-qSin(radians)*labelData.totalBounds.width()-qCos(radians)*labelData.totalBounds.height();</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-qSin(-radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-qCos(-radians)*labelData.totalBounds.height();</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-labelData.totalBounds.width()/2.0;</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>-labelData.totalBounds.height();</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9a2eadb509fc0c9a8b35b85c86ec9f3c7a" kindref="member">QCPAxis::lsOutside</ref>)<sp/>||<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>&amp;&amp;<sp/>tickLabelSide<sp/>==<sp/><ref refid="class_q_c_p_axis_1a24b13374b9b8f75f47eed2ea78c37db9aae7b027ac2839cf4ad611df30236fc3f" kindref="member">QCPAxis::lsInside</ref>))<sp/></highlight><highlight class="comment">//<sp/>Anchor<sp/>at<sp/>top<sp/>side<sp/>of<sp/>tick<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doRotation)</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1ae6ade9232a8e400924009e8edca94bac" kindref="member">tickLabelRotation</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>+qSin(radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-qCos(-radians)*labelData.totalBounds.width()-qSin(-radians)*labelData.totalBounds.height()/2.0;</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>+qSin(-radians)*labelData.totalBounds.width();</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>-labelData.totalBounds.width()/2.0;</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(x,<sp/>y);</highlight></codeline>
<codeline lineno="6661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"></highlight></codeline>
<codeline lineno="6670"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_painter_private_1a8a7c82303e272485621fde78a5b674f9" kindref="member">QCPAxisPainterPrivate::getMaxTickLabelSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text,<sp/><sp/>QSize<sp/>*tickLabelsSize)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6671"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>this<sp/>function<sp/>must<sp/>return<sp/>the<sp/>same<sp/>tick<sp/>label<sp/>sizes<sp/>as<sp/>the<sp/>placeTickLabel<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/>QSize<sp/>finalSize;</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_painter_private_1a882029a5f2d4abd71289d415c9b90a28" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a130b55e205697a5288081e9fc11e443e" kindref="member">plottingHints</ref>().testFlag(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a8e9cfe5ee0c5cd36dd7accf9739aff65" kindref="member">QCP::phCacheLabels</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_axis_painter_private_1a07ac270ea0c0ae084debd48d6a740e35" kindref="member">mLabelCache</ref>.contains(text))<sp/></highlight><highlight class="comment">//<sp/>label<sp/>caching<sp/>enabled<sp/>and<sp/>have<sp/>cached<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CachedLabel<sp/>*cachedLabel<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1a07ac270ea0c0ae084debd48d6a740e35" kindref="member">mLabelCache</ref>.object(text);</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/><sp/><sp/>finalSize<sp/>=<sp/>cachedLabel-&gt;pixmap.size();</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>label<sp/>caching<sp/>disabled<sp/>or<sp/>no<sp/>label<sp/>with<sp/>this<sp/>text<sp/>cached:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/>TickLabelData<sp/>labelData<sp/>=<sp/><ref refid="class_q_c_p_axis_painter_private_1ad9f24fbcbf9d8c92b34d9d00b010e6a3" kindref="member">getTickLabelData</ref>(font,<sp/>text);</highlight></codeline>
<codeline lineno="6681"><highlight class="normal"><sp/><sp/><sp/><sp/>finalSize<sp/>=<sp/>labelData.rotatedTotalBounds.size();</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>expand<sp/>passed<sp/>tickLabelsSize<sp/>if<sp/>current<sp/>tick<sp/>label<sp/>is<sp/>larger:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalSize.width()<sp/>&gt;<sp/>tickLabelsSize-&gt;width())</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/>tickLabelsSize-&gt;setWidth(finalSize.width());</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalSize.height()<sp/>&gt;<sp/>tickLabelsSize-&gt;height())</highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><sp/><sp/><sp/><sp/>tickLabelsSize-&gt;setHeight(finalSize.height());</highlight></codeline>
<codeline lineno="6689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6690"><highlight class="normal"></highlight></codeline>
<codeline lineno="6691"><highlight class="normal"></highlight></codeline>
<codeline lineno="6695"></codeline>
<codeline lineno="6764"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6765"><highlight class="normal"></highlight></codeline>
<codeline lineno="6811"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6813"><highlight class="normal"></highlight></codeline>
<codeline lineno="6827"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6828"><highlight class="normal"></highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><ref refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" kindref="member">QCPAbstractPlottable::QCPAbstractPlottable</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>(keyAxis-&gt;parentPlot(),<sp/>QString(),<sp/>keyAxis-&gt;axisRect()),</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/>mName(),</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/>mAntialiasedFill(true),</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/>mAntialiasedScatters(true),</highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/>mAntialiasedErrorBars(false),</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/>mPen(Qt::black),</highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/>mSelectedPen(Qt::black),</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/>mBrush(Qt::NoBrush),</highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/>mSelectedBrush(Qt::NoBrush),</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/>mKeyAxis(keyAxis),</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/>mValueAxis(valueAxis),</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/>mSelectable(true),</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/>mSelected(false)</highlight></codeline>
<codeline lineno="6854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()<sp/>!=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>())</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parent<sp/>plot<sp/>of<sp/>keyAxis<sp/>is<sp/>not<sp/>the<sp/>same<sp/>as<sp/>that<sp/>of<sp/>valueAxis.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>())</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;keyAxis<sp/>and<sp/>valueAxis<sp/>must<sp/>be<sp/>orthogonal<sp/>to<sp/>each<sp/>other.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"></highlight></codeline>
<codeline lineno="6865"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" kindref="member">QCPAbstractPlottable::setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="6866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ac29ffef424e2488675930de18cde612a" kindref="member">mName</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="6868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"></highlight></codeline>
<codeline lineno="6876"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a089d6b5577120239b55c39ed27c39536" kindref="member">QCPAbstractPlottable::setAntialiasedFill</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="6877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a152ac765bedf927fb240545d11d453ea" kindref="member">mAntialiasedFill</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="6879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"></highlight></codeline>
<codeline lineno="6887"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" kindref="member">QCPAbstractPlottable::setAntialiasedScatters</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="6888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1aa115755e525a8e3a86dc683f9cab755b" kindref="member">mAntialiasedScatters</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="6890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6891"><highlight class="normal"></highlight></codeline>
<codeline lineno="6898"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a757beb744b96cf1855cca5ab9d3ecf52" kindref="member">QCPAbstractPlottable::setAntialiasedErrorBars</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="6899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ad48660b2bd301576e92fb033d8f455ea" kindref="member">mAntialiasedErrorBars</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="6901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"></highlight></codeline>
<codeline lineno="6903"><highlight class="normal"></highlight></codeline>
<codeline lineno="6913"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">QCPAbstractPlottable::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="6914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="6916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"></highlight></codeline>
<codeline lineno="6924"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a6911603cad23ab0469b108224517516f" kindref="member">QCPAbstractPlottable::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="6925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="6927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6928"><highlight class="normal"></highlight></codeline>
<codeline lineno="6938"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">QCPAbstractPlottable::setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="6939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1aa74cdceb9c7286ef116fbfa58e0326e7" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="6941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"></highlight></codeline>
<codeline lineno="6949"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ae8c816874089f7a44001e8618e81a9dc" kindref="member">QCPAbstractPlottable::setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="6950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6951"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" kindref="member">mSelectedBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1aa74cdceb9c7286ef116fbfa58e0326e7" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="6952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"></highlight></codeline>
<codeline lineno="6965"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a8524fa2994c63c0913ebd9bb2ffa3920" kindref="member">QCPAbstractPlottable::setKeyAxis</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis)</highlight></codeline>
<codeline lineno="6966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>=<sp/>axis;</highlight></codeline>
<codeline lineno="6968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6969"><highlight class="normal"></highlight></codeline>
<codeline lineno="6981"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a71626a07367e241ec62ad2c34baf21cb" kindref="member">QCPAbstractPlottable::setValueAxis</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis)</highlight></codeline>
<codeline lineno="6982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref><sp/>=<sp/>axis;</highlight></codeline>
<codeline lineno="6984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"></highlight></codeline>
<codeline lineno="6995"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a22c69299eb5569e0f6bf084877a37dc4" kindref="member">QCPAbstractPlottable::setSelectable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable)</highlight></codeline>
<codeline lineno="6996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref><sp/>!=<sp/>selectable)</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1af895574da1ec0d050711b6c9deda296a" kindref="member">selectable</ref>;</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_abstract_plottable_1a0059caa3f3581f3959660fef8cbb71c4" kindref="member">selectableChanged</ref>(<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>);</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"></highlight></codeline>
<codeline lineno="7018"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1afbd5428c2952f59d952e11ab5cd79176" kindref="member">QCPAbstractPlottable::setSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)</highlight></codeline>
<codeline lineno="7019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref><sp/>!=<sp/>selected)</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1ab901903adcb0e29467d63de72340ab29" kindref="member">selected</ref>;</highlight></codeline>
<codeline lineno="7023"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_abstract_plottable_1a3af66432b1dca93b28e00e78a8c7c1d9" kindref="member">selectionChanged</ref>(<ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref>);</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"></highlight></codeline>
<codeline lineno="7040"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a7e8fc3be43c27ccacd70a7bf9d74a5cd" kindref="member">QCPAbstractPlottable::rescaleAxes</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7041"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a1acecfcca3e7fcda00fcbaa3c886386f" kindref="member">rescaleKeyAxis</ref>(onlyEnlarge);</highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1abfd0805eb1d955c0111a990246658324" kindref="member">rescaleValueAxis</ref>(onlyEnlarge);</highlight></codeline>
<codeline lineno="7044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7045"><highlight class="normal"></highlight></codeline>
<codeline lineno="7051"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a1acecfcca3e7fcda00fcbaa3c886386f" kindref="member">QCPAbstractPlottable::rescaleKeyAxis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7052"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref><sp/>signDomain<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>;</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/><sp/><sp/>signDomain<sp/>=<sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref>);</highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundRange;</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a345d702b2e7e12c8cfdddff65ba85e8c" kindref="member">getKeyRange</ref>(foundRange,<sp/>signDomain);</highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundRange)</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onlyEnlarge)</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">expand</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>());</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(newRange))<sp/></highlight><highlight class="comment">//<sp/>likely<sp/>due<sp/>to<sp/>range<sp/>being<sp/>zero<sp/>(plottable<sp/>has<sp/>only<sp/>constant<sp/>data<sp/>in<sp/>this<sp/>axis<sp/>dimension),<sp/>shift<sp/>current<sp/>range<sp/>to<sp/>at<sp/>least<sp/>center<sp/>the<sp/>plottable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center<sp/>=<sp/>(newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>+newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)*0.5;<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>and<sp/>lower<sp/>should<sp/>be<sp/>equal<sp/>anyway,<sp/>but<sp/>just<sp/>to<sp/>make<sp/>sure,<sp/>incase<sp/>validRange<sp/>returned<sp/>false<sp/>for<sp/>other<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">QCPAxis::stLinear</ref>)</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center-keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center+keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>scaleType()<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center/qSqrt(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center*qSqrt(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="7077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/><sp/><sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(newRange);</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"></highlight></codeline>
<codeline lineno="7091"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1abfd0805eb1d955c0111a990246658324" kindref="member">QCPAbstractPlottable::rescaleValueAxis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7092"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref><sp/>signDomain<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>;</highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/><sp/><sp/>signDomain<sp/>=<sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref>);</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundRange;</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1aa3331b415b5939fe4df60b78831b2799" kindref="member">getValueRange</ref>(foundRange,<sp/>signDomain);</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundRange)</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onlyEnlarge)</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">expand</ref>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>());</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(newRange))<sp/></highlight><highlight class="comment">//<sp/>likely<sp/>due<sp/>to<sp/>range<sp/>being<sp/>zero<sp/>(plottable<sp/>has<sp/>only<sp/>constant<sp/>data<sp/>in<sp/>this<sp/>axis<sp/>dimension),<sp/>shift<sp/>current<sp/>range<sp/>to<sp/>at<sp/>least<sp/>center<sp/>the<sp/>plottable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center<sp/>=<sp/>(newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>+newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)*0.5;<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>and<sp/>lower<sp/>should<sp/>be<sp/>equal<sp/>anyway,<sp/>but<sp/>just<sp/>to<sp/>make<sp/>sure,<sp/>incase<sp/>validRange<sp/>returned<sp/>false<sp/>for<sp/>other<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">QCPAxis::stLinear</ref>)</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center-valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center+valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>scaleType()<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center/qSqrt(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center*qSqrt(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(newRange);</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"></highlight></codeline>
<codeline lineno="7135"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a70f8cabfd808f7d5204b9f18c45c13f5" kindref="member">QCPAbstractPlottable::addToLegend</ref>()</highlight></codeline>
<codeline lineno="7136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref><sp/>||<sp/>!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4eadcd237dc6a09938b68b16877fa6af" kindref="member">legend</ref>)</highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7139"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4eadcd237dc6a09938b68b16877fa6af" kindref="member">legend</ref>-&gt;<ref refid="class_q_c_p_legend_1a2eb1d24bdf5658e64962a656303fd61a" kindref="member">hasItemWithPlottable</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="7141"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4eadcd237dc6a09938b68b16877fa6af" kindref="member">legend</ref>-&gt;<ref refid="class_q_c_p_legend_1a3ab274de52d2951faea45a6d975e6b3f" kindref="member">addItem</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a104c78e91302afd6842a903e472f552f" kindref="member">QCPPlottableLegendItem</ref>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4eadcd237dc6a09938b68b16877fa6af" kindref="member">legend</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7147"><highlight class="normal"></highlight></codeline>
<codeline lineno="7158"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1aa1f350e510326d012b9a9c9249736c83" kindref="member">QCPAbstractPlottable::removeFromLegend</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4eadcd237dc6a09938b68b16877fa6af" kindref="member">legend</ref>)</highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plottable_legend_item" kindref="compound">QCPPlottableLegendItem</ref><sp/>*lip<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4eadcd237dc6a09938b68b16877fa6af" kindref="member">legend</ref>-&gt;<ref refid="class_q_c_p_legend_1a5ee80cf83f65e3b6dd386942ee3cc1ee" kindref="member">itemWithPlottable</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4eadcd237dc6a09938b68b16877fa6af" kindref="member">legend</ref>-&gt;<ref refid="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" kindref="member">removeItem</ref>(lip);</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"></highlight></codeline>
<codeline lineno="7169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7170"><highlight class="normal">QRect<sp/><ref refid="class_q_c_p_abstract_plottable_1ac01960b0827913922f5364d559c124ed" kindref="member">QCPAbstractPlottable::clipRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7171"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;rect()<sp/>&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data()-&gt;axisRect()-&gt;rect();</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRect();</highlight></codeline>
<codeline lineno="7176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"></highlight></codeline>
<codeline lineno="7178"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/><ref refid="class_q_c_p_abstract_plottable_1a5eef607bcc2aee8bfe2380a8710f6c64" kindref="member">QCPAbstractPlottable::selectionCategory</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7180"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a67148c8227b4155eca49135fc274c7ec" kindref="member">QCP::iSelectPlottables</ref>;</highlight></codeline>
<codeline lineno="7182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"></highlight></codeline>
<codeline lineno="7194"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">QCPAbstractPlottable::coordsToPixels</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7195"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7202"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(key);</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(value);</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7206"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(key);</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(value);</highlight></codeline>
<codeline lineno="7208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7210"><highlight class="normal"></highlight></codeline>
<codeline lineno="7216"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">QCPAbstractPlottable::coordsToPixels</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();<sp/>}</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="7223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(key),<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(value));</highlight></codeline>
<codeline lineno="7224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(value),<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(key));</highlight></codeline>
<codeline lineno="7226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7227"><highlight class="normal"></highlight></codeline>
<codeline lineno="7238"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a10408828446e9e0681c46d65120f382e" kindref="member">QCPAbstractPlottable::pixelsToCoords</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7239"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(x);</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(y);</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(y);</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(x);</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"></highlight></codeline>
<codeline lineno="7260"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a10408828446e9e0681c46d65120f382e" kindref="member">QCPAbstractPlottable::pixelsToCoords</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7261"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a10408828446e9e0681c46d65120f382e" kindref="member">pixelsToCoords</ref>(pixelPos.x(),<sp/>pixelPos.y(),<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="7263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"></highlight></codeline>
<codeline lineno="7270"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">QCPAbstractPlottable::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7271"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="7273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7274"><highlight class="normal"></highlight></codeline>
<codeline lineno="7280"><highlight class="normal">QBrush<sp/><ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">QCPAbstractPlottable::mainBrush</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7281"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" kindref="member">mSelectedBrush</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="7283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"></highlight></codeline>
<codeline lineno="7298"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">QCPAbstractPlottable::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7299"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca4145e4251b0cf2dbedabeea0a38f84f6" kindref="member">QCP::aePlottables</ref>);</highlight></codeline>
<codeline lineno="7301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"></highlight></codeline>
<codeline lineno="7314"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ac08a480155895e674dbfe5a5670e0ff3" kindref="member">QCPAbstractPlottable::applyFillAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7315"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a152ac765bedf927fb240545d11d453ea" kindref="member">mAntialiasedFill</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca788810f0aa930137de6ad6cc6d83d354" kindref="member">QCP::aeFills</ref>);</highlight></codeline>
<codeline lineno="7317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"></highlight></codeline>
<codeline lineno="7330"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a753272ee225a62827e90c3e1e78de4b1" kindref="member">QCPAbstractPlottable::applyScattersAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7331"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1aa115755e525a8e3a86dc683f9cab755b" kindref="member">mAntialiasedScatters</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0cae45ed8cd167bffe27d7f40da4bc17e9c" kindref="member">QCP::aeScatters</ref>);</highlight></codeline>
<codeline lineno="7333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"></highlight></codeline>
<codeline lineno="7346"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1af687bfe6160255960558eb71f1f81e73" kindref="member">QCPAbstractPlottable::applyErrorBarsAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7347"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1ad48660b2bd301576e92fb033d8f455ea" kindref="member">mAntialiasedErrorBars</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca9dcf3882cb321bb305f71fdc0f09f63d" kindref="member">QCP::aeErrorBars</ref>);</highlight></codeline>
<codeline lineno="7349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"></highlight></codeline>
<codeline lineno="7361"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">QCPAbstractPlottable::distSqrToLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7362"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/>QVector2D<sp/>a(start);</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/>QVector2D<sp/>b(end);</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/>QVector2D<sp/>p(point);</highlight></codeline>
<codeline lineno="7366"><highlight class="normal"><sp/><sp/>QVector2D<sp/>v(b-a);</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vLengthSqr<sp/>=<sp/>v.lengthSquared();</highlight></codeline>
<codeline lineno="7369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(vLengthSqr))</highlight></codeline>
<codeline lineno="7370"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/>=<sp/>QVector2D::dotProduct(p-a,<sp/>v)/vLengthSqr;</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a-p).lengthSquared();</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b-p).lengthSquared();</highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a<sp/>+<sp/>mu*v)-p).lengthSquared();</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a-p).lengthSquared();</highlight></codeline>
<codeline lineno="7380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"></highlight></codeline>
<codeline lineno="7382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">QCPAbstractPlottable::selectEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="7384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1afbd5428c2952f59d952e11ab5cd79176" kindref="member">setSelected</ref>(additive<sp/>?<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="7393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7395"><highlight class="normal"></highlight></codeline>
<codeline lineno="7396"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1a6fa0d0f95560ea8b01ee13f296dab2b1" kindref="member">QCPAbstractPlottable::deselectEvent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="7398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1afbd5428c2952f59d952e11ab5cd79176" kindref="member">setSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"></highlight></codeline>
<codeline lineno="7408"><highlight class="normal"></highlight></codeline>
<codeline lineno="7412"></codeline>
<codeline lineno="7434"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7435"><highlight class="normal"></highlight></codeline>
<codeline lineno="7446"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7447"><highlight class="normal"></highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><ref refid="class_q_c_p_item_anchor_1aeb6b681d2bf324db40a915d32ec5624f" kindref="member">QCPItemAnchor::QCPItemAnchor</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot,<sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*parentItem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)<sp/>:</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/>mName(name),</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/>mParentPlot(parentPlot),</highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/>mParentItem(parentItem),</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/>mAnchorId(anchorId)</highlight></codeline>
<codeline lineno="7458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"></highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><ref refid="class_q_c_p_item_anchor_1a1868559407600688ee4d1a4621e81ceb" kindref="member">QCPItemAnchor::~QCPItemAnchor</ref>()</highlight></codeline>
<codeline lineno="7462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>as<sp/>parent<sp/>at<sp/>children:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*child,<sp/><ref refid="class_q_c_p_item_anchor_1a3c0bfd6e50f3b48e2a9b3824695b20f7" kindref="member">mChildrenX</ref>.toList())</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="class_q_c_p_item_position_1a485abba71c8552086c5f68e95dca7f9a" kindref="member">parentAnchorX</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_q_c_p_item_position_1add71461a973927c74e42179480916d9c" kindref="member">setParentAnchorX</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>this<sp/>acts<sp/>back<sp/>on<sp/>this<sp/>anchor<sp/>and<sp/>child<sp/>removes<sp/>itself<sp/>from<sp/>mChildrenX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*child,<sp/><ref refid="class_q_c_p_item_anchor_1a3abe4eebd0683454d81c8341df6f7115" kindref="member">mChildrenY</ref>.toList())</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="class_q_c_p_item_position_1a1502dba801cb20424b7e097399e372de" kindref="member">parentAnchorY</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_q_c_p_item_position_1add5ec1db9d19cec58a3b5c9e0a0c3f9d" kindref="member">setParentAnchorY</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>this<sp/>acts<sp/>back<sp/>on<sp/>this<sp/>anchor<sp/>and<sp/>child<sp/>removes<sp/>itself<sp/>from<sp/>mChildrenY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"></highlight></codeline>
<codeline lineno="7482"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">QCPItemAnchor::pixelPoint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7483"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_anchor_1a80fad480ad3bb980446ed6ebc00818ae" kindref="member">mParentItem</ref>)</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_anchor_1a00c62070333e8345976b579676ad3997" kindref="member">mAnchorId</ref><sp/>&gt;<sp/>-1)</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_anchor_1a80fad480ad3bb980446ed6ebc00818ae" kindref="member">mParentItem</ref>-&gt;<ref refid="class_q_c_p_abstract_item_1a94bde62b8a2fc133666dcbb8035deeed" kindref="member">anchorPixelPoint</ref>(<ref refid="class_q_c_p_item_anchor_1a00c62070333e8345976b579676ad3997" kindref="member">mAnchorId</ref>);</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>valid<sp/>anchor<sp/>id<sp/>set:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_item_anchor_1a00c62070333e8345976b579676ad3997" kindref="member">mAnchorId</ref>;</highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>parent<sp/>item<sp/>set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7500"><highlight class="normal"></highlight></codeline>
<codeline lineno="7509"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_anchor_1aef15daa640debfb11b0aeaa2116c6fbc" kindref="member">QCPItemAnchor::addChildX</ref>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*pos)</highlight></codeline>
<codeline lineno="7510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_item_anchor_1a3c0bfd6e50f3b48e2a9b3824695b20f7" kindref="member">mChildrenX</ref>.contains(pos))</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_anchor_1a3c0bfd6e50f3b48e2a9b3824695b20f7" kindref="member">mChildrenX</ref>.insert(pos);</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;provided<sp/>pos<sp/>is<sp/>child<sp/>already&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pos);</highlight></codeline>
<codeline lineno="7515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"></highlight></codeline>
<codeline lineno="7523"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_anchor_1a230b1d494cda63458e289bbe1b642599" kindref="member">QCPItemAnchor::removeChildX</ref>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*pos)</highlight></codeline>
<codeline lineno="7524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_item_anchor_1a3c0bfd6e50f3b48e2a9b3824695b20f7" kindref="member">mChildrenX</ref>.remove(pos))</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;provided<sp/>pos<sp/>isn&apos;t<sp/>child&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pos);</highlight></codeline>
<codeline lineno="7527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7528"><highlight class="normal"></highlight></codeline>
<codeline lineno="7537"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_anchor_1af05dc56f24536f0c7a9a0f57b58cea67" kindref="member">QCPItemAnchor::addChildY</ref>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*pos)</highlight></codeline>
<codeline lineno="7538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_item_anchor_1a3abe4eebd0683454d81c8341df6f7115" kindref="member">mChildrenY</ref>.contains(pos))</highlight></codeline>
<codeline lineno="7540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_anchor_1a3abe4eebd0683454d81c8341df6f7115" kindref="member">mChildrenY</ref>.insert(pos);</highlight></codeline>
<codeline lineno="7541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7542"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;provided<sp/>pos<sp/>is<sp/>child<sp/>already&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pos);</highlight></codeline>
<codeline lineno="7543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7544"><highlight class="normal"></highlight></codeline>
<codeline lineno="7551"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_anchor_1aa2394911d8fff3bd958b9f4f1994b64d" kindref="member">QCPItemAnchor::removeChildY</ref>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*pos)</highlight></codeline>
<codeline lineno="7552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_item_anchor_1a3abe4eebd0683454d81c8341df6f7115" kindref="member">mChildrenY</ref>.remove(pos))</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;provided<sp/>pos<sp/>isn&apos;t<sp/>child&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pos);</highlight></codeline>
<codeline lineno="7555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"></highlight></codeline>
<codeline lineno="7557"><highlight class="normal"></highlight></codeline>
<codeline lineno="7561"></codeline>
<codeline lineno="7596"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7597"><highlight class="normal"></highlight></codeline>
<codeline lineno="7619"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7620"><highlight class="normal"></highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><ref refid="class_q_c_p_item_position_1a3efc524f37fdcd22907545eb77555ce4" kindref="member">QCPItemPosition::QCPItemPosition</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot,<sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*parentItem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>name)<sp/>:</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref>(parentPlot,<sp/>parentItem,<sp/>name),</highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/>mPositionTypeX(ptAbsolute),</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/>mPositionTypeY(ptAbsolute),</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/>mKey(0),</highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/>mValue(0),</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/>mParentAnchorX(0),</highlight></codeline>
<codeline lineno="7633"><highlight class="normal"><sp/><sp/>mParentAnchorY(0)</highlight></codeline>
<codeline lineno="7634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"></highlight></codeline>
<codeline lineno="7637"><highlight class="normal"><ref refid="class_q_c_p_item_position_1ad8a289016f7a62332f9c865c39ab2047" kindref="member">QCPItemPosition::~QCPItemPosition</ref>()</highlight></codeline>
<codeline lineno="7638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>as<sp/>parent<sp/>at<sp/>children:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>this<sp/>is<sp/>done<sp/>in<sp/>~QCPItemAnchor<sp/>again,<sp/>but<sp/>it&apos;s<sp/>important<sp/>QCPItemPosition<sp/>does<sp/>it<sp/>itself,<sp/>because<sp/>only<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>setParentAnchor(0)<sp/>call<sp/>the<sp/>correct<sp/>QCPItemPosition::pixelPoint<sp/>function<sp/>instead<sp/>of<sp/>QCPItemAnchor::pixelPoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*child,<sp/><ref refid="class_q_c_p_item_anchor_1a3c0bfd6e50f3b48e2a9b3824695b20f7" kindref="member">mChildrenX</ref>.toList())</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="class_q_c_p_item_position_1a485abba71c8552086c5f68e95dca7f9a" kindref="member">parentAnchorX</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_q_c_p_item_position_1add71461a973927c74e42179480916d9c" kindref="member">setParentAnchorX</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>this<sp/>acts<sp/>back<sp/>on<sp/>this<sp/>anchor<sp/>and<sp/>child<sp/>removes<sp/>itself<sp/>from<sp/>mChildrenX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*child,<sp/><ref refid="class_q_c_p_item_anchor_1a3abe4eebd0683454d81c8341df6f7115" kindref="member">mChildrenY</ref>.toList())</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="class_q_c_p_item_position_1a1502dba801cb20424b7e097399e372de" kindref="member">parentAnchorY</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_q_c_p_item_position_1add5ec1db9d19cec58a3b5c9e0a0c3f9d" kindref="member">setParentAnchorY</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>this<sp/>acts<sp/>back<sp/>on<sp/>this<sp/>anchor<sp/>and<sp/>child<sp/>removes<sp/>itself<sp/>from<sp/>mChildrenY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>as<sp/>child<sp/>in<sp/>parent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="7654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1a230b1d494cda63458e289bbe1b642599" kindref="member">removeChildX</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="7656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1aa2394911d8fff3bd958b9f4f1994b64d" kindref="member">removeChildY</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"></highlight></codeline>
<codeline lineno="7659"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>make<sp/>this<sp/>a<sp/>header<sp/>inline<sp/>function,<sp/>because<sp/>QPointer<sp/>breaks<sp/>with<sp/>forward<sp/>declared<sp/>types,<sp/>see<sp/>QTBUG-29588<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7660"><highlight class="normal"><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*<ref refid="class_q_c_p_item_position_1a7f10fa702a324880cc4de958f434cec7" kindref="member">QCPItemPosition::axisRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7661"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data();</highlight></codeline>
<codeline lineno="7663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"></highlight></codeline>
<codeline lineno="7690"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aa476abf71ed8fa4c537457ebb1a754ad" kindref="member">QCPItemPosition::setType</ref>(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8" kindref="member">QCPItemPosition::PositionType</ref><sp/>type)</highlight></codeline>
<codeline lineno="7691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1a2113b2351d6d00457fb3559a4e20c3ea" kindref="member">setTypeX</ref>(type);</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1ac2a454aa5a54c1615c50686601ec4510" kindref="member">setTypeY</ref>(type);</highlight></codeline>
<codeline lineno="7694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"></highlight></codeline>
<codeline lineno="7703"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1a2113b2351d6d00457fb3559a4e20c3ea" kindref="member">QCPItemPosition::setTypeX</ref>(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8" kindref="member">QCPItemPosition::PositionType</ref><sp/>type)</highlight></codeline>
<codeline lineno="7704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1ae2a617dce057c5f3ec6878c1823aa291" kindref="member">mPositionTypeX</ref><sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="7706"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>switching<sp/>from<sp/>or<sp/>to<sp/>coordinate<sp/>type<sp/>that<sp/>isn&apos;t<sp/>valid<sp/>(e.g.<sp/>because<sp/>axes<sp/>or<sp/>axis<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>were<sp/>deleted),<sp/>don&apos;t<sp/>try<sp/>to<sp/>recover<sp/>the<sp/>pixelPoint()<sp/>because<sp/>it<sp/>would<sp/>output<sp/>a<sp/>qDebug<sp/>warning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retainPixelPosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_c_p_item_position_1ae2a617dce057c5f3ec6878c1823aa291" kindref="member">mPositionTypeX</ref><sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>)<sp/>&amp;&amp;<sp/>(!<ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>))</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retainPixelPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_c_p_item_position_1ae2a617dce057c5f3ec6878c1823aa291" kindref="member">mPositionTypeX</ref><sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref>)<sp/>&amp;&amp;<sp/>(!<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>))</highlight></codeline>
<codeline lineno="7713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retainPixelPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>pixel;</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retainPixelPosition)</highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixel<sp/>=<sp/><ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1ae2a617dce057c5f3ec6878c1823aa291" kindref="member">mPositionTypeX</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1aecb709d72c9aa334a7f62e2c9e0b5d60" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retainPixelPosition)</highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1ab404e56d9ac2ac2df0382c57933a71ef" kindref="member">setPixelPoint</ref>(pixel);</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"></highlight></codeline>
<codeline lineno="7733"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1ac2a454aa5a54c1615c50686601ec4510" kindref="member">QCPItemPosition::setTypeY</ref>(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8" kindref="member">QCPItemPosition::PositionType</ref><sp/>type)</highlight></codeline>
<codeline lineno="7734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a47c96c0ef4380e1af4aaa7c2265c260b" kindref="member">mPositionTypeY</ref><sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>switching<sp/>from<sp/>or<sp/>to<sp/>coordinate<sp/>type<sp/>that<sp/>isn&apos;t<sp/>valid<sp/>(e.g.<sp/>because<sp/>axes<sp/>or<sp/>axis<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>were<sp/>deleted),<sp/>don&apos;t<sp/>try<sp/>to<sp/>recover<sp/>the<sp/>pixelPoint()<sp/>because<sp/>it<sp/>would<sp/>output<sp/>a<sp/>qDebug<sp/>warning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retainPixelPosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_c_p_item_position_1a47c96c0ef4380e1af4aaa7c2265c260b" kindref="member">mPositionTypeY</ref><sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>)<sp/>&amp;&amp;<sp/>(!<ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>))</highlight></codeline>
<codeline lineno="7741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retainPixelPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_c_p_item_position_1a47c96c0ef4380e1af4aaa7c2265c260b" kindref="member">mPositionTypeY</ref><sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref>)<sp/>&amp;&amp;<sp/>(!<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>))</highlight></codeline>
<codeline lineno="7743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retainPixelPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7745"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>pixel;</highlight></codeline>
<codeline lineno="7746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retainPixelPosition)</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixel<sp/>=<sp/><ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="7748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1a47c96c0ef4380e1af4aaa7c2265c260b" kindref="member">mPositionTypeY</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1aecb709d72c9aa334a7f62e2c9e0b5d60" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="7750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retainPixelPosition)</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1ab404e56d9ac2ac2df0382c57933a71ef" kindref="member">setPixelPoint</ref>(pixel);</highlight></codeline>
<codeline lineno="7753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7755"><highlight class="normal"></highlight></codeline>
<codeline lineno="7774"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1ac094d67a95d2dceafa0d50b9db3a7e51" kindref="member">QCPItemPosition::setParentAnchor</ref>(<ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*parentAnchor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepPixelPosition)</highlight></codeline>
<codeline lineno="7775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>successX<sp/>=<sp/><ref refid="class_q_c_p_item_position_1add71461a973927c74e42179480916d9c" kindref="member">setParentAnchorX</ref>(parentAnchor,<sp/>keepPixelPosition);</highlight></codeline>
<codeline lineno="7777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>successY<sp/>=<sp/><ref refid="class_q_c_p_item_position_1add5ec1db9d19cec58a3b5c9e0a0c3f9d" kindref="member">setParentAnchorY</ref>(parentAnchor,<sp/>keepPixelPosition);</highlight></codeline>
<codeline lineno="7778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>successX<sp/>&amp;&amp;<sp/>successY;</highlight></codeline>
<codeline lineno="7779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7780"><highlight class="normal"></highlight></codeline>
<codeline lineno="7788"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1add71461a973927c74e42179480916d9c" kindref="member">QCPItemPosition::setParentAnchorX</ref>(<ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*parentAnchor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepPixelPosition)</highlight></codeline>
<codeline lineno="7789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>self<sp/>is<sp/>not<sp/>assigned<sp/>as<sp/>parent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentAnchor<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7792"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>set<sp/>self<sp/>as<sp/>parent<sp/>anchor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>);</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>no<sp/>recursive<sp/>parent-child-relationships<sp/>are<sp/>created:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*currentParent<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>;</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currentParent)</highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*currentParentPos<sp/>=<sp/>currentParent-&gt;<ref refid="class_q_c_p_item_anchor_1ac54b20120669950255a63587193dbb86" kindref="member">toQCPItemPosition</ref>())</highlight></codeline>
<codeline lineno="7801"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>QCPItemPosition,<sp/>might<sp/>have<sp/>further<sp/>parent,<sp/>so<sp/>keep<sp/>iterating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentParentPos<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>create<sp/>recursive<sp/>parent-child-relationship&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>);</highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentParent<sp/>=<sp/>currentParentPos-&gt;parentAnchorX();</highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7810"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>QCPItemAnchor,<sp/>can&apos;t<sp/>have<sp/>further<sp/>parent.<sp/>Now<sp/>make<sp/>sure<sp/>the<sp/>parent<sp/>items<sp/>aren&apos;t<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same,<sp/>to<sp/>prevent<sp/>a<sp/>position<sp/>being<sp/>child<sp/>of<sp/>an<sp/>anchor<sp/>which<sp/>itself<sp/>depends<sp/>on<sp/>the<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>they&apos;re<sp/>both<sp/>on<sp/>the<sp/>same<sp/>item:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentParent-&gt;<ref refid="class_q_c_p_item_anchor_1a80fad480ad3bb980446ed6ebc00818ae" kindref="member">mParentItem</ref><sp/>==<sp/><ref refid="class_q_c_p_item_anchor_1a80fad480ad3bb980446ed6ebc00818ae" kindref="member">mParentItem</ref>)</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>set<sp/>parent<sp/>to<sp/>be<sp/>an<sp/>anchor<sp/>which<sp/>itself<sp/>depends<sp/>on<sp/>this<sp/>position&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>);</highlight></codeline>
<codeline lineno="7817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7822"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>previously<sp/>no<sp/>parent<sp/>set<sp/>and<sp/>PosType<sp/>is<sp/>still<sp/>ptPlotCoords,<sp/>set<sp/>to<sp/>ptAbsolute:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1ae2a617dce057c5f3ec6878c1823aa291" kindref="member">mPositionTypeX</ref><sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>)</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1a2113b2351d6d00457fb3559a4e20c3ea" kindref="member">setTypeX</ref>(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a564f5e53e550ead1ec5fc7fc7d0b73e0" kindref="member">ptAbsolute</ref>);</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>pixel<sp/>position:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/>QPointF<sp/>pixelP;</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepPixelPosition)</highlight></codeline>
<codeline lineno="7830"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelP<sp/>=<sp/><ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="7831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>at<sp/>current<sp/>parent<sp/>anchor:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="7833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1a230b1d494cda63458e289bbe1b642599" kindref="member">removeChildX</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>at<sp/>new<sp/>parent<sp/>anchor:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentAnchor)</highlight></codeline>
<codeline lineno="7836"><highlight class="normal"><sp/><sp/><sp/><sp/>parentAnchor-&gt;<ref refid="class_q_c_p_item_anchor_1aef15daa640debfb11b0aeaa2116c6fbc" kindref="member">addChildX</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7837"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>;</highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>pixel<sp/>position<sp/>under<sp/>new<sp/>parent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepPixelPosition)</highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1ab404e56d9ac2ac2df0382c57933a71ef" kindref="member">setPixelPoint</ref>(pixelP);</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1aa988ba4e87ab684c9021017dcaba945f" kindref="member">setCoords</ref>(0,<sp/><ref refid="class_q_c_p_item_position_1a253d7adbb6d46299bd6cbc31aa8819f1" kindref="member">coords</ref>().y());</highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"></highlight></codeline>
<codeline lineno="7853"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1add5ec1db9d19cec58a3b5c9e0a0c3f9d" kindref="member">QCPItemPosition::setParentAnchorY</ref>(<ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*parentAnchor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepPixelPosition)</highlight></codeline>
<codeline lineno="7854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7855"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>self<sp/>is<sp/>not<sp/>assigned<sp/>as<sp/>parent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentAnchor<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7857"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>set<sp/>self<sp/>as<sp/>parent<sp/>anchor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>);</highlight></codeline>
<codeline lineno="7859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>no<sp/>recursive<sp/>parent-child-relationships<sp/>are<sp/>created:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7862"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*currentParent<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>;</highlight></codeline>
<codeline lineno="7863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currentParent)</highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*currentParentPos<sp/>=<sp/>currentParent-&gt;<ref refid="class_q_c_p_item_anchor_1ac54b20120669950255a63587193dbb86" kindref="member">toQCPItemPosition</ref>())</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>QCPItemPosition,<sp/>might<sp/>have<sp/>further<sp/>parent,<sp/>so<sp/>keep<sp/>iterating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentParentPos<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>create<sp/>recursive<sp/>parent-child-relationship&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>);</highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentParent<sp/>=<sp/>currentParentPos-&gt;parentAnchorY();</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>QCPItemAnchor,<sp/>can&apos;t<sp/>have<sp/>further<sp/>parent.<sp/>Now<sp/>make<sp/>sure<sp/>the<sp/>parent<sp/>items<sp/>aren&apos;t<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same,<sp/>to<sp/>prevent<sp/>a<sp/>position<sp/>being<sp/>child<sp/>of<sp/>an<sp/>anchor<sp/>which<sp/>itself<sp/>depends<sp/>on<sp/>the<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>they&apos;re<sp/>both<sp/>on<sp/>the<sp/>same<sp/>item:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentParent-&gt;<ref refid="class_q_c_p_item_anchor_1a80fad480ad3bb980446ed6ebc00818ae" kindref="member">mParentItem</ref><sp/>==<sp/><ref refid="class_q_c_p_item_anchor_1a80fad480ad3bb980446ed6ebc00818ae" kindref="member">mParentItem</ref>)</highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>set<sp/>parent<sp/>to<sp/>be<sp/>an<sp/>anchor<sp/>which<sp/>itself<sp/>depends<sp/>on<sp/>this<sp/>position&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>);</highlight></codeline>
<codeline lineno="7882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>previously<sp/>no<sp/>parent<sp/>set<sp/>and<sp/>PosType<sp/>is<sp/>still<sp/>ptPlotCoords,<sp/>set<sp/>to<sp/>ptAbsolute:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a47c96c0ef4380e1af4aaa7c2265c260b" kindref="member">mPositionTypeY</ref><sp/>==<sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>)</highlight></codeline>
<codeline lineno="7890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1ac2a454aa5a54c1615c50686601ec4510" kindref="member">setTypeY</ref>(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a564f5e53e550ead1ec5fc7fc7d0b73e0" kindref="member">ptAbsolute</ref>);</highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>pixel<sp/>position:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/>QPointF<sp/>pixelP;</highlight></codeline>
<codeline lineno="7894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepPixelPosition)</highlight></codeline>
<codeline lineno="7895"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelP<sp/>=<sp/><ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="7896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unregister<sp/>at<sp/>current<sp/>parent<sp/>anchor:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1aa2394911d8fff3bd958b9f4f1994b64d" kindref="member">removeChildY</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>at<sp/>new<sp/>parent<sp/>anchor:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentAnchor)</highlight></codeline>
<codeline lineno="7901"><highlight class="normal"><sp/><sp/><sp/><sp/>parentAnchor-&gt;<ref refid="class_q_c_p_item_anchor_1af05dc56f24536f0c7a9a0f57b58cea67" kindref="member">addChildY</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7902"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1a7b4ffab9946945c0e11cd2352dc2e042" kindref="member">parentAnchor</ref>;</highlight></codeline>
<codeline lineno="7903"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>pixel<sp/>position<sp/>under<sp/>new<sp/>parent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepPixelPosition)</highlight></codeline>
<codeline lineno="7905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1ab404e56d9ac2ac2df0382c57933a71ef" kindref="member">setPixelPoint</ref>(pixelP);</highlight></codeline>
<codeline lineno="7906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_position_1aa988ba4e87ab684c9021017dcaba945f" kindref="member">setCoords</ref>(<ref refid="class_q_c_p_item_position_1a253d7adbb6d46299bd6cbc31aa8819f1" kindref="member">coords</ref>().x(),<sp/>0);</highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7910"><highlight class="normal"></highlight></codeline>
<codeline lineno="7928"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aa988ba4e87ab684c9021017dcaba945f" kindref="member">QCPItemPosition::setCoords</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="7929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7930"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1a4ff3931ad115603dfb4c7000b24bb415" kindref="member">mKey</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1ac3cb2bddf5f89e5181830be30b93d090" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="7931"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1a67bf5df69f587d53731724a7d61c6c3f" kindref="member">mValue</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1a6817f7356d3a2b63e8446c6b6106dae1" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="7932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7933"><highlight class="normal"></highlight></codeline>
<codeline lineno="7939"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aa988ba4e87ab684c9021017dcaba945f" kindref="member">QCPItemPosition::setCoords</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight></codeline>
<codeline lineno="7940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7941"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1aa988ba4e87ab684c9021017dcaba945f" kindref="member">setCoords</ref>(pos.x(),<sp/>pos.y());</highlight></codeline>
<codeline lineno="7942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7943"><highlight class="normal"></highlight></codeline>
<codeline lineno="7950"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">QCPItemPosition::pixelPoint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7951"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7952"><highlight class="normal"><sp/><sp/>QPointF<sp/>result;</highlight></codeline>
<codeline lineno="7953"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7954"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>X:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1ae2a617dce057c5f3ec6878c1823aa291" kindref="member">mPositionTypeX</ref>)</highlight></codeline>
<codeline lineno="7956"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a564f5e53e550ead1ec5fc7fc7d0b73e0" kindref="member">ptAbsolute</ref>:</highlight></codeline>
<codeline lineno="7958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a4ff3931ad115603dfb4c7000b24bb415" kindref="member">mKey</ref>;</highlight></codeline>
<codeline lineno="7960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="7961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().x();</highlight></codeline>
<codeline lineno="7962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ac7d6aa89ceacb39658b0d6da061c789a" kindref="member">ptViewportRatio</ref>:</highlight></codeline>
<codeline lineno="7965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a4ff3931ad115603dfb4c7000b24bb415" kindref="member">mKey</ref>*<ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().width();</highlight></codeline>
<codeline lineno="7967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="7968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().x();</highlight></codeline>
<codeline lineno="7969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>+=<sp/><ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().left();</highlight></codeline>
<codeline lineno="7971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref>:</highlight></codeline>
<codeline lineno="7974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="7976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a4ff3931ad115603dfb4c7000b24bb415" kindref="member">mKey</ref>*<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;width();</highlight></codeline>
<codeline lineno="7978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="7979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().x();</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;left();</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>x<sp/>is<sp/>ptAxisRectRatio,<sp/>but<sp/>no<sp/>axis<sp/>rect<sp/>was<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>:</highlight></codeline>
<codeline lineno="7987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="7989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(<ref refid="class_q_c_p_item_position_1a4ff3931ad115603dfb4c7000b24bb415" kindref="member">mKey</ref>);</highlight></codeline>
<codeline lineno="7990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="7991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.rx()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;coordToPixel(<ref refid="class_q_c_p_item_position_1a67bf5df69f587d53731724a7d61c6c3f" kindref="member">mValue</ref>);</highlight></codeline>
<codeline lineno="7992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>x<sp/>is<sp/>ptPlotCoords,<sp/>but<sp/>no<sp/>axes<sp/>were<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7996"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7997"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>Y:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a47c96c0ef4380e1af4aaa7c2265c260b" kindref="member">mPositionTypeY</ref>)</highlight></codeline>
<codeline lineno="8000"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a564f5e53e550ead1ec5fc7fc7d0b73e0" kindref="member">ptAbsolute</ref>:</highlight></codeline>
<codeline lineno="8002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a67bf5df69f587d53731724a7d61c6c3f" kindref="member">mValue</ref>;</highlight></codeline>
<codeline lineno="8004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="8005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().y();</highlight></codeline>
<codeline lineno="8006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ac7d6aa89ceacb39658b0d6da061c789a" kindref="member">ptViewportRatio</ref>:</highlight></codeline>
<codeline lineno="8009"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a67bf5df69f587d53731724a7d61c6c3f" kindref="member">mValue</ref>*<ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().height();</highlight></codeline>
<codeline lineno="8011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="8012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().y();</highlight></codeline>
<codeline lineno="8013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>+=<sp/><ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().top();</highlight></codeline>
<codeline lineno="8015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref>:</highlight></codeline>
<codeline lineno="8018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="8020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a67bf5df69f587d53731724a7d61c6c3f" kindref="member">mValue</ref>*<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;height();</highlight></codeline>
<codeline lineno="8022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="8023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().y();</highlight></codeline>
<codeline lineno="8024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>+=<sp/><ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;top();</highlight></codeline>
<codeline lineno="8026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>y<sp/>is<sp/>ptAxisRectRatio,<sp/>but<sp/>no<sp/>axis<sp/>rect<sp/>was<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>:</highlight></codeline>
<codeline lineno="8031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="8033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(<ref refid="class_q_c_p_item_position_1a4ff3931ad115603dfb4c7000b24bb415" kindref="member">mKey</ref>);</highlight></codeline>
<codeline lineno="8034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="8035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ry()<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;coordToPixel(<ref refid="class_q_c_p_item_position_1a67bf5df69f587d53731724a7d61c6c3f" kindref="member">mValue</ref>);</highlight></codeline>
<codeline lineno="8036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>y<sp/>is<sp/>ptPlotCoords,<sp/>but<sp/>no<sp/>axes<sp/>were<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8040"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8041"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="8042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8044"><highlight class="normal"></highlight></codeline>
<codeline lineno="8050"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1a2185f45c75ac8cb9be89daeaaad50e37" kindref="member">QCPItemPosition::setAxes</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)</highlight></codeline>
<codeline lineno="8051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8052"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1ab99de7ae5766d246defb2de9f47eaf51" kindref="member">keyAxis</ref>;</highlight></codeline>
<codeline lineno="8053"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1a8d3a039fb2e69df86b4015daa30dfd2d" kindref="member">valueAxis</ref>;</highlight></codeline>
<codeline lineno="8054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8055"><highlight class="normal"></highlight></codeline>
<codeline lineno="8061"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1a0cd9b326fb324710169e92e8ca0041c2" kindref="member">QCPItemPosition::setAxisRect</ref>(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*axisRect)</highlight></codeline>
<codeline lineno="8062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8063"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref><sp/>=<sp/><ref refid="class_q_c_p_item_position_1a7f10fa702a324880cc4de958f434cec7" kindref="member">axisRect</ref>;</highlight></codeline>
<codeline lineno="8064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8065"><highlight class="normal"></highlight></codeline>
<codeline lineno="8076"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1ab404e56d9ac2ac2df0382c57933a71ef" kindref="member">QCPItemPosition::setPixelPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPoint)</highlight></codeline>
<codeline lineno="8077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>pixelPoint.x();</highlight></codeline>
<codeline lineno="8079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>pixelPoint.y();</highlight></codeline>
<codeline lineno="8080"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="8081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1ae2a617dce057c5f3ec6878c1823aa291" kindref="member">mPositionTypeX</ref>)</highlight></codeline>
<codeline lineno="8082"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a564f5e53e550ead1ec5fc7fc7d0b73e0" kindref="member">ptAbsolute</ref>:</highlight></codeline>
<codeline lineno="8084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="8086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().x();</highlight></codeline>
<codeline lineno="8087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ac7d6aa89ceacb39658b0d6da061c789a" kindref="member">ptViewportRatio</ref>:</highlight></codeline>
<codeline lineno="8090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="8092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().x();</highlight></codeline>
<codeline lineno="8093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/><ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().left();</highlight></codeline>
<codeline lineno="8095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>/=<sp/>(double)<ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().width();</highlight></codeline>
<codeline lineno="8096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref>:</highlight></codeline>
<codeline lineno="8099"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="8101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>)</highlight></codeline>
<codeline lineno="8103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1a41b4641d18c90997b9c01bf304181bf0" kindref="member">mParentAnchorX</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().x();</highlight></codeline>
<codeline lineno="8104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;left();</highlight></codeline>
<codeline lineno="8106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>/=<sp/>(double)<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;width();</highlight></codeline>
<codeline lineno="8107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>x<sp/>is<sp/>ptAxisRectRatio,<sp/>but<sp/>no<sp/>axis<sp/>rect<sp/>was<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>:</highlight></codeline>
<codeline lineno="8112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="8114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;pixelToCoord(x);</highlight></codeline>
<codeline lineno="8115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="8116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;pixelToCoord(x);</highlight></codeline>
<codeline lineno="8117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>x<sp/>is<sp/>ptPlotCoords,<sp/>but<sp/>no<sp/>axes<sp/>were<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8122"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="8123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a47c96c0ef4380e1af4aaa7c2265c260b" kindref="member">mPositionTypeY</ref>)</highlight></codeline>
<codeline lineno="8124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a564f5e53e550ead1ec5fc7fc7d0b73e0" kindref="member">ptAbsolute</ref>:</highlight></codeline>
<codeline lineno="8126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="8128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().y();</highlight></codeline>
<codeline lineno="8129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ac7d6aa89ceacb39658b0d6da061c789a" kindref="member">ptViewportRatio</ref>:</highlight></codeline>
<codeline lineno="8132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="8134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().y();</highlight></codeline>
<codeline lineno="8135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/><ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().top();</highlight></codeline>
<codeline lineno="8137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>/=<sp/>(double)<ref refid="class_q_c_p_item_anchor_1a59b968410831ba91a25cc75a77dde6f5" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().height();</highlight></codeline>
<codeline lineno="8138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8a01080fd00eaf09fa238ef6b73bbfef75" kindref="member">ptAxisRectRatio</ref>:</highlight></codeline>
<codeline lineno="8141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="8143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>)</highlight></codeline>
<codeline lineno="8145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1afc6142a6a09c8fa41c44d3d54fadd737" kindref="member">mParentAnchorY</ref>-&gt;<ref refid="class_q_c_p_item_anchor_1ae92def8f9297c5d73f5806c586517bb3" kindref="member">pixelPoint</ref>().y();</highlight></codeline>
<codeline lineno="8146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>-=<sp/><ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;top();</highlight></codeline>
<codeline lineno="8148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>/=<sp/>(double)<ref refid="class_q_c_p_item_position_1add40fcb8994c247d85f42a126286b740" kindref="member">mAxisRect</ref>.data()-&gt;height();</highlight></codeline>
<codeline lineno="8149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>y<sp/>is<sp/>ptAxisRectRatio,<sp/>but<sp/>no<sp/>axis<sp/>rect<sp/>was<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">ptPlotCoords</ref>:</highlight></codeline>
<codeline lineno="8154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="8156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a63967a33933231e92f68c8ce06bfc37e" kindref="member">mKeyAxis</ref>.data()-&gt;pixelToCoord(y);</highlight></codeline>
<codeline lineno="8157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="8158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="class_q_c_p_item_position_1a505dc2da24ba274452c1c817fcaba011" kindref="member">mValueAxis</ref>.data()-&gt;pixelToCoord(y);</highlight></codeline>
<codeline lineno="8159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>position<sp/>type<sp/>y<sp/>is<sp/>ptPlotCoords,<sp/>but<sp/>no<sp/>axes<sp/>were<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="8165"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position_1aa988ba4e87ab684c9021017dcaba945f" kindref="member">setCoords</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="8166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8167"><highlight class="normal"></highlight></codeline>
<codeline lineno="8168"><highlight class="normal"></highlight></codeline>
<codeline lineno="8172"></codeline>
<codeline lineno="8312"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8313"><highlight class="normal"></highlight></codeline>
<codeline lineno="8329"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8330"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8331"><highlight class="normal"></highlight></codeline>
<codeline lineno="8342"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>pure<sp/>virtual<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8343"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8344"><highlight class="normal"></highlight></codeline>
<codeline lineno="8350"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8351"><highlight class="normal"></highlight></codeline>
<codeline lineno="8355"><highlight class="normal"><ref refid="class_q_c_p_abstract_item_1a9922507d8b4503a1fe1ed0b1030e23b6" kindref="member">QCPAbstractItem::QCPAbstractItem</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="8356"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>(parentPlot),</highlight></codeline>
<codeline lineno="8357"><highlight class="normal"><sp/><sp/>mClipToAxisRect(false),</highlight></codeline>
<codeline lineno="8358"><highlight class="normal"><sp/><sp/>mSelectable(true),</highlight></codeline>
<codeline lineno="8359"><highlight class="normal"><sp/><sp/>mSelected(false)</highlight></codeline>
<codeline lineno="8360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8361"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxisRect*&gt;<sp/>rects<sp/>=<sp/>parentPlot-&gt;<ref refid="class_q_custom_plot_1afd67094aaeccbc5719761348b2d8c891" kindref="member">axisRects</ref>();</highlight></codeline>
<codeline lineno="8362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rects.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8364"><highlight class="normal"><sp/><sp/><sp/><sp/>setClipToAxisRect(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8365"><highlight class="normal"><sp/><sp/><sp/><sp/>setClipAxisRect(rects.first());</highlight></codeline>
<codeline lineno="8366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8368"><highlight class="normal"></highlight></codeline>
<codeline lineno="8369"><highlight class="normal"><ref refid="class_q_c_p_abstract_item_1a375bd1b7d3218b04a6ff7ff06fff917c" kindref="member">QCPAbstractItem::~QCPAbstractItem</ref>()</highlight></codeline>
<codeline lineno="8370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>delete<sp/>mPositions<sp/>because<sp/>every<sp/>position<sp/>is<sp/>also<sp/>an<sp/>anchor<sp/>and<sp/>thus<sp/>in<sp/>mAnchors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8372"><highlight class="normal"><sp/><sp/>qDeleteAll(<ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>);</highlight></codeline>
<codeline lineno="8373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8374"><highlight class="normal"></highlight></codeline>
<codeline lineno="8375"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>make<sp/>this<sp/>a<sp/>header<sp/>inline<sp/>function,<sp/>because<sp/>QPointer<sp/>breaks<sp/>with<sp/>forward<sp/>declared<sp/>types,<sp/>see<sp/>QTBUG-29588<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8376"><highlight class="normal"><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*<ref refid="class_q_c_p_abstract_item_1a37f86618740b5047eae23eedb2de061a" kindref="member">QCPAbstractItem::clipAxisRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8377"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" kindref="member">mClipAxisRect</ref>.data();</highlight></codeline>
<codeline lineno="8379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8380"><highlight class="normal"></highlight></codeline>
<codeline lineno="8387"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a39e05b9d4176b9accafc746d16ca6a06" kindref="member">QCPAbstractItem::setClipToAxisRect</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clip)</highlight></codeline>
<codeline lineno="8388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8389"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item_1ad2a70ff6b658fcb84a9427f69d3f587d" kindref="member">mClipToAxisRect</ref><sp/>=<sp/>clip;</highlight></codeline>
<codeline lineno="8390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1ad2a70ff6b658fcb84a9427f69d3f587d" kindref="member">mClipToAxisRect</ref>)</highlight></codeline>
<codeline lineno="8391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" kindref="member">setParentLayerable</ref>(<ref refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" kindref="member">mClipAxisRect</ref>.data());</highlight></codeline>
<codeline lineno="8392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8393"><highlight class="normal"></highlight></codeline>
<codeline lineno="8400"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a7dc75fcbcd10206fe0b75d757ea7a347" kindref="member">QCPAbstractItem::setClipAxisRect</ref>(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*rect)</highlight></codeline>
<codeline lineno="8401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8402"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" kindref="member">mClipAxisRect</ref><sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="8403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1ad2a70ff6b658fcb84a9427f69d3f587d" kindref="member">mClipToAxisRect</ref>)</highlight></codeline>
<codeline lineno="8404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" kindref="member">setParentLayerable</ref>(<ref refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" kindref="member">mClipAxisRect</ref>.data());</highlight></codeline>
<codeline lineno="8405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8406"><highlight class="normal"></highlight></codeline>
<codeline lineno="8416"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a8a8e32a55bc478b849756a78c2d87fd2" kindref="member">QCPAbstractItem::setSelectable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable)</highlight></codeline>
<codeline lineno="8417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref><sp/>!=<sp/>selectable)</highlight></codeline>
<codeline lineno="8419"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a9189e752025533e1595eaade0009a3bc" kindref="member">selectable</ref>;</highlight></codeline>
<codeline lineno="8421"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_abstract_item_1a5b266c11aac61cb511901f3911dac2a3" kindref="member">selectableChanged</ref>(<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>);</highlight></codeline>
<codeline lineno="8422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8424"><highlight class="normal"></highlight></codeline>
<codeline lineno="8439"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">QCPAbstractItem::setSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)</highlight></codeline>
<codeline lineno="8440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>!=<sp/>selected)</highlight></codeline>
<codeline lineno="8442"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a225865808640d8d9a7dd19f09a2e93f2" kindref="member">selected</ref>;</highlight></codeline>
<codeline lineno="8444"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_abstract_item_1aa5cffb034fc65dbb91c77e02c1c14251" kindref="member">selectionChanged</ref>(<ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref>);</highlight></codeline>
<codeline lineno="8445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8447"><highlight class="normal"></highlight></codeline>
<codeline lineno="8458"><highlight class="normal"><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<ref refid="class_q_c_p_abstract_item_1af71345bd150f87fa1d2442837b87bb59" kindref="member">QCPAbstractItem::position</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8459"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_abstract_item_1af94ff71b6a15ea6d028ab8bd8eccd012" kindref="member">mPositions</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="8461"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1af94ff71b6a15ea6d028ab8bd8eccd012" kindref="member">mPositions</ref>.at(i)-&gt;name()<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="8463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1af94ff71b6a15ea6d028ab8bd8eccd012" kindref="member">mPositions</ref>.at(i);</highlight></codeline>
<codeline lineno="8464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8465"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;position<sp/>with<sp/>name<sp/>not<sp/>found:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="8466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="8467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8468"><highlight class="normal"></highlight></codeline>
<codeline lineno="8479"><highlight class="normal"><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*<ref refid="class_q_c_p_abstract_item_1abed974cba7cc02608c71dad4638e008d" kindref="member">QCPAbstractItem::anchor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8480"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="8482"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>.at(i)-&gt;name()<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="8484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>.at(i);</highlight></codeline>
<codeline lineno="8485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8486"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;anchor<sp/>with<sp/>name<sp/>not<sp/>found:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="8487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="8488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8489"><highlight class="normal"></highlight></codeline>
<codeline lineno="8498"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1acbce9e5ba5252541d19db0c40303357a" kindref="member">QCPAbstractItem::hasAnchor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8499"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="8501"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>.at(i)-&gt;name()<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="8503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8507"><highlight class="normal"></highlight></codeline>
<codeline lineno="8517"><highlight class="normal">QRect<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">QCPAbstractItem::clipRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8518"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1ad2a70ff6b658fcb84a9427f69d3f587d" kindref="member">mClipToAxisRect</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" kindref="member">mClipAxisRect</ref>)</highlight></codeline>
<codeline lineno="8520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a3e57cfe7da4b1ac3d6fa7281ea437361" kindref="member">mClipAxisRect</ref>.data()-&gt;rect();</highlight></codeline>
<codeline lineno="8521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>();</highlight></codeline>
<codeline lineno="8523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8524"><highlight class="normal"></highlight></codeline>
<codeline lineno="8538"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a0839031abdd71067e2256a4d53c7a011" kindref="member">QCPAbstractItem::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8539"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8540"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caf7712a85d6b0c75b24301d2fe9484db3" kindref="member">QCP::aeItems</ref>);</highlight></codeline>
<codeline lineno="8541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8542"><highlight class="normal"></highlight></codeline>
<codeline lineno="8555"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">QCPAbstractItem::distSqrToLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8556"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8557"><highlight class="normal"><sp/><sp/>QVector2D<sp/>a(start);</highlight></codeline>
<codeline lineno="8558"><highlight class="normal"><sp/><sp/>QVector2D<sp/>b(end);</highlight></codeline>
<codeline lineno="8559"><highlight class="normal"><sp/><sp/>QVector2D<sp/>p(point);</highlight></codeline>
<codeline lineno="8560"><highlight class="normal"><sp/><sp/>QVector2D<sp/>v(b-a);</highlight></codeline>
<codeline lineno="8561"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="8562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vLengthSqr<sp/>=<sp/>v.lengthSquared();</highlight></codeline>
<codeline lineno="8563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(vLengthSqr))</highlight></codeline>
<codeline lineno="8564"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu<sp/>=<sp/>QVector2D::dotProduct(p-a,<sp/>v)/vLengthSqr;</highlight></codeline>
<codeline lineno="8566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="8567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a-p).lengthSquared();</highlight></codeline>
<codeline lineno="8568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="8569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b-p).lengthSquared();</highlight></codeline>
<codeline lineno="8570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a<sp/>+<sp/>mu*v)-p).lengthSquared();</highlight></codeline>
<codeline lineno="8572"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a-p).lengthSquared();</highlight></codeline>
<codeline lineno="8574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8575"><highlight class="normal"></highlight></codeline>
<codeline lineno="8593"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4c0e14c4e92df91174cb7183fb363069" kindref="member">QCPAbstractItem::rectSelectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filledRect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8594"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="8596"><highlight class="normal"></highlight></codeline>
<codeline lineno="8597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>distance<sp/>to<sp/>border:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8598"><highlight class="normal"><sp/><sp/>QList&lt;QLineF&gt;<sp/>lines;</highlight></codeline>
<codeline lineno="8599"><highlight class="normal"><sp/><sp/>lines<sp/>&lt;&lt;<sp/>QLineF(rect.topLeft(),<sp/>rect.topRight())<sp/>&lt;&lt;<sp/>QLineF(rect.bottomLeft(),<sp/>rect.bottomRight())</highlight></codeline>
<codeline lineno="8600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>QLineF(rect.topLeft(),<sp/>rect.bottomLeft())<sp/>&lt;&lt;<sp/>QLineF(rect.topRight(),<sp/>rect.bottomRight());</highlight></codeline>
<codeline lineno="8601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="8602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lines.size();<sp/>++i)</highlight></codeline>
<codeline lineno="8603"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>(lines.at(i).p1(),<sp/>lines.at(i).p2(),<sp/>pos);</highlight></codeline>
<codeline lineno="8605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="8606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>distSqr;</highlight></codeline>
<codeline lineno="8607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8608"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="8609"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="8610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filled<sp/>rect,<sp/>allow<sp/>click<sp/>inside<sp/>to<sp/>count<sp/>as<sp/>hit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filledRect<sp/>&amp;&amp;<sp/>result<sp/>&gt;<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99)</highlight></codeline>
<codeline lineno="8612"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect.contains(pos))</highlight></codeline>
<codeline lineno="8614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="8615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8618"><highlight class="normal"></highlight></codeline>
<codeline lineno="8629"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_abstract_item_1a94bde62b8a2fc133666dcbb8035deeed" kindref="member">QCPAbstractItem::anchorPixelPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8630"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8631"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;called<sp/>on<sp/>item<sp/>which<sp/>shouldn&apos;t<sp/>have<sp/>any<sp/>anchors<sp/>(this<sp/>method<sp/>not<sp/>reimplemented).<sp/>anchorId&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchorId;</highlight></codeline>
<codeline lineno="8632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="8633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8634"><highlight class="normal"></highlight></codeline>
<codeline lineno="8649"><highlight class="normal"><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">QCPAbstractItem::createPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="8650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1acbce9e5ba5252541d19db0c40303357a" kindref="member">hasAnchor</ref>(name))</highlight></codeline>
<codeline lineno="8652"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;anchor/position<sp/>with<sp/>name<sp/>exists<sp/>already:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="8653"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref><sp/>*newPosition<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_position" kindref="compound">QCPItemPosition</ref>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="8654"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item_1af94ff71b6a15ea6d028ab8bd8eccd012" kindref="member">mPositions</ref>.append(newPosition);</highlight></codeline>
<codeline lineno="8655"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>.append(newPosition);<sp/></highlight><highlight class="comment">//<sp/>every<sp/>position<sp/>is<sp/>also<sp/>an<sp/>anchor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8656"><highlight class="normal"><sp/><sp/>newPosition-&gt;<ref refid="class_q_c_p_item_position_1a2185f45c75ac8cb9be89daeaaad50e37" kindref="member">setAxes</ref>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a9a79cd0158a4c7f30cbc702f0fd800e4" kindref="member">xAxis</ref>,<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1af6fea5679725b152c14facd920b19367" kindref="member">yAxis</ref>);</highlight></codeline>
<codeline lineno="8657"><highlight class="normal"><sp/><sp/>newPosition-&gt;<ref refid="class_q_c_p_item_position_1aa476abf71ed8fa4c537457ebb1a754ad" kindref="member">setType</ref>(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">QCPItemPosition::ptPlotCoords</ref>);</highlight></codeline>
<codeline lineno="8658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4a37a1add5fe63060ac518cf0a4c4050" kindref="member">axisRect</ref>())</highlight></codeline>
<codeline lineno="8659"><highlight class="normal"><sp/><sp/><sp/><sp/>newPosition-&gt;<ref refid="class_q_c_p_item_position_1a0cd9b326fb324710169e92e8ca0041c2" kindref="member">setAxisRect</ref>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4a37a1add5fe63060ac518cf0a4c4050" kindref="member">axisRect</ref>());</highlight></codeline>
<codeline lineno="8660"><highlight class="normal"><sp/><sp/>newPosition-&gt;<ref refid="class_q_c_p_item_position_1aa988ba4e87ab684c9021017dcaba945f" kindref="member">setCoords</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="8661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newPosition;</highlight></codeline>
<codeline lineno="8662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8663"><highlight class="normal"></highlight></codeline>
<codeline lineno="8683"><highlight class="normal"><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">QCPAbstractItem::createAnchor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)</highlight></codeline>
<codeline lineno="8684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1acbce9e5ba5252541d19db0c40303357a" kindref="member">hasAnchor</ref>(name))</highlight></codeline>
<codeline lineno="8686"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;anchor/position<sp/>with<sp/>name<sp/>exists<sp/>already:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="8687"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_anchor" kindref="compound">QCPItemAnchor</ref><sp/>*newAnchor<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a61767d414fd57af9eb1741b34268c7fc" kindref="member">QCPItemAnchor</ref>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>name,<sp/>anchorId);</highlight></codeline>
<codeline lineno="8688"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item_1a909a3abab783de302ebf0a0e6f2bbc15" kindref="member">mAnchors</ref>.append(newAnchor);</highlight></codeline>
<codeline lineno="8689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newAnchor;</highlight></codeline>
<codeline lineno="8690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8691"><highlight class="normal"></highlight></codeline>
<codeline lineno="8692"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1aaf92af7b9893712959a6c073d334d88d" kindref="member">QCPAbstractItem::selectEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="8694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8695"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="8696"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="8697"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="8698"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="8700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">setSelected</ref>(additive<sp/>?<sp/>!<ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="8702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="8703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8705"><highlight class="normal"></highlight></codeline>
<codeline lineno="8706"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8707"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a91f090d6763cfedb0749219c63788ae9" kindref="member">QCPAbstractItem::deselectEvent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="8708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="8710"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="8711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="8712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_item_1a203de94ad586cc44d16c9565f49d3378" kindref="member">setSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="8713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="8714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="8715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8717"><highlight class="normal"></highlight></codeline>
<codeline lineno="8718"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8719"><highlight class="normal"><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/><ref refid="class_q_c_p_abstract_item_1a777b5d384936396ad9c3ceb3d3453f1c" kindref="member">QCPAbstractItem::selectionCategory</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8720"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aea2f7c105d674e76d9b187b02ef29260" kindref="member">QCP::iSelectItems</ref>;</highlight></codeline>
<codeline lineno="8722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8723"><highlight class="normal"></highlight></codeline>
<codeline lineno="8724"><highlight class="normal"></highlight></codeline>
<codeline lineno="8729"></codeline>
<codeline lineno="8742"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8743"><highlight class="normal"></highlight></codeline>
<codeline lineno="8765"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8766"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8767"><highlight class="normal"></highlight></codeline>
<codeline lineno="8955"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8956"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>public<sp/>members<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8957"><highlight class="normal"></highlight></codeline>
<codeline lineno="9029"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>public<sp/>members<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9030"><highlight class="normal"></highlight></codeline>
<codeline lineno="9034"><highlight class="normal"><ref refid="class_q_custom_plot_1a45b99626558651a6428b83972b0b34b8" kindref="member">QCustomPlot::QCustomPlot</ref>(QWidget<sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="9035"><highlight class="normal"><sp/><sp/>QWidget(parent),</highlight></codeline>
<codeline lineno="9036"><highlight class="normal"><sp/><sp/>xAxis(0),</highlight></codeline>
<codeline lineno="9037"><highlight class="normal"><sp/><sp/>yAxis(0),</highlight></codeline>
<codeline lineno="9038"><highlight class="normal"><sp/><sp/>xAxis2(0),</highlight></codeline>
<codeline lineno="9039"><highlight class="normal"><sp/><sp/>yAxis2(0),</highlight></codeline>
<codeline lineno="9040"><highlight class="normal"><sp/><sp/>legend(0),</highlight></codeline>
<codeline lineno="9041"><highlight class="normal"><sp/><sp/>mPlotLayout(0),</highlight></codeline>
<codeline lineno="9042"><highlight class="normal"><sp/><sp/>mAutoAddPlottableToLegend(true),</highlight></codeline>
<codeline lineno="9043"><highlight class="normal"><sp/><sp/>mAntialiasedElements(<ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa9e90d81896358757d94275aeaa58f6a" kindref="member">aeNone</ref>),</highlight></codeline>
<codeline lineno="9044"><highlight class="normal"><sp/><sp/>mNotAntialiasedElements(<ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa9e90d81896358757d94275aeaa58f6a" kindref="member">aeNone</ref>),</highlight></codeline>
<codeline lineno="9045"><highlight class="normal"><sp/><sp/>mInteractions(0),</highlight></codeline>
<codeline lineno="9046"><highlight class="normal"><sp/><sp/>mSelectionTolerance(8),</highlight></codeline>
<codeline lineno="9047"><highlight class="normal"><sp/><sp/>mNoAntialiasingOnDrag(false),</highlight></codeline>
<codeline lineno="9048"><highlight class="normal"><sp/><sp/>mBackgroundBrush(Qt::white,<sp/>Qt::SolidPattern),</highlight></codeline>
<codeline lineno="9049"><highlight class="normal"><sp/><sp/>mBackgroundScaled(true),</highlight></codeline>
<codeline lineno="9050"><highlight class="normal"><sp/><sp/>mBackgroundScaledMode(Qt::KeepAspectRatioByExpanding),</highlight></codeline>
<codeline lineno="9051"><highlight class="normal"><sp/><sp/>mCurrentLayer(0),</highlight></codeline>
<codeline lineno="9052"><highlight class="normal"><sp/><sp/>mPlottingHints(<ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4a8e9cfe5ee0c5cd36dd7accf9739aff65" kindref="member">phCacheLabels</ref>|<ref refid="namespace_q_c_p" kindref="compound">QCP</ref>::<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa3090dafa0e0f9a28c579c79d6c2d283" kindref="member">phForceRepaint</ref>),</highlight></codeline>
<codeline lineno="9053"><highlight class="normal"><sp/><sp/>mMultiSelectModifier(Qt::ControlModifier),</highlight></codeline>
<codeline lineno="9054"><highlight class="normal"><sp/><sp/>mPaintBuffer(size()),</highlight></codeline>
<codeline lineno="9055"><highlight class="normal"><sp/><sp/>mMouseEventElement(0),</highlight></codeline>
<codeline lineno="9056"><highlight class="normal"><sp/><sp/>mReplotting(false)</highlight></codeline>
<codeline lineno="9057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9058"><highlight class="normal"><sp/><sp/>setAttribute(Qt::WA_NoMousePropagation);</highlight></codeline>
<codeline lineno="9059"><highlight class="normal"><sp/><sp/>setAttribute(Qt::WA_OpaquePaintEvent);</highlight></codeline>
<codeline lineno="9060"><highlight class="normal"><sp/><sp/>setMouseTracking(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9061"><highlight class="normal"><sp/><sp/>QLocale<sp/>currentLocale<sp/>=<sp/>locale();</highlight></codeline>
<codeline lineno="9062"><highlight class="normal"><sp/><sp/>currentLocale.setNumberOptions(QLocale::OmitGroupSeparator);</highlight></codeline>
<codeline lineno="9063"><highlight class="normal"><sp/><sp/>setLocale(currentLocale);</highlight></codeline>
<codeline lineno="9064"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>initial<sp/>layers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9066"><highlight class="normal"><sp/><sp/>mLayers.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;background&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="9067"><highlight class="normal"><sp/><sp/>mLayers.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;grid&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="9068"><highlight class="normal"><sp/><sp/>mLayers.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="9069"><highlight class="normal"><sp/><sp/>mLayers.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;axes&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="9070"><highlight class="normal"><sp/><sp/>mLayers.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>QLatin1String(</highlight><highlight class="stringliteral">&quot;legend&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="9071"><highlight class="normal"><sp/><sp/>updateLayerIndices();</highlight></codeline>
<codeline lineno="9072"><highlight class="normal"><sp/><sp/>setCurrentLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9073"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9074"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>initial<sp/>layout,<sp/>axis<sp/>rect<sp/>and<sp/>legend:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9075"><highlight class="normal"><sp/><sp/>mPlotLayout<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>;</highlight></codeline>
<codeline lineno="9076"><highlight class="normal"><sp/><sp/>mPlotLayout-&gt;<ref refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" kindref="member">initializeParentPlot</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9077"><highlight class="normal"><sp/><sp/>mPlotLayout-&gt;setParent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>important<sp/>because<sp/>if<sp/>parent<sp/>is<sp/>QWidget,<sp/>QCPLayout::sizeConstraintsChanged<sp/>will<sp/>call<sp/>QWidget::updateGeometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9078"><highlight class="normal"><sp/><sp/>mPlotLayout-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9079"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*defaultAxisRect<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9080"><highlight class="normal"><sp/><sp/>mPlotLayout-&gt;addElement(0,<sp/>0,<sp/>defaultAxisRect);</highlight></codeline>
<codeline lineno="9081"><highlight class="normal"><sp/><sp/>xAxis<sp/>=<sp/>defaultAxisRect-&gt;<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>);</highlight></codeline>
<codeline lineno="9082"><highlight class="normal"><sp/><sp/>yAxis<sp/>=<sp/>defaultAxisRect-&gt;<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>);</highlight></codeline>
<codeline lineno="9083"><highlight class="normal"><sp/><sp/>xAxis2<sp/>=<sp/>defaultAxisRect-&gt;<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>);</highlight></codeline>
<codeline lineno="9084"><highlight class="normal"><sp/><sp/>yAxis2<sp/>=<sp/>defaultAxisRect-&gt;<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="9085"><highlight class="normal"><sp/><sp/>legend<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>;</highlight></codeline>
<codeline lineno="9086"><highlight class="normal"><sp/><sp/>legend-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9087"><highlight class="normal"><sp/><sp/>defaultAxisRect-&gt;<ref refid="class_q_c_p_axis_rect_1a4114887c7141b59650b7488f930993e5" kindref="member">insetLayout</ref>()-&gt;<ref refid="class_q_c_p_layout_inset_1ad61529eb576af7f04dff94abb10c745a" kindref="member">addElement</ref>(legend,<sp/>Qt::AlignRight|Qt::AlignTop);</highlight></codeline>
<codeline lineno="9088"><highlight class="normal"><sp/><sp/>defaultAxisRect-&gt;<ref refid="class_q_c_p_axis_rect_1a4114887c7141b59650b7488f930993e5" kindref="member">insetLayout</ref>()-&gt;<ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref>(QMargins(12,<sp/>12,<sp/>12,<sp/>12));</highlight></codeline>
<codeline lineno="9089"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9090"><highlight class="normal"><sp/><sp/>defaultAxisRect-&gt;<ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">setLayer</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;background&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9091"><highlight class="normal"><sp/><sp/>xAxis-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;axes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9092"><highlight class="normal"><sp/><sp/>yAxis-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;axes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9093"><highlight class="normal"><sp/><sp/>xAxis2-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;axes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9094"><highlight class="normal"><sp/><sp/>yAxis2-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;axes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9095"><highlight class="normal"><sp/><sp/>xAxis-&gt;grid()-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;grid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9096"><highlight class="normal"><sp/><sp/>yAxis-&gt;grid()-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;grid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9097"><highlight class="normal"><sp/><sp/>xAxis2-&gt;grid()-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;grid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9098"><highlight class="normal"><sp/><sp/>yAxis2-&gt;grid()-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;grid&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9099"><highlight class="normal"><sp/><sp/>legend-&gt;setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;legend&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="9100"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9101"><highlight class="normal"><sp/><sp/>setViewport(rect());<sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>be<sp/>called<sp/>after<sp/>mPlotLayout<sp/>has<sp/>been<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9103"><highlight class="normal"><sp/><sp/>replot();</highlight></codeline>
<codeline lineno="9104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9105"><highlight class="normal"></highlight></codeline>
<codeline lineno="9106"><highlight class="normal"><ref refid="class_q_custom_plot_1a75d9b6f599dcae706e45efd425c5499e" kindref="member">QCustomPlot::~QCustomPlot</ref>()</highlight></codeline>
<codeline lineno="9107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9108"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a9a409bb3201878adb7ffba1c89c4e004" kindref="member">clearPlottables</ref>();</highlight></codeline>
<codeline lineno="9109"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1abdfd07d4f0591d0cf967f85013fd3645" kindref="member">clearItems</ref>();</highlight></codeline>
<codeline lineno="9110"><highlight class="normal"></highlight></codeline>
<codeline lineno="9111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>)</highlight></codeline>
<codeline lineno="9112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>;</highlight></codeline>
<codeline lineno="9114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9116"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9117"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1aa27569c92e74395af10151357d268628" kindref="member">mCurrentLayer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9118"><highlight class="normal"><sp/><sp/>qDeleteAll(<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>);<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>removeLayer,<sp/>because<sp/>it<sp/>would<sp/>prevent<sp/>the<sp/>last<sp/>layer<sp/>to<sp/>be<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9119"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.clear();</highlight></codeline>
<codeline lineno="9120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9121"><highlight class="normal"></highlight></codeline>
<codeline lineno="9139"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1af6f91e5eab1be85f67c556e98c3745e8" kindref="member">QCustomPlot::setAntialiasedElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::AntialiasedElements<sp/>&amp;antialiasedElements)</highlight></codeline>
<codeline lineno="9140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9141"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref><sp/>=<sp/><ref refid="class_q_custom_plot_1a81e954fbb485bb44c609e5707f0067b3" kindref="member">antialiasedElements</ref>;</highlight></codeline>
<codeline lineno="9142"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>elements<sp/>aren&apos;t<sp/>in<sp/>mNotAntialiasedElements<sp/>and<sp/>mAntialiasedElements<sp/>simultaneously:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>&amp;<sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>|=<sp/>~mAntialiasedElements;</highlight></codeline>
<codeline lineno="9146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9147"><highlight class="normal"></highlight></codeline>
<codeline lineno="9155"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1aeef813bcf7efab8e765f9f87ec454691" kindref="member">QCustomPlot::setAntialiasedElement</ref>(<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref><sp/>antialiasedElement,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="9156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled<sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref>.testFlag(antialiasedElement))</highlight></codeline>
<codeline lineno="9158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref><sp/>&amp;=<sp/>~antialiasedElement;</highlight></codeline>
<codeline lineno="9159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled<sp/>&amp;&amp;<sp/>!<ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref>.testFlag(antialiasedElement))</highlight></codeline>
<codeline lineno="9160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref><sp/>|=<sp/>antialiasedElement;</highlight></codeline>
<codeline lineno="9161"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>elements<sp/>aren&apos;t<sp/>in<sp/>mNotAntialiasedElements<sp/>and<sp/>mAntialiasedElements<sp/>simultaneously:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>&amp;<sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>|=<sp/>~mAntialiasedElements;</highlight></codeline>
<codeline lineno="9165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9166"><highlight class="normal"></highlight></codeline>
<codeline lineno="9185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ae10d685b5eabea2999fb8775ca173c24" kindref="member">QCustomPlot::setNotAntialiasedElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::AntialiasedElements<sp/>&amp;notAntialiasedElements)</highlight></codeline>
<codeline lineno="9186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9187"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>=<sp/><ref refid="class_q_custom_plot_1a8060cee59757213764382a78d3196189" kindref="member">notAntialiasedElements</ref>;</highlight></codeline>
<codeline lineno="9188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>elements<sp/>aren&apos;t<sp/>in<sp/>mNotAntialiasedElements<sp/>and<sp/>mAntialiasedElements<sp/>simultaneously:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>&amp;<sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9191"><highlight class="normal"><sp/><sp/><sp/><sp/>mAntialiasedElements<sp/>|=<sp/>~<ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref>;</highlight></codeline>
<codeline lineno="9192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9193"><highlight class="normal"></highlight></codeline>
<codeline lineno="9201"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1afc657938a707c890e449ae89203a076d" kindref="member">QCustomPlot::setNotAntialiasedElement</ref>(<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0c" kindref="member">QCP::AntialiasedElement</ref><sp/>notAntialiasedElement,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="9202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled<sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref>.testFlag(notAntialiasedElement))</highlight></codeline>
<codeline lineno="9204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>&amp;=<sp/>~notAntialiasedElement;</highlight></codeline>
<codeline lineno="9205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled<sp/>&amp;&amp;<sp/>!<ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref>.testFlag(notAntialiasedElement))</highlight></codeline>
<codeline lineno="9206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>|=<sp/>notAntialiasedElement;</highlight></codeline>
<codeline lineno="9207"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>elements<sp/>aren&apos;t<sp/>in<sp/>mNotAntialiasedElements<sp/>and<sp/>mAntialiasedElements<sp/>simultaneously:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref><sp/>&amp;<sp/><ref refid="class_q_custom_plot_1aa333200629256830e273873b582a5524" kindref="member">mAntialiasedElements</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9210"><highlight class="normal"><sp/><sp/><sp/><sp/>mAntialiasedElements<sp/>|=<sp/>~<ref refid="class_q_custom_plot_1a2b6ebcad00a90ba07f146cefcd4293da" kindref="member">mNotAntialiasedElements</ref>;</highlight></codeline>
<codeline lineno="9211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9212"><highlight class="normal"></highlight></codeline>
<codeline lineno="9219"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ad8858410c2db47b7104040a3aa61c3fc" kindref="member">QCustomPlot::setAutoAddPlottableToLegend</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="9220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9221"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1aaf3ea6a4cb04d35a149cc9a0cdac3394" kindref="member">mAutoAddPlottableToLegend</ref><sp/>=<sp/>on;</highlight></codeline>
<codeline lineno="9222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9223"><highlight class="normal"></highlight></codeline>
<codeline lineno="9278"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::Interactions<sp/>&amp;interactions)</highlight></codeline>
<codeline lineno="9279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9280"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref><sp/>=<sp/><ref refid="class_q_custom_plot_1a12401c02b6949a717f5749bb28c62983" kindref="member">interactions</ref>;</highlight></codeline>
<codeline lineno="9281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9282"><highlight class="normal"></highlight></codeline>
<codeline lineno="9290"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a422bf1bc6d56dac75a3d805d9a65902c" kindref="member">QCustomPlot::setInteraction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/>&amp;interaction,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="9291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled<sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref>.testFlag(interaction))</highlight></codeline>
<codeline lineno="9293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref><sp/>&amp;=<sp/>~interaction;</highlight></codeline>
<codeline lineno="9294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled<sp/>&amp;&amp;<sp/>!<ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref>.testFlag(interaction))</highlight></codeline>
<codeline lineno="9295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref><sp/>|=<sp/>interaction;</highlight></codeline>
<codeline lineno="9296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9297"><highlight class="normal"></highlight></codeline>
<codeline lineno="9311"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a4dc31241d7b09680950e19e5f971ed93" kindref="member">QCustomPlot::setSelectionTolerance</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixels)</highlight></codeline>
<codeline lineno="9312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9313"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1abc36e12dd0482117ad810a800c847722" kindref="member">mSelectionTolerance</ref><sp/>=<sp/>pixels;</highlight></codeline>
<codeline lineno="9314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9315"><highlight class="normal"></highlight></codeline>
<codeline lineno="9325"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a775bdcb6329d44701aeaa6135b0e5265" kindref="member">QCustomPlot::setNoAntialiasingOnDrag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="9326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9327"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ac83df968435f6b8ec79f2993ab9124e8" kindref="member">mNoAntialiasingOnDrag</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="9328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9329"><highlight class="normal"></highlight></codeline>
<codeline lineno="9335"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a94a33cbdadbbac5934843508bcfc210d" kindref="member">QCustomPlot::setPlottingHints</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCP::PlottingHints<sp/>&amp;hints)</highlight></codeline>
<codeline lineno="9336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9337"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1aa184197a6101a9cc5807469e1d006c9e" kindref="member">mPlottingHints</ref><sp/>=<sp/>hints;</highlight></codeline>
<codeline lineno="9338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9339"><highlight class="normal"></highlight></codeline>
<codeline lineno="9345"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a3b7c97bb6c16464e9e15190c07abe9a9" kindref="member">QCustomPlot::setPlottingHint</ref>(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4" kindref="member">QCP::PlottingHint</ref><sp/>hint,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="9346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9347"><highlight class="normal"><sp/><sp/>QCP::PlottingHints<sp/>newHints<sp/>=<sp/><ref refid="class_q_custom_plot_1aa184197a6101a9cc5807469e1d006c9e" kindref="member">mPlottingHints</ref>;</highlight></codeline>
<codeline lineno="9348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="9349"><highlight class="normal"><sp/><sp/><sp/><sp/>newHints<sp/>&amp;=<sp/>~hint;</highlight></codeline>
<codeline lineno="9350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9351"><highlight class="normal"><sp/><sp/><sp/><sp/>newHints<sp/>|=<sp/>hint;</highlight></codeline>
<codeline lineno="9352"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newHints<sp/>!=<sp/><ref refid="class_q_custom_plot_1aa184197a6101a9cc5807469e1d006c9e" kindref="member">mPlottingHints</ref>)</highlight></codeline>
<codeline lineno="9354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a94a33cbdadbbac5934843508bcfc210d" kindref="member">setPlottingHints</ref>(newHints);</highlight></codeline>
<codeline lineno="9355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9356"><highlight class="normal"></highlight></codeline>
<codeline lineno="9367"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a8fc96e3b5138a06759a2a90c166df516" kindref="member">QCustomPlot::setMultiSelectModifier</ref>(Qt::KeyboardModifier<sp/>modifier)</highlight></codeline>
<codeline lineno="9368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9369"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a0e97e701c5671e7e463d2ce0211d0f8a" kindref="member">mMultiSelectModifier</ref><sp/>=<sp/>modifier;</highlight></codeline>
<codeline lineno="9370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9371"><highlight class="normal"></highlight></codeline>
<codeline lineno="9379"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">QCustomPlot::setViewport</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)</highlight></codeline>
<codeline lineno="9380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9381"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref><sp/>=<sp/>rect;</highlight></codeline>
<codeline lineno="9382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>)</highlight></codeline>
<codeline lineno="9383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>-&gt;<ref refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" kindref="member">setOuterRect</ref>(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>);</highlight></codeline>
<codeline lineno="9384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9385"><highlight class="normal"></highlight></codeline>
<codeline lineno="9401"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a130358592cfca353ff3cf5571b49fb00" kindref="member">QCustomPlot::setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm)</highlight></codeline>
<codeline lineno="9402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9403"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ae8f4677399324a78c5f8dbfb95a34f90" kindref="member">mBackgroundPixmap</ref><sp/>=<sp/>pm;</highlight></codeline>
<codeline lineno="9404"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a081bf046501d52642dc6d7e3bdb97d57" kindref="member">mScaledBackgroundPixmap</ref><sp/>=<sp/>QPixmap();</highlight></codeline>
<codeline lineno="9405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9406"><highlight class="normal"></highlight></codeline>
<codeline lineno="9420"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a130358592cfca353ff3cf5571b49fb00" kindref="member">QCustomPlot::setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="9421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9422"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref><sp/>=<sp/>brush;</highlight></codeline>
<codeline lineno="9423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9424"><highlight class="normal"></highlight></codeline>
<codeline lineno="9432"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a130358592cfca353ff3cf5571b49fb00" kindref="member">QCustomPlot::setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled,<sp/>Qt::AspectRatioMode<sp/>mode)</highlight></codeline>
<codeline lineno="9433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9434"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ae8f4677399324a78c5f8dbfb95a34f90" kindref="member">mBackgroundPixmap</ref><sp/>=<sp/>pm;</highlight></codeline>
<codeline lineno="9435"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a081bf046501d52642dc6d7e3bdb97d57" kindref="member">mScaledBackgroundPixmap</ref><sp/>=<sp/>QPixmap();</highlight></codeline>
<codeline lineno="9436"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a62fe584b20680b1b2e1c7efb5c5416a5" kindref="member">mBackgroundScaled</ref><sp/>=<sp/>scaled;</highlight></codeline>
<codeline lineno="9437"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ab82e8a5e3ad6b486f95d6da8bf49e9aa" kindref="member">mBackgroundScaledMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="9438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9439"><highlight class="normal"></highlight></codeline>
<codeline lineno="9450"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a36f0fa1317325dc7b7efea615ee2de1f" kindref="member">QCustomPlot::setBackgroundScaled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled)</highlight></codeline>
<codeline lineno="9451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9452"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a62fe584b20680b1b2e1c7efb5c5416a5" kindref="member">mBackgroundScaled</ref><sp/>=<sp/>scaled;</highlight></codeline>
<codeline lineno="9453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9454"><highlight class="normal"></highlight></codeline>
<codeline lineno="9461"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a4c0eb4865b7949f62e1cb97db04a3de0" kindref="member">QCustomPlot::setBackgroundScaledMode</ref>(Qt::AspectRatioMode<sp/>mode)</highlight></codeline>
<codeline lineno="9462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9463"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ab82e8a5e3ad6b486f95d6da8bf49e9aa" kindref="member">mBackgroundScaledMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="9464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9465"><highlight class="normal"></highlight></codeline>
<codeline lineno="9474"><highlight class="normal"><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*<ref refid="class_q_custom_plot_1adea38bdc660da9412ba69fb939031567" kindref="member">QCustomPlot::plottable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="9475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.size())</highlight></codeline>
<codeline lineno="9477"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.at(index);</highlight></codeline>
<codeline lineno="9479"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9480"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9481"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="9482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9485"><highlight class="normal"></highlight></codeline>
<codeline lineno="9493"><highlight class="normal"><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*<ref refid="class_q_custom_plot_1adea38bdc660da9412ba69fb939031567" kindref="member">QCustomPlot::plottable</ref>()</highlight></codeline>
<codeline lineno="9494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.isEmpty())</highlight></codeline>
<codeline lineno="9496"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.last();</highlight></codeline>
<codeline lineno="9498"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9501"><highlight class="normal"></highlight></codeline>
<codeline lineno="9512"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">QCustomPlot::addPlottable</ref>(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable)</highlight></codeline>
<codeline lineno="9513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.contains(plottable))</highlight></codeline>
<codeline lineno="9515"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9516"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;plottable<sp/>already<sp/>added<sp/>to<sp/>this<sp/>QCustomPlot:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1adea38bdc660da9412ba69fb939031567" kindref="member">plottable</ref>);</highlight></codeline>
<codeline lineno="9517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plottable-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9520"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9521"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;plottable<sp/>not<sp/>created<sp/>with<sp/>this<sp/>QCustomPlot<sp/>as<sp/>parent:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1adea38bdc660da9412ba69fb939031567" kindref="member">plottable</ref>);</highlight></codeline>
<codeline lineno="9522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9524"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9525"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.append(plottable);</highlight></codeline>
<codeline lineno="9526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>possibly<sp/>add<sp/>plottable<sp/>to<sp/>legend:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1aaf3ea6a4cb04d35a149cc9a0cdac3394" kindref="member">mAutoAddPlottableToLegend</ref>)</highlight></codeline>
<codeline lineno="9528"><highlight class="normal"><sp/><sp/><sp/><sp/>plottable-&gt;<ref refid="class_q_c_p_abstract_plottable_1a70f8cabfd808f7d5204b9f18c45c13f5" kindref="member">addToLegend</ref>();</highlight></codeline>
<codeline lineno="9529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>handling<sp/>for<sp/>QCPGraphs<sp/>to<sp/>maintain<sp/>the<sp/>simple<sp/>graph<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*<ref refid="class_q_custom_plot_1a80c40ced2a74eefe9e92de1e82ba2274" kindref="member">graph</ref><sp/>=<sp/>qobject_cast&lt;QCPGraph*&gt;(plottable))</highlight></codeline>
<codeline lineno="9531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.append(<ref refid="class_q_custom_plot_1a80c40ced2a74eefe9e92de1e82ba2274" kindref="member">graph</ref>);</highlight></codeline>
<codeline lineno="9532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!plottable-&gt;<ref refid="class_q_c_p_layerable_1aea67e8c19145e70d68c286a36f6b8300" kindref="member">layer</ref>())<sp/></highlight><highlight class="comment">//<sp/>usually<sp/>the<sp/>layer<sp/>is<sp/>already<sp/>set<sp/>in<sp/>the<sp/>constructor<sp/>of<sp/>the<sp/>plottable<sp/>(via<sp/>QCPLayerable<sp/>constructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9533"><highlight class="normal"><sp/><sp/><sp/><sp/>plottable-&gt;<ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">setLayer</ref>(<ref refid="class_q_custom_plot_1af73057345656cbd1463454982d808b00" kindref="member">currentLayer</ref>());</highlight></codeline>
<codeline lineno="9534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9536"><highlight class="normal"></highlight></codeline>
<codeline lineno="9544"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1af3dafd56884208474f311d6226513ab2" kindref="member">QCustomPlot::removePlottable</ref>(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable)</highlight></codeline>
<codeline lineno="9545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.contains(plottable))</highlight></codeline>
<codeline lineno="9547"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9548"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;plottable<sp/>not<sp/>in<sp/>list:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1adea38bdc660da9412ba69fb939031567" kindref="member">plottable</ref>);</highlight></codeline>
<codeline lineno="9549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9551"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>plottable<sp/>from<sp/>legend:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9553"><highlight class="normal"><sp/><sp/>plottable-&gt;<ref refid="class_q_c_p_abstract_plottable_1aa1f350e510326d012b9a9c9249736c83" kindref="member">removeFromLegend</ref>();</highlight></codeline>
<codeline lineno="9554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>handling<sp/>for<sp/>QCPGraphs<sp/>to<sp/>maintain<sp/>the<sp/>simple<sp/>graph<sp/>interface:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*<ref refid="class_q_custom_plot_1a80c40ced2a74eefe9e92de1e82ba2274" kindref="member">graph</ref><sp/>=<sp/>qobject_cast&lt;QCPGraph*&gt;(plottable))</highlight></codeline>
<codeline lineno="9556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.removeOne(<ref refid="class_q_custom_plot_1a80c40ced2a74eefe9e92de1e82ba2274" kindref="member">graph</ref>);</highlight></codeline>
<codeline lineno="9557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>plottable:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1adea38bdc660da9412ba69fb939031567" kindref="member">plottable</ref>;</highlight></codeline>
<codeline lineno="9559"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.removeOne(plottable);</highlight></codeline>
<codeline lineno="9560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9562"><highlight class="normal"></highlight></codeline>
<codeline lineno="9567"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1af3dafd56884208474f311d6226513ab2" kindref="member">QCustomPlot::removePlottable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="9568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.size())</highlight></codeline>
<codeline lineno="9570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1af3dafd56884208474f311d6226513ab2" kindref="member">removePlottable</ref>(<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>[index]);</highlight></codeline>
<codeline lineno="9571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9572"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9573"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="9574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9577"><highlight class="normal"></highlight></codeline>
<codeline lineno="9585"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a9a409bb3201878adb7ffba1c89c4e004" kindref="member">QCustomPlot::clearPlottables</ref>()</highlight></codeline>
<codeline lineno="9586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.size();</highlight></codeline>
<codeline lineno="9588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=c-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="9589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1af3dafd56884208474f311d6226513ab2" kindref="member">removePlottable</ref>(<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>[i]);</highlight></codeline>
<codeline lineno="9590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="9591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9592"><highlight class="normal"></highlight></codeline>
<codeline lineno="9598"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a2dbfbf15dc38713f9a1c445a3dd2e989" kindref="member">QCustomPlot::plottableCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9599"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.size();</highlight></codeline>
<codeline lineno="9601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9602"><highlight class="normal"></highlight></codeline>
<codeline lineno="9610"><highlight class="normal">QList&lt;QCPAbstractPlottable*&gt;<sp/><ref refid="class_q_custom_plot_1a6721b8c689bb7f2f400987e580508fe8" kindref="member">QCustomPlot::selectedPlottables</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9611"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9612"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="9613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable,<sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>)</highlight></codeline>
<codeline lineno="9614"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plottable-&gt;<ref refid="class_q_c_p_abstract_plottable_1ab901903adcb0e29467d63de72340ab29" kindref="member">selected</ref>())</highlight></codeline>
<codeline lineno="9616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(plottable);</highlight></codeline>
<codeline lineno="9617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9620"><highlight class="normal"></highlight></codeline>
<codeline lineno="9633"><highlight class="normal"><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*<ref refid="class_q_custom_plot_1ac1d1bc6ae4e13616fb02cef6d9e2188e" kindref="member">QCustomPlot::plottableAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9634"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9635"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*resultPlottable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resultDistance<sp/>=<sp/><ref refid="class_q_custom_plot_1abc36e12dd0482117ad810a800c847722" kindref="member">mSelectionTolerance</ref>;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>regard<sp/>clicks<sp/>with<sp/>distances<sp/>smaller<sp/>than<sp/>mSelectionTolerance<sp/>as<sp/>selections,<sp/>so<sp/>initialize<sp/>with<sp/>that<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9637"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable,<sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>)</highlight></codeline>
<codeline lineno="9639"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!plottable-&gt;<ref refid="class_q_c_p_abstract_plottable_1af895574da1ec0d050711b6c9deda296a" kindref="member">selectable</ref>())<sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>have<sp/>also<sp/>passed<sp/>onlySelectable<sp/>to<sp/>the<sp/>selectTest<sp/>function,<sp/>but<sp/>checking<sp/>here<sp/>is<sp/>faster,<sp/>because<sp/>we<sp/>have<sp/>access<sp/>to<sp/>QCPabstractPlottable::selectable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((plottable-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>()<sp/>&amp;<sp/>plottable-&gt;<ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>()).contains(pos.toPoint()))<sp/></highlight><highlight class="comment">//<sp/>only<sp/>consider<sp/>clicks<sp/>inside<sp/>the<sp/>rect<sp/>that<sp/>is<sp/>spanned<sp/>by<sp/>the<sp/>plottable&apos;s<sp/>key/value<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9643"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistance<sp/>=<sp/>plottable-&gt;<ref refid="class_q_c_p_abstract_plottable_1a38efe9641d972992a3d44204bc80ec1d" kindref="member">selectTest</ref>(pos,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistance<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>currentDistance<sp/>&lt;<sp/>resultDistance)</highlight></codeline>
<codeline lineno="9646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultPlottable<sp/>=<sp/><ref refid="class_q_custom_plot_1adea38bdc660da9412ba69fb939031567" kindref="member">plottable</ref>;</highlight></codeline>
<codeline lineno="9648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultDistance<sp/>=<sp/>currentDistance;</highlight></codeline>
<codeline lineno="9649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9652"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultPlottable;</highlight></codeline>
<codeline lineno="9654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9655"><highlight class="normal"></highlight></codeline>
<codeline lineno="9661"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a4fc28914e2ee91aab424b7ce46b6bdf1" kindref="member">QCustomPlot::hasPlottable</ref>(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9662"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.contains(plottable);</highlight></codeline>
<codeline lineno="9664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9665"><highlight class="normal"></highlight></codeline>
<codeline lineno="9674"><highlight class="normal"><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*<ref refid="class_q_custom_plot_1a80c40ced2a74eefe9e92de1e82ba2274" kindref="member">QCustomPlot::graph</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9675"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.size())</highlight></codeline>
<codeline lineno="9677"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.at(index);</highlight></codeline>
<codeline lineno="9679"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9680"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9681"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="9682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9685"><highlight class="normal"></highlight></codeline>
<codeline lineno="9693"><highlight class="normal"><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*<ref refid="class_q_custom_plot_1a80c40ced2a74eefe9e92de1e82ba2274" kindref="member">QCustomPlot::graph</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9694"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.isEmpty())</highlight></codeline>
<codeline lineno="9696"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.last();</highlight></codeline>
<codeline lineno="9698"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9701"><highlight class="normal"></highlight></codeline>
<codeline lineno="9714"><highlight class="normal"><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*<ref refid="class_q_custom_plot_1a6fb2873d35a8a8089842d81a70a54167" kindref="member">QCustomPlot::addGraph</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)</highlight></codeline>
<codeline lineno="9715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis)<sp/>keyAxis<sp/>=<sp/><ref refid="class_q_custom_plot_1a9a79cd0158a4c7f30cbc702f0fd800e4" kindref="member">xAxis</ref>;</highlight></codeline>
<codeline lineno="9717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valueAxis)<sp/>valueAxis<sp/>=<sp/><ref refid="class_q_custom_plot_1af6fea5679725b152c14facd920b19367" kindref="member">yAxis</ref>;</highlight></codeline>
<codeline lineno="9718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)</highlight></codeline>
<codeline lineno="9719"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9720"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>use<sp/>default<sp/>QCustomPlot<sp/>xAxis<sp/>or<sp/>yAxis,<sp/>because<sp/>at<sp/>least<sp/>one<sp/>is<sp/>invalid<sp/>(has<sp/>been<sp/>deleted)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9722"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/>valueAxis-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9724"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9725"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;passed<sp/>keyAxis<sp/>or<sp/>valueAxis<sp/>doesn&apos;t<sp/>have<sp/>this<sp/>QCustomPlot<sp/>as<sp/>parent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9728"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9729"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*newGraph<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref>(keyAxis,<sp/>valueAxis);</highlight></codeline>
<codeline lineno="9730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">addPlottable</ref>(newGraph))</highlight></codeline>
<codeline lineno="9731"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9732"><highlight class="normal"><sp/><sp/><sp/><sp/>newGraph-&gt;<ref refid="class_q_c_p_abstract_plottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" kindref="member">setName</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;Graph<sp/>&quot;</highlight><highlight class="normal">)+QString::number(<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.size()));</highlight></codeline>
<codeline lineno="9733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newGraph;</highlight></codeline>
<codeline lineno="9734"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9735"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>newGraph;</highlight></codeline>
<codeline lineno="9737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9740"><highlight class="normal"></highlight></codeline>
<codeline lineno="9750"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a903561be895fb6528a770d66ac5e6713" kindref="member">QCustomPlot::removeGraph</ref>(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*graph)</highlight></codeline>
<codeline lineno="9751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1af3dafd56884208474f311d6226513ab2" kindref="member">removePlottable</ref>(graph);</highlight></codeline>
<codeline lineno="9753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9754"><highlight class="normal"></highlight></codeline>
<codeline lineno="9759"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a903561be895fb6528a770d66ac5e6713" kindref="member">QCustomPlot::removeGraph</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="9760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.size())</highlight></codeline>
<codeline lineno="9762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a903561be895fb6528a770d66ac5e6713" kindref="member">removeGraph</ref>(<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>[index]);</highlight></codeline>
<codeline lineno="9763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9766"><highlight class="normal"></highlight></codeline>
<codeline lineno="9774"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ab0f3abff2d2f7df3668b5836f39207fa" kindref="member">QCustomPlot::clearGraphs</ref>()</highlight></codeline>
<codeline lineno="9775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.size();</highlight></codeline>
<codeline lineno="9777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=c-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="9778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a903561be895fb6528a770d66ac5e6713" kindref="member">removeGraph</ref>(<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>[i]);</highlight></codeline>
<codeline lineno="9779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="9780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9781"><highlight class="normal"></highlight></codeline>
<codeline lineno="9787"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a7d9b4d19114b2fde60f0233eeb0aa682" kindref="member">QCustomPlot::graphCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9788"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.size();</highlight></codeline>
<codeline lineno="9790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9791"><highlight class="normal"></highlight></codeline>
<codeline lineno="9800"><highlight class="normal">QList&lt;QCPGraph*&gt;<sp/><ref refid="class_q_custom_plot_1ad2a0493bdd01e7aa99a4209ae3a5b67b" kindref="member">QCustomPlot::selectedGraphs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9801"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9802"><highlight class="normal"><sp/><sp/>QList&lt;QCPGraph*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="9803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*<ref refid="class_q_custom_plot_1a80c40ced2a74eefe9e92de1e82ba2274" kindref="member">graph</ref>,<sp/><ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>)</highlight></codeline>
<codeline lineno="9804"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph-&gt;<ref refid="class_q_c_p_abstract_plottable_1ab901903adcb0e29467d63de72340ab29" kindref="member">selected</ref>())</highlight></codeline>
<codeline lineno="9806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(graph);</highlight></codeline>
<codeline lineno="9807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9810"><highlight class="normal"></highlight></codeline>
<codeline lineno="9819"><highlight class="normal"><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*<ref refid="class_q_custom_plot_1a700399eae539798c5baf64a37c7f2135" kindref="member">QCustomPlot::item</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9820"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.size())</highlight></codeline>
<codeline lineno="9822"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.at(index);</highlight></codeline>
<codeline lineno="9824"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9825"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9826"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="9827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9830"><highlight class="normal"></highlight></codeline>
<codeline lineno="9838"><highlight class="normal"><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*<ref refid="class_q_custom_plot_1a700399eae539798c5baf64a37c7f2135" kindref="member">QCustomPlot::item</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9839"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.isEmpty())</highlight></codeline>
<codeline lineno="9841"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.last();</highlight></codeline>
<codeline lineno="9843"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="9845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9846"><highlight class="normal"></highlight></codeline>
<codeline lineno="9855"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1aa500620379262321685cb7a7674cbd2a" kindref="member">QCustomPlot::addItem</ref>(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item)</highlight></codeline>
<codeline lineno="9856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.contains(item)<sp/>&amp;&amp;<sp/>item-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9858"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.append(item);</highlight></codeline>
<codeline lineno="9860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9861"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9862"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9863"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;item<sp/>either<sp/>already<sp/>in<sp/>list<sp/>or<sp/>not<sp/>created<sp/>with<sp/>this<sp/>QCustomPlot<sp/>as<sp/>parent:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1a700399eae539798c5baf64a37c7f2135" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="9864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9867"><highlight class="normal"></highlight></codeline>
<codeline lineno="9875"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ae04446557292551e8fb6e2c106e1848d" kindref="member">QCustomPlot::removeItem</ref>(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item)</highlight></codeline>
<codeline lineno="9876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.contains(item))</highlight></codeline>
<codeline lineno="9878"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a700399eae539798c5baf64a37c7f2135" kindref="member">item</ref>;</highlight></codeline>
<codeline lineno="9880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.removeOne(item);</highlight></codeline>
<codeline lineno="9881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9882"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9883"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9884"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;item<sp/>not<sp/>in<sp/>list:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1a700399eae539798c5baf64a37c7f2135" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="9885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9888"><highlight class="normal"></highlight></codeline>
<codeline lineno="9893"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ae04446557292551e8fb6e2c106e1848d" kindref="member">QCustomPlot::removeItem</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="9894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.size())</highlight></codeline>
<codeline lineno="9896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ae04446557292551e8fb6e2c106e1848d" kindref="member">removeItem</ref>(<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>[index]);</highlight></codeline>
<codeline lineno="9897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9898"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9899"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="9900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9903"><highlight class="normal"></highlight></codeline>
<codeline lineno="9911"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1abdfd07d4f0591d0cf967f85013fd3645" kindref="member">QCustomPlot::clearItems</ref>()</highlight></codeline>
<codeline lineno="9912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.size();</highlight></codeline>
<codeline lineno="9914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=c-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="9915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ae04446557292551e8fb6e2c106e1848d" kindref="member">removeItem</ref>(<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>[i]);</highlight></codeline>
<codeline lineno="9916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="9917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9918"><highlight class="normal"></highlight></codeline>
<codeline lineno="9924"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6fc860e30df17fd5c46056bf6fe29390" kindref="member">QCustomPlot::itemCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9925"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.size();</highlight></codeline>
<codeline lineno="9927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9928"><highlight class="normal"></highlight></codeline>
<codeline lineno="9934"><highlight class="normal">QList&lt;QCPAbstractItem*&gt;<sp/><ref refid="class_q_custom_plot_1a1a48b13547e2d9ac5cd6927516f47a2e" kindref="member">QCustomPlot::selectedItems</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9935"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9936"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractItem*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="9937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item,<sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>)</highlight></codeline>
<codeline lineno="9938"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="class_q_c_p_abstract_item_1a225865808640d8d9a7dd19f09a2e93f2" kindref="member">selected</ref>())</highlight></codeline>
<codeline lineno="9940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(item);</highlight></codeline>
<codeline lineno="9941"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9944"><highlight class="normal"></highlight></codeline>
<codeline lineno="9958"><highlight class="normal"><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*<ref refid="class_q_custom_plot_1a793e4b04e0ede11a733021907368fa83" kindref="member">QCustomPlot::itemAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9959"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9960"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*resultItem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>resultDistance<sp/>=<sp/><ref refid="class_q_custom_plot_1abc36e12dd0482117ad810a800c847722" kindref="member">mSelectionTolerance</ref>;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>regard<sp/>clicks<sp/>with<sp/>distances<sp/>smaller<sp/>than<sp/>mSelectionTolerance<sp/>as<sp/>selections,<sp/>so<sp/>initialize<sp/>with<sp/>that<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9962"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item,<sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>)</highlight></codeline>
<codeline lineno="9964"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="9965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!item-&gt;<ref refid="class_q_c_p_abstract_item_1a9189e752025533e1595eaade0009a3bc" kindref="member">selectable</ref>())<sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>have<sp/>also<sp/>passed<sp/>onlySelectable<sp/>to<sp/>the<sp/>selectTest<sp/>function,<sp/>but<sp/>checking<sp/>here<sp/>is<sp/>faster,<sp/>because<sp/>we<sp/>have<sp/>access<sp/>to<sp/>QCPAbstractItem::selectable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item-&gt;<ref refid="class_q_c_p_abstract_item_1a5b0ea171823033bcb8aee81f4a034871" kindref="member">clipToAxisRect</ref>()<sp/>||<sp/>item-&gt;<ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>().contains(pos.toPoint()))<sp/></highlight><highlight class="comment">//<sp/>only<sp/>consider<sp/>clicks<sp/>inside<sp/>axis<sp/>cliprect<sp/>of<sp/>the<sp/>item<sp/>if<sp/>actually<sp/>clipped<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9968"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistance<sp/>=<sp/>item-&gt;<ref refid="class_q_c_p_abstract_item_1a96d522d10ffc0413b9a366c6f7f0476b" kindref="member">selectTest</ref>(pos,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistance<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>currentDistance<sp/>&lt;<sp/>resultDistance)</highlight></codeline>
<codeline lineno="9971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultItem<sp/>=<sp/><ref refid="class_q_custom_plot_1a700399eae539798c5baf64a37c7f2135" kindref="member">item</ref>;</highlight></codeline>
<codeline lineno="9973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultDistance<sp/>=<sp/>currentDistance;</highlight></codeline>
<codeline lineno="9974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="9977"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultItem;</highlight></codeline>
<codeline lineno="9979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9980"><highlight class="normal"></highlight></codeline>
<codeline lineno="9986"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ab4199c38b03e63a2623c82453fe8add5" kindref="member">QCustomPlot::hasItem</ref>(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*item)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="9987"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.contains(item);</highlight></codeline>
<codeline lineno="9989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9990"><highlight class="normal"></highlight></codeline>
<codeline lineno="9999"><highlight class="normal"><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*<ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">QCustomPlot::layer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10000"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer,<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>)</highlight></codeline>
<codeline lineno="10002"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer-&gt;<ref refid="class_q_c_p_layer_1a96ebd1e436f3813938cb9cd4a59a60be" kindref="member">name</ref>()<sp/>==<sp/>name)</highlight></codeline>
<codeline lineno="10004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>layer;</highlight></codeline>
<codeline lineno="10005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10008"><highlight class="normal"></highlight></codeline>
<codeline lineno="10015"><highlight class="normal"><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*<ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">QCustomPlot::layer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10016"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.size())</highlight></codeline>
<codeline lineno="10018"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.at(index);</highlight></codeline>
<codeline lineno="10020"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10021"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10022"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="10023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10026"><highlight class="normal"></highlight></codeline>
<codeline lineno="10030"><highlight class="normal"><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*<ref refid="class_q_custom_plot_1af73057345656cbd1463454982d808b00" kindref="member">QCustomPlot::currentLayer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10031"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1aa27569c92e74395af10151357d268628" kindref="member">mCurrentLayer</ref>;</highlight></codeline>
<codeline lineno="10033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10034"><highlight class="normal"></highlight></codeline>
<codeline lineno="10045"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a73a6dc47c653bb6f8f030abca5a11852" kindref="member">QCustomPlot::setCurrentLayer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name)</highlight></codeline>
<codeline lineno="10046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*newCurrentLayer<sp/>=<sp/><ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>(name))</highlight></codeline>
<codeline lineno="10048"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a73a6dc47c653bb6f8f030abca5a11852" kindref="member">setCurrentLayer</ref>(newCurrentLayer);</highlight></codeline>
<codeline lineno="10050"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10051"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10052"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layer<sp/>with<sp/>name<sp/>doesn&apos;t<sp/>exist:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="10053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10054"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10056"><highlight class="normal"></highlight></codeline>
<codeline lineno="10065"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a73a6dc47c653bb6f8f030abca5a11852" kindref="member">QCustomPlot::setCurrentLayer</ref>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer)</highlight></codeline>
<codeline lineno="10066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.contains(layer))</highlight></codeline>
<codeline lineno="10068"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10069"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layer<sp/>not<sp/>a<sp/>layer<sp/>of<sp/>this<sp/>QCustomPlot:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>);</highlight></codeline>
<codeline lineno="10070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10071"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10072"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10073"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1aa27569c92e74395af10151357d268628" kindref="member">mCurrentLayer</ref><sp/>=<sp/><ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="10074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10076"><highlight class="normal"></highlight></codeline>
<codeline lineno="10082"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a1b3926884f5bd4bdda1495d8b3c891d0" kindref="member">QCustomPlot::layerCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10083"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.size();</highlight></codeline>
<codeline lineno="10085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10086"><highlight class="normal"></highlight></codeline>
<codeline lineno="10100"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ad5255393df078448bb6ac83fa5db5f52" kindref="member">QCustomPlot::addLayer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*otherLayer,<sp/><ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7" kindref="member">QCustomPlot::LayerInsertMode</ref><sp/>insertMode)</highlight></codeline>
<codeline lineno="10101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!otherLayer)</highlight></codeline>
<codeline lineno="10103"><highlight class="normal"><sp/><sp/><sp/><sp/>otherLayer<sp/>=<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.last();</highlight></codeline>
<codeline lineno="10104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.contains(otherLayer))</highlight></codeline>
<codeline lineno="10105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10106"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;otherLayer<sp/>not<sp/>a<sp/>layer<sp/>of<sp/>this<sp/>QCustomPlot:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(otherLayer);</highlight></codeline>
<codeline lineno="10107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>(name))</highlight></codeline>
<codeline lineno="10110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10111"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>layer<sp/>exists<sp/>already<sp/>with<sp/>the<sp/>name&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="10112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10115"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*newLayer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a5dbf96bf7664c1b6fce49063eeea6eef" kindref="member">QCPLayer</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="10116"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.insert(otherLayer-&gt;<ref refid="class_q_c_p_layer_1ad5d7010829a6b99f326b07d7e37c8c99" kindref="member">index</ref>()<sp/>+<sp/>(insertMode==<ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7a062b0b7825650b432a713c0df6742d41" kindref="member">limAbove</ref><sp/>?<sp/>1:0),<sp/>newLayer);</highlight></codeline>
<codeline lineno="10117"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a3117754df3a5638787a6223c7147970f" kindref="member">updateLayerIndices</ref>();</highlight></codeline>
<codeline lineno="10118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10120"><highlight class="normal"></highlight></codeline>
<codeline lineno="10135"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a40f75e342c5eaab6a86066a42a0e2a94" kindref="member">QCustomPlot::removeLayer</ref>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer)</highlight></codeline>
<codeline lineno="10136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.contains(layer))</highlight></codeline>
<codeline lineno="10138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10139"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layer<sp/>not<sp/>a<sp/>layer<sp/>of<sp/>this<sp/>QCustomPlot:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>);</highlight></codeline>
<codeline lineno="10140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="10143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10144"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>remove<sp/>last<sp/>layer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10147"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>all<sp/>children<sp/>of<sp/>this<sp/>layer<sp/>to<sp/>layer<sp/>below<sp/>(if<sp/>this<sp/>is<sp/>lowest<sp/>layer,<sp/>prepend<sp/>to<sp/>layer<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>removedIndex<sp/>=<sp/>layer-&gt;<ref refid="class_q_c_p_layer_1ad5d7010829a6b99f326b07d7e37c8c99" kindref="member">index</ref>();</highlight></codeline>
<codeline lineno="10150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirstLayer<sp/>=<sp/>removedIndex==0;</highlight></codeline>
<codeline lineno="10151"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*targetLayer<sp/>=<sp/>isFirstLayer<sp/>?<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.at(removedIndex+1)<sp/>:<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.at(removedIndex-1);</highlight></codeline>
<codeline lineno="10152"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayerable*&gt;<sp/>children<sp/>=<sp/>layer-&gt;<ref refid="class_q_c_p_layer_1a94c2f0100e48cefad2de8fe0fbb03c27" kindref="member">children</ref>();</highlight></codeline>
<codeline lineno="10153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFirstLayer)<sp/></highlight><highlight class="comment">//<sp/>prepend<sp/>in<sp/>reverse<sp/>order<sp/>(so<sp/>order<sp/>relative<sp/>to<sp/>each<sp/>other<sp/>stays<sp/>the<sp/>same)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=children.size()-1;<sp/>i&gt;=0;<sp/>--i)</highlight></codeline>
<codeline lineno="10156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>children.at(i)-&gt;moveToLayer(targetLayer,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10157"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>normally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10158"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;children.size();<sp/>++i)</highlight></codeline>
<codeline lineno="10160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>children.at(i)-&gt;moveToLayer(targetLayer,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>removed<sp/>layer<sp/>is<sp/>current<sp/>layer,<sp/>change<sp/>current<sp/>layer<sp/>to<sp/>layer<sp/>below/above:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layer<sp/>==<sp/><ref refid="class_q_custom_plot_1aa27569c92e74395af10151357d268628" kindref="member">mCurrentLayer</ref>)</highlight></codeline>
<codeline lineno="10164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a73a6dc47c653bb6f8f030abca5a11852" kindref="member">setCurrentLayer</ref>(targetLayer);</highlight></codeline>
<codeline lineno="10165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>layer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="10167"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.removeOne(layer);</highlight></codeline>
<codeline lineno="10168"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a3117754df3a5638787a6223c7147970f" kindref="member">updateLayerIndices</ref>();</highlight></codeline>
<codeline lineno="10169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10171"><highlight class="normal"></highlight></codeline>
<codeline lineno="10181"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ae896140beff19424e9e9e02d6e331104" kindref="member">QCustomPlot::moveLayer</ref>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer,<sp/><ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*otherLayer,<sp/><ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7" kindref="member">QCustomPlot::LayerInsertMode</ref><sp/>insertMode)</highlight></codeline>
<codeline lineno="10182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.contains(layer))</highlight></codeline>
<codeline lineno="10184"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10185"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;layer<sp/>not<sp/>a<sp/>layer<sp/>of<sp/>this<sp/>QCustomPlot:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_custom_plot_1aac492da01782820454e9136a8db28182" kindref="member">layer</ref>);</highlight></codeline>
<codeline lineno="10186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.contains(otherLayer))</highlight></codeline>
<codeline lineno="10189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10190"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;otherLayer<sp/>not<sp/>a<sp/>layer<sp/>of<sp/>this<sp/>QCustomPlot:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(otherLayer);</highlight></codeline>
<codeline lineno="10191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10193"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10194"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.move(layer-&gt;<ref refid="class_q_c_p_layer_1ad5d7010829a6b99f326b07d7e37c8c99" kindref="member">index</ref>(),<sp/>otherLayer-&gt;<ref refid="class_q_c_p_layer_1ad5d7010829a6b99f326b07d7e37c8c99" kindref="member">index</ref>()<sp/>+<sp/>(insertMode==<ref refid="class_q_custom_plot_1a75a8afbe6ef333b1f3d47abb25b9add7a062b0b7825650b432a713c0df6742d41" kindref="member">limAbove</ref><sp/>?<sp/>1:0));</highlight></codeline>
<codeline lineno="10195"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a3117754df3a5638787a6223c7147970f" kindref="member">updateLayerIndices</ref>();</highlight></codeline>
<codeline lineno="10196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10198"><highlight class="normal"></highlight></codeline>
<codeline lineno="10208"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a340fa24b1607e445cedda9685670ead3" kindref="member">QCustomPlot::axisRectCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10209"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1afd67094aaeccbc5719761348b2d8c891" kindref="member">axisRects</ref>().size();</highlight></codeline>
<codeline lineno="10211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10212"><highlight class="normal"></highlight></codeline>
<codeline lineno="10222"><highlight class="normal"><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*<ref refid="class_q_custom_plot_1a4a37a1add5fe63060ac518cf0a4c4050" kindref="member">QCustomPlot::axisRect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10223"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QCPAxisRect*&gt;<sp/>rectList<sp/>=<sp/><ref refid="class_q_custom_plot_1afd67094aaeccbc5719761348b2d8c891" kindref="member">axisRects</ref>();</highlight></codeline>
<codeline lineno="10225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>rectList.size())</highlight></codeline>
<codeline lineno="10226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rectList.at(index);</highlight></codeline>
<codeline lineno="10228"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10230"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>axis<sp/>rect<sp/>index&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="10231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="10232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10234"><highlight class="normal"></highlight></codeline>
<codeline lineno="10240"><highlight class="normal">QList&lt;QCPAxisRect*&gt;<sp/><ref refid="class_q_custom_plot_1afd67094aaeccbc5719761348b2d8c891" kindref="member">QCustomPlot::axisRects</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10241"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10242"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxisRect*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="10243"><highlight class="normal"><sp/><sp/>QStack&lt;QCPLayoutElement*&gt;<sp/>elementStack;</highlight></codeline>
<codeline lineno="10244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>)</highlight></codeline>
<codeline lineno="10245"><highlight class="normal"><sp/><sp/><sp/><sp/>elementStack.push(<ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>);</highlight></codeline>
<codeline lineno="10246"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!elementStack.isEmpty())</highlight></codeline>
<codeline lineno="10248"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*element,<sp/>elementStack.pop()-&gt;<ref refid="class_q_c_p_layout_element_1a311d60d78e62ef8eaaedb1b6ceb9e788" kindref="member">elements</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="10250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element)</highlight></codeline>
<codeline lineno="10252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementStack.push(element);</highlight></codeline>
<codeline lineno="10254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*ar<sp/>=<sp/>qobject_cast&lt;QCPAxisRect*&gt;(element))</highlight></codeline>
<codeline lineno="10255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(ar);</highlight></codeline>
<codeline lineno="10256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10259"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10262"><highlight class="normal"></highlight></codeline>
<codeline lineno="10272"><highlight class="normal">QCPLayoutElement<sp/>*<ref refid="class_q_custom_plot_1a840458186d4483c8a42d6a399448d38f" kindref="member">QCustomPlot::layoutElementAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10273"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10274"><highlight class="normal"><sp/><sp/>QCPLayoutElement<sp/>*currentElement<sp/>=<sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>;</highlight></codeline>
<codeline lineno="10275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>searchSubElements<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(searchSubElements<sp/>&amp;&amp;<sp/>currentElement)</highlight></codeline>
<codeline lineno="10277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10278"><highlight class="normal"><sp/><sp/><sp/><sp/>searchSubElements<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*subElement,<sp/>currentElement-&gt;<ref refid="class_q_c_p_layout_element_1a311d60d78e62ef8eaaedb1b6ceb9e788" kindref="member">elements</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="10280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subElement<sp/>&amp;&amp;<sp/>subElement-&gt;<ref refid="class_q_c_p_layerable_1a30809f7455e9794bca7b6c737622fa63" kindref="member">realVisibility</ref>()<sp/>&amp;&amp;<sp/>subElement-&gt;<ref refid="class_q_c_p_layout_element_1a9fcf5d0ea19f2c23b2b528bce2c6f095" kindref="member">selectTest</ref>(pos,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="10282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentElement<sp/>=<sp/>subElement;</highlight></codeline>
<codeline lineno="10284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searchSubElements<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentElement;</highlight></codeline>
<codeline lineno="10290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10291"><highlight class="normal"></highlight></codeline>
<codeline lineno="10299"><highlight class="normal">QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_custom_plot_1aa6baf867e8beb96ed5bd471f83ece903" kindref="member">QCustomPlot::selectedAxes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10301"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>result,<sp/>allAxes;</highlight></codeline>
<codeline lineno="10302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*rect,<sp/><ref refid="class_q_custom_plot_1afd67094aaeccbc5719761348b2d8c891" kindref="member">axisRects</ref>())</highlight></codeline>
<codeline lineno="10303"><highlight class="normal"><sp/><sp/><sp/><sp/>allAxes<sp/>&lt;&lt;<sp/>rect-&gt;<ref refid="class_q_c_p_axis_rect_1a66654d51ca611ef036ded36250cd2518" kindref="member">axes</ref>();</highlight></codeline>
<codeline lineno="10304"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis,<sp/>allAxes)</highlight></codeline>
<codeline lineno="10306"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axis-&gt;<ref refid="class_q_c_p_axis_1a08323248a1cba4750ef07ceea159e0b3" kindref="member">selectedParts</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fae0df8123a5528d5ccf87cb7794f971ea" kindref="member">QCPAxis::spNone</ref>)</highlight></codeline>
<codeline lineno="10308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(axis);</highlight></codeline>
<codeline lineno="10309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10310"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10313"><highlight class="normal"></highlight></codeline>
<codeline lineno="10321"><highlight class="normal">QList&lt;QCPLegend*&gt;<sp/><ref refid="class_q_custom_plot_1a1ea6297300c3e2770e65f95836411755" kindref="member">QCustomPlot::selectedLegends</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10322"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10323"><highlight class="normal"><sp/><sp/>QList&lt;QCPLegend*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="10324"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10325"><highlight class="normal"><sp/><sp/>QStack&lt;QCPLayoutElement*&gt;<sp/>elementStack;</highlight></codeline>
<codeline lineno="10326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>)</highlight></codeline>
<codeline lineno="10327"><highlight class="normal"><sp/><sp/><sp/><sp/>elementStack.push(<ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>);</highlight></codeline>
<codeline lineno="10328"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!elementStack.isEmpty())</highlight></codeline>
<codeline lineno="10330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*subElement,<sp/>elementStack.pop()-&gt;<ref refid="class_q_c_p_layout_element_1a311d60d78e62ef8eaaedb1b6ceb9e788" kindref="member">elements</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="10332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subElement)</highlight></codeline>
<codeline lineno="10334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementStack.push(subElement);</highlight></codeline>
<codeline lineno="10336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*leg<sp/>=<sp/>qobject_cast&lt;QCPLegend*&gt;(subElement))</highlight></codeline>
<codeline lineno="10337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leg-&gt;selectedParts()<sp/>!=<sp/><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a378201c07d500af7126e3ec91652eed7" kindref="member">QCPLegend::spNone</ref>)</highlight></codeline>
<codeline lineno="10339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(leg);</highlight></codeline>
<codeline lineno="10340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10344"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10347"><highlight class="normal"></highlight></codeline>
<codeline lineno="10357"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a9d4808ab925b003054085246c92a257c" kindref="member">QCustomPlot::deselectAll</ref>()</highlight></codeline>
<codeline lineno="10358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer,<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>)</highlight></codeline>
<codeline lineno="10360"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*layerable,<sp/>layer-&gt;<ref refid="class_q_c_p_layer_1a94c2f0100e48cefad2de8fe0fbb03c27" kindref="member">children</ref>())</highlight></codeline>
<codeline lineno="10362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layerable-&gt;<ref refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee" kindref="member">deselectEvent</ref>(0);</highlight></codeline>
<codeline lineno="10363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10365"><highlight class="normal"></highlight></codeline>
<codeline lineno="10379"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a606fd384b2a637ce2c24899bcbde77d6" kindref="member">QCustomPlot::replot</ref>(<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39" kindref="member">QCustomPlot::RefreshPriority</ref><sp/>refreshPriority)</highlight></codeline>
<codeline lineno="10380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1ab30daeca6612c3948afd368dce5f1c39" kindref="member">mReplotting</ref>)<sp/></highlight><highlight class="comment">//<sp/>incase<sp/>signals<sp/>loop<sp/>back<sp/>to<sp/>replot<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10383"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ab30daeca6612c3948afd368dce5f1c39" kindref="member">mReplotting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10384"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a0cd30e29b73efd6afe096e44bc5956f5" kindref="member">beforeReplot</ref>();</highlight></codeline>
<codeline lineno="10385"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10386"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a753630df96e0672098d9e88bd41d1913" kindref="member">mPaintBuffer</ref>.fill(<ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>==<sp/>Qt::SolidPattern<sp/>?<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.color()<sp/>:<sp/>Qt::transparent);</highlight></codeline>
<codeline lineno="10387"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>painter;</highlight></codeline>
<codeline lineno="10388"><highlight class="normal"><sp/><sp/>painter.<ref refid="class_q_c_p_painter_1a0a41146ccd619dceab6e25ec7b46b044" kindref="member">begin</ref>(&amp;<ref refid="class_q_custom_plot_1a753630df96e0672098d9e88bd41d1913" kindref="member">mPaintBuffer</ref>);</highlight></codeline>
<codeline lineno="10389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(painter.isActive())</highlight></codeline>
<codeline lineno="10390"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10391"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setRenderHint(QPainter::HighQualityAntialiasing);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>Antialiasing<sp/>look<sp/>good<sp/>if<sp/>using<sp/>the<sp/>OpenGL<sp/>graphicssystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>!=<sp/>Qt::SolidPattern<sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush)</highlight></codeline>
<codeline lineno="10393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.fillRect(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>,<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>);</highlight></codeline>
<codeline lineno="10394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ad7a7d878bf050f101a43008e7d8fdb52" kindref="member">draw</ref>(&amp;painter);</highlight></codeline>
<codeline lineno="10395"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="10396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((refreshPriority<sp/>==<sp/><ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39adfa1f2387617168d9299f4c8ad15b332" kindref="member">rpHint</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1aa184197a6101a9cc5807469e1d006c9e" kindref="member">mPlottingHints</ref>.testFlag(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa3090dafa0e0f9a28c579c79d6c2d283" kindref="member">QCP::phForceRepaint</ref>))<sp/>||<sp/>refreshPriority==<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39a0d4831572370d871f2b7cb88806bac59" kindref="member">rpImmediate</ref>)</highlight></codeline>
<codeline lineno="10397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>repaint();</highlight></codeline>
<codeline lineno="10398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>update();</highlight></codeline>
<codeline lineno="10400"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>might<sp/>happen<sp/>if<sp/>QCustomPlot<sp/>has<sp/>width<sp/>or<sp/>height<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10401"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>activate<sp/>painter<sp/>on<sp/>buffer.<sp/>This<sp/>usually<sp/>happens<sp/>because<sp/>QCustomPlot<sp/>has<sp/>width<sp/>or<sp/>height<sp/>zero.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10402"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10403"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a6f4fa624af060bc5919c5f266cf426a0" kindref="member">afterReplot</ref>();</highlight></codeline>
<codeline lineno="10404"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ab30daeca6612c3948afd368dce5f1c39" kindref="member">mReplotting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10406"><highlight class="normal"></highlight></codeline>
<codeline lineno="10415"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ad86528f2cee6c7e446dea4a6e8839935" kindref="member">QCustomPlot::rescaleAxes</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisiblePlottables)</highlight></codeline>
<codeline lineno="10416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10417"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>allAxes;</highlight></codeline>
<codeline lineno="10418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref><sp/>*rect,<sp/><ref refid="class_q_custom_plot_1afd67094aaeccbc5719761348b2d8c891" kindref="member">axisRects</ref>())</highlight></codeline>
<codeline lineno="10419"><highlight class="normal"><sp/><sp/><sp/><sp/>allAxes<sp/>&lt;&lt;<sp/>rect-&gt;<ref refid="class_q_c_p_axis_rect_1a66654d51ca611ef036ded36250cd2518" kindref="member">axes</ref>();</highlight></codeline>
<codeline lineno="10420"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis,<sp/>allAxes)</highlight></codeline>
<codeline lineno="10422"><highlight class="normal"><sp/><sp/><sp/><sp/>axis-&gt;<ref refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" kindref="member">rescale</ref>(onlyVisiblePlottables);</highlight></codeline>
<codeline lineno="10423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10424"><highlight class="normal"></highlight></codeline>
<codeline lineno="10462"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a632da44c6d94ea8b271eb483b08b5114" kindref="member">QCustomPlot::savePdf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noCosmeticPen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pdfCreator,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;pdfTitle)</highlight></codeline>
<codeline lineno="10463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10465"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QT_NO_PRINTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10466"><highlight class="normal"><sp/><sp/>Q_UNUSED(fileName)</highlight></codeline>
<codeline lineno="10467"><highlight class="normal"><sp/><sp/>Q_UNUSED(noCosmeticPen)</highlight></codeline>
<codeline lineno="10468"><highlight class="normal"><sp/><sp/>Q_UNUSED(width)</highlight></codeline>
<codeline lineno="10469"><highlight class="normal"><sp/><sp/>Q_UNUSED(height)</highlight></codeline>
<codeline lineno="10470"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/>&quot;Qt<sp/>was<sp/>built<sp/>without<sp/>printer<sp/>support<sp/>(QT_NO_PRINTER).<sp/>PDF<sp/>not<sp/>created.&quot;;</highlight></codeline>
<codeline lineno="10471"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newWidth,<sp/>newHeight;</highlight></codeline>
<codeline lineno="10473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>==<sp/>0<sp/>||<sp/>height<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="10474"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10475"><highlight class="normal"><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>this-&gt;width();</highlight></codeline>
<codeline lineno="10476"><highlight class="normal"><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>this-&gt;height();</highlight></codeline>
<codeline lineno="10477"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10478"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10479"><highlight class="normal"><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="10480"><highlight class="normal"><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="10481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10483"><highlight class="normal"><sp/><sp/>QPrinter<sp/>printer(QPrinter::ScreenResolution);</highlight></codeline>
<codeline lineno="10484"><highlight class="normal"><sp/><sp/>printer.setOutputFileName(fileName);</highlight></codeline>
<codeline lineno="10485"><highlight class="normal"><sp/><sp/>printer.setOutputFormat(QPrinter::PdfFormat);</highlight></codeline>
<codeline lineno="10486"><highlight class="normal"><sp/><sp/>printer.setColorMode(QPrinter::Color);</highlight></codeline>
<codeline lineno="10487"><highlight class="normal"><sp/><sp/>printer.printEngine()-&gt;setProperty(QPrintEngine::PPK_Creator,<sp/>pdfCreator);</highlight></codeline>
<codeline lineno="10488"><highlight class="normal"><sp/><sp/>printer.printEngine()-&gt;setProperty(QPrintEngine::PPK_DocumentName,<sp/>pdfTitle);</highlight></codeline>
<codeline lineno="10489"><highlight class="normal"><sp/><sp/>QRect<sp/>oldViewport<sp/>=<sp/><ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>();</highlight></codeline>
<codeline lineno="10490"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>(QRect(0,<sp/>0,<sp/>newWidth,<sp/>newHeight));</highlight></codeline>
<codeline lineno="10491"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QT_VERSION<sp/>&lt;<sp/>QT_VERSION_CHECK(5,<sp/>3,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10492"><highlight class="normal"><sp/><sp/>printer.setFullPage(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10493"><highlight class="normal"><sp/><sp/>printer.setPaperSize(<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().size(),<sp/>QPrinter::DevicePixel);</highlight></codeline>
<codeline lineno="10494"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10495"><highlight class="normal"><sp/><sp/>QPageLayout<sp/>pageLayout;</highlight></codeline>
<codeline lineno="10496"><highlight class="normal"><sp/><sp/>pageLayout.setMode(QPageLayout::FullPageMode);</highlight></codeline>
<codeline lineno="10497"><highlight class="normal"><sp/><sp/>pageLayout.setOrientation(QPageLayout::Portrait);</highlight></codeline>
<codeline lineno="10498"><highlight class="normal"><sp/><sp/>pageLayout.setMargins(QMarginsF(0,<sp/>0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="10499"><highlight class="normal"><sp/><sp/>pageLayout.setPageSize(QPageSize(<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>().size(),<sp/>QPageSize::Point,<sp/>QString(),<sp/>QPageSize::ExactMatch));</highlight></codeline>
<codeline lineno="10500"><highlight class="normal"><sp/><sp/>printer.setPageLayout(pageLayout);</highlight></codeline>
<codeline lineno="10501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10502"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>printpainter;</highlight></codeline>
<codeline lineno="10503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printpainter.<ref refid="class_q_c_p_painter_1a0a41146ccd619dceab6e25ec7b46b044" kindref="member">begin</ref>(&amp;printer))</highlight></codeline>
<codeline lineno="10504"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10505"><highlight class="normal"><sp/><sp/><sp/><sp/>printpainter.<ref refid="class_q_c_p_painter_1af6b1f7d2bbc548b10aa55d8b6ad49577" kindref="member">setMode</ref>(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">QCPPainter::pmVectorized</ref>);</highlight></codeline>
<codeline lineno="10506"><highlight class="normal"><sp/><sp/><sp/><sp/>printpainter.<ref refid="class_q_c_p_painter_1af6b1f7d2bbc548b10aa55d8b6ad49577" kindref="member">setMode</ref>(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">QCPPainter::pmNoCaching</ref>);</highlight></codeline>
<codeline lineno="10507"><highlight class="normal"><sp/><sp/><sp/><sp/>printpainter.<ref refid="class_q_c_p_painter_1af6b1f7d2bbc548b10aa55d8b6ad49577" kindref="member">setMode</ref>(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" kindref="member">QCPPainter::pmNonCosmetic</ref>,<sp/>noCosmeticPen);</highlight></codeline>
<codeline lineno="10508"><highlight class="normal"><sp/><sp/><sp/><sp/>printpainter.setWindow(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>);</highlight></codeline>
<codeline lineno="10509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="10510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.color()<sp/>!=<sp/>Qt::white<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="10511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.color()<sp/>!=<sp/>Qt::transparent<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="10512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.color().alpha()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>draw<sp/>pdf<sp/>background<sp/>color<sp/>if<sp/>not<sp/>white/transparent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printpainter.fillRect(<ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>(),<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>);</highlight></codeline>
<codeline lineno="10514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ad7a7d878bf050f101a43008e7d8fdb52" kindref="member">draw</ref>(&amp;printpainter);</highlight></codeline>
<codeline lineno="10515"><highlight class="normal"><sp/><sp/><sp/><sp/>printpainter.end();</highlight></codeline>
<codeline lineno="10516"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10518"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>(oldViewport);</highlight></codeline>
<codeline lineno="10519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QT_NO_PRINTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="10521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10522"><highlight class="normal"></highlight></codeline>
<codeline lineno="10560"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a7636261aff1f6d25c9da749ece3fc8b8" kindref="member">QCustomPlot::savePng</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality)</highlight></codeline>
<codeline lineno="10561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ab528b84cf92baabe29b1d0ef2f77c93e" kindref="member">saveRastered</ref>(fileName,<sp/>width,<sp/>height,<sp/>scale,<sp/></highlight><highlight class="stringliteral">&quot;PNG&quot;</highlight><highlight class="normal">,<sp/>quality);</highlight></codeline>
<codeline lineno="10563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10564"><highlight class="normal"></highlight></codeline>
<codeline lineno="10599"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a490c722092d1771e8ce4a7a73dfd84ab" kindref="member">QCustomPlot::saveJpg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality)</highlight></codeline>
<codeline lineno="10600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ab528b84cf92baabe29b1d0ef2f77c93e" kindref="member">saveRastered</ref>(fileName,<sp/>width,<sp/>height,<sp/>scale,<sp/></highlight><highlight class="stringliteral">&quot;JPG&quot;</highlight><highlight class="normal">,<sp/>quality);</highlight></codeline>
<codeline lineno="10602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10603"><highlight class="normal"></highlight></codeline>
<codeline lineno="10635"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a6629d9e8e6da4bf18055ee0257fdce9a" kindref="member">QCustomPlot::saveBmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="10636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ab528b84cf92baabe29b1d0ef2f77c93e" kindref="member">saveRastered</ref>(fileName,<sp/>width,<sp/>height,<sp/>scale,<sp/></highlight><highlight class="stringliteral">&quot;BMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10639"><highlight class="normal"></highlight></codeline>
<codeline lineno="10648"><highlight class="normal">QSize<sp/><ref refid="class_q_custom_plot_1a4904f06d831afae29cd5d10e889388c3" kindref="member">QCustomPlot::minimumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10649"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>-&gt;<ref refid="class_q_c_p_layout_grid_1a67aae235fb4dd9a479aafe07462ef9ee" kindref="member">minimumSizeHint</ref>();</highlight></codeline>
<codeline lineno="10651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10652"><highlight class="normal"></highlight></codeline>
<codeline lineno="10658"><highlight class="normal">QSize<sp/><ref refid="class_q_custom_plot_1a21d84d299c3651ec36d11a7826274a3c" kindref="member">QCustomPlot::sizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10659"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>-&gt;<ref refid="class_q_c_p_layout_grid_1a67aae235fb4dd9a479aafe07462ef9ee" kindref="member">minimumSizeHint</ref>();</highlight></codeline>
<codeline lineno="10661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10662"><highlight class="normal"></highlight></codeline>
<codeline lineno="10668"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a2bbc3b1c24bfcc8a7cc1f3008cdd9b73" kindref="member">QCustomPlot::paintEvent</ref>(QPaintEvent<sp/>*event)</highlight></codeline>
<codeline lineno="10669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10670"><highlight class="normal"><sp/><sp/>Q_UNUSED(event);</highlight></codeline>
<codeline lineno="10671"><highlight class="normal"><sp/><sp/>QPainter<sp/>painter(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10672"><highlight class="normal"><sp/><sp/>painter.drawPixmap(0,<sp/>0,<sp/><ref refid="class_q_custom_plot_1a753630df96e0672098d9e88bd41d1913" kindref="member">mPaintBuffer</ref>);</highlight></codeline>
<codeline lineno="10673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10674"><highlight class="normal"></highlight></codeline>
<codeline lineno="10681"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a13e05523a40c3f08875df5cde85cf0d9" kindref="member">QCustomPlot::resizeEvent</ref>(QResizeEvent<sp/>*event)</highlight></codeline>
<codeline lineno="10682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>and<sp/>repaint<sp/>the<sp/>buffer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10684"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a753630df96e0672098d9e88bd41d1913" kindref="member">mPaintBuffer</ref><sp/>=<sp/>QPixmap(event-&gt;size());</highlight></codeline>
<codeline lineno="10685"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>(rect());</highlight></codeline>
<codeline lineno="10686"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a606fd384b2a637ce2c24899bcbde77d6" kindref="member">replot</ref>(<ref refid="class_q_custom_plot_1a45d61392d13042e712a956d27762aa39aaaae083a19bc668597bf0f86e000f798" kindref="member">rpQueued</ref>);<sp/></highlight><highlight class="comment">//<sp/>queued<sp/>update<sp/>is<sp/>important<sp/>here,<sp/>to<sp/>prevent<sp/>painting<sp/>issues<sp/>in<sp/>some<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10688"><highlight class="normal"></highlight></codeline>
<codeline lineno="10698"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a77591913a5b543bdc465dd5e08325a49" kindref="member">QCustomPlot::mouseDoubleClickEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="10699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10700"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a9b232142c64fcf273a953ee08e5b90e9" kindref="member">mouseDoubleClick</ref>(event);</highlight></codeline>
<codeline lineno="10701"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10702"><highlight class="normal"><sp/><sp/>QVariant<sp/>details;</highlight></codeline>
<codeline lineno="10703"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*clickedLayerable<sp/>=<sp/><ref refid="class_q_custom_plot_1a3fffd1d8364f657482ae985e0b5aa028" kindref="member">layerableAt</ref>(event-&gt;pos(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;details);</highlight></codeline>
<codeline lineno="10704"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10705"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>emit<sp/>specialized<sp/>object<sp/>double<sp/>click<sp/>signals:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*ap<sp/>=<sp/>qobject_cast&lt;QCPAbstractPlottable*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10707"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1af2e6f1cea923dae437681d01ce7d0c31" kindref="member">plottableDoubleClick</ref>(ap,<sp/>event);</highlight></codeline>
<codeline lineno="10708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*ax<sp/>=<sp/>qobject_cast&lt;QCPAxis*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10709"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a6df35357460181a72da3e93d600f5256" kindref="member">axisDoubleClick</ref>(ax,<sp/>details.value&lt;<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">QCPAxis::SelectablePart</ref>&gt;(),<sp/>event);</highlight></codeline>
<codeline lineno="10710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*ai<sp/>=<sp/>qobject_cast&lt;QCPAbstractItem*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10711"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1ac83aa9f5a3e9bb3efc9cdc763dcd42a6" kindref="member">itemDoubleClick</ref>(ai,<sp/>event);</highlight></codeline>
<codeline lineno="10712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*lg<sp/>=<sp/>qobject_cast&lt;QCPLegend*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10713"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a0250f835c044521df1619b132288bca7" kindref="member">legendDoubleClick</ref>(lg,<sp/>0,<sp/>event);</highlight></codeline>
<codeline lineno="10714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*li<sp/>=<sp/>qobject_cast&lt;QCPAbstractLegendItem*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10715"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a0250f835c044521df1619b132288bca7" kindref="member">legendDoubleClick</ref>(li-&gt;parentLegend(),<sp/>li,<sp/>event);</highlight></codeline>
<codeline lineno="10716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plot_title" kindref="compound">QCPPlotTitle</ref><sp/>*pt<sp/>=<sp/>qobject_cast&lt;QCPPlotTitle*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10717"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1ad51d65f6abf5edfaeef6e0519a4c1a2f" kindref="member">titleDoubleClick</ref>(event,<sp/>pt);</highlight></codeline>
<codeline lineno="10718"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>double<sp/>click<sp/>event<sp/>of<sp/>affected<sp/>layout<sp/>element:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*el<sp/>=<sp/><ref refid="class_q_custom_plot_1a840458186d4483c8a42d6a399448d38f" kindref="member">layoutElementAt</ref>(event-&gt;pos()))</highlight></codeline>
<codeline lineno="10721"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layout_element_1aa8fef6486cb6ceb7c82cbdd50bc32ee9" kindref="member">mouseDoubleClickEvent</ref>(event);</highlight></codeline>
<codeline lineno="10722"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>release<sp/>event<sp/>of<sp/>affected<sp/>layout<sp/>element<sp/>(as<sp/>in<sp/>mouseReleaseEvent,<sp/>since<sp/>the<sp/>mouseDoubleClick<sp/>replaces<sp/>the<sp/>second<sp/>release<sp/>event<sp/>in<sp/>double<sp/>click<sp/>case):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>)</highlight></codeline>
<codeline lineno="10725"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>-&gt;mouseReleaseEvent(event);</highlight></codeline>
<codeline lineno="10727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10729"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//QWidget::mouseDoubleClickEvent(event);<sp/>don&apos;t<sp/>call<sp/>base<sp/>class<sp/>implementation<sp/>because<sp/>it<sp/>would<sp/>just<sp/>cause<sp/>a<sp/>mousePress/ReleaseEvent,<sp/>which<sp/>we<sp/>don&apos;t<sp/>want.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10732"><highlight class="normal"></highlight></codeline>
<codeline lineno="10740"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1abce84fa2c71e47b9295d67e8fce84bb4" kindref="member">QCustomPlot::mousePressEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="10741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10742"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1aca75bf9afb5dd19349c375de2a87a051" kindref="member">mousePress</ref>(event);</highlight></codeline>
<codeline lineno="10743"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ac57090da95056ae4dd67be67adfa85bd" kindref="member">mMousePressPos</ref><sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;pos();<sp/></highlight><highlight class="comment">//<sp/>need<sp/>this<sp/>to<sp/>determine<sp/>in<sp/>releaseEvent<sp/>whether<sp/>it<sp/>was<sp/>a<sp/>click<sp/>(no<sp/>position<sp/>change<sp/>between<sp/>press<sp/>and<sp/>release)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10744"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10745"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>event<sp/>of<sp/>affected<sp/>layout<sp/>element:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10746"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref><sp/>=<sp/><ref refid="class_q_custom_plot_1a840458186d4483c8a42d6a399448d38f" kindref="member">layoutElementAt</ref>(event-&gt;pos());</highlight></codeline>
<codeline lineno="10747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>)</highlight></codeline>
<codeline lineno="10748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>-&gt;mousePressEvent(event);</highlight></codeline>
<codeline lineno="10749"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10750"><highlight class="normal"><sp/><sp/>QWidget::mousePressEvent(event);</highlight></codeline>
<codeline lineno="10751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10752"><highlight class="normal"></highlight></codeline>
<codeline lineno="10762"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ac64727a4f442770f6e5e6be2d0530843" kindref="member">QCustomPlot::mouseMoveEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="10763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10764"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a742ca4f94688bed2a685fd8a56ce5704" kindref="member">mouseMove</ref>(event);</highlight></codeline>
<codeline lineno="10765"><highlight class="normal"></highlight></codeline>
<codeline lineno="10766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>event<sp/>of<sp/>affected<sp/>layout<sp/>element:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>)</highlight></codeline>
<codeline lineno="10768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>-&gt;mouseMoveEvent(event);</highlight></codeline>
<codeline lineno="10769"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10770"><highlight class="normal"><sp/><sp/>QWidget::mouseMoveEvent(event);</highlight></codeline>
<codeline lineno="10771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10772"><highlight class="normal"></highlight></codeline>
<codeline lineno="10787"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a724e97d2e8c03e68adac5f4b6164a1b3" kindref="member">QCustomPlot::mouseReleaseEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="10788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10789"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1ac8dc0ee6bb98e923c00b4ebafbe6134d" kindref="member">mouseRelease</ref>(event);</highlight></codeline>
<codeline lineno="10790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doReplot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10791"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_custom_plot_1ac57090da95056ae4dd67be67adfa85bd" kindref="member">mMousePressPos</ref>-event-&gt;pos()).manhattanLength()<sp/>&lt;<sp/>5)<sp/></highlight><highlight class="comment">//<sp/>determine<sp/>whether<sp/>it<sp/>was<sp/>a<sp/>click<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10793"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;button()<sp/>==<sp/>Qt::LeftButton)</highlight></codeline>
<codeline lineno="10795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>selection<sp/>mechanism:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVariant<sp/>details;</highlight></codeline>
<codeline lineno="10798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*clickedLayerable<sp/>=<sp/><ref refid="class_q_custom_plot_1a3fffd1d8364f657482ae985e0b5aa028" kindref="member">layerableAt</ref>(event-&gt;pos(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;details);</highlight></codeline>
<codeline lineno="10799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionStateChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive<sp/>=<sp/><ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref>.testFlag(<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037aef673112c5067c3cf4cfddb62da7265d" kindref="member">QCP::iMultiSelect</ref>)<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;modifiers().testFlag(<ref refid="class_q_custom_plot_1a0e97e701c5671e7e463d2ce0211d0f8a" kindref="member">mMultiSelectModifier</ref>);</highlight></codeline>
<codeline lineno="10801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deselect<sp/>all<sp/>other<sp/>layerables<sp/>if<sp/>not<sp/>additive<sp/>selection:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!additive)</highlight></codeline>
<codeline lineno="10803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer,<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>)</highlight></codeline>
<codeline lineno="10805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*layerable,<sp/>layer-&gt;<ref refid="class_q_c_p_layer_1a94c2f0100e48cefad2de8fe0fbb03c27" kindref="member">children</ref>())</highlight></codeline>
<codeline lineno="10807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(layerable<sp/>!=<sp/>clickedLayerable<sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref>.testFlag(layerable-&gt;<ref refid="class_q_c_p_layerable_1aa4035e586b7f317a06ba7e74e242a5ea" kindref="member">selectionCategory</ref>()))</highlight></codeline>
<codeline lineno="10809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layerable-&gt;<ref refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee" kindref="member">deselectEvent</ref>(&amp;selChanged);</highlight></codeline>
<codeline lineno="10812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectionStateChanged<sp/>|=<sp/>selChanged;</highlight></codeline>
<codeline lineno="10813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clickedLayerable<sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1ad717377ceba7493b4b32f0bcbbdf1895" kindref="member">mInteractions</ref>.testFlag(clickedLayerable-&gt;<ref refid="class_q_c_p_layerable_1aa4035e586b7f317a06ba7e74e242a5ea" kindref="member">selectionCategory</ref>()))</highlight></codeline>
<codeline lineno="10818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>layerable<sp/>was<sp/>actually<sp/>clicked,<sp/>call<sp/>its<sp/>selectEvent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clickedLayerable-&gt;<ref refid="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91" kindref="member">selectEvent</ref>(event,<sp/>additive,<sp/>details,<sp/>&amp;selChanged);</highlight></codeline>
<codeline lineno="10822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectionStateChanged<sp/>|=<sp/>selChanged;</highlight></codeline>
<codeline lineno="10823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doReplot<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="10826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a500c64a109bc773c973ad274f2fa4190" kindref="member">selectionChangedByUser</ref>();</highlight></codeline>
<codeline lineno="10827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emit<sp/>specialized<sp/>object<sp/>click<sp/>signals:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10830"><highlight class="normal"><sp/><sp/><sp/><sp/>QVariant<sp/>details;</highlight></codeline>
<codeline lineno="10831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*clickedLayerable<sp/>=<sp/><ref refid="class_q_custom_plot_1a3fffd1d8364f657482ae985e0b5aa028" kindref="member">layerableAt</ref>(event-&gt;pos(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;details);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>these<sp/>signals,<sp/>selectability<sp/>is<sp/>ignored,<sp/>that&apos;s<sp/>why<sp/>we<sp/>call<sp/>this<sp/>again<sp/>with<sp/>onlySelectable<sp/>set<sp/>to<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*ap<sp/>=<sp/>qobject_cast&lt;QCPAbstractPlottable*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a57e5efa8a854620e9bf62d31fc139f53" kindref="member">plottableClick</ref>(ap,<sp/>event);</highlight></codeline>
<codeline lineno="10834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*ax<sp/>=<sp/>qobject_cast&lt;QCPAxis*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1abf635f8b56ab5c16d5de9f358543e82b" kindref="member">axisClick</ref>(ax,<sp/>details.value&lt;<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115f" kindref="member">QCPAxis::SelectablePart</ref>&gt;(),<sp/>event);</highlight></codeline>
<codeline lineno="10836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref><sp/>*ai<sp/>=<sp/>qobject_cast&lt;QCPAbstractItem*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1ae16b51f52d2b7aebbc7e3e74e6ff2e4b" kindref="member">itemClick</ref>(ai,<sp/>event);</highlight></codeline>
<codeline lineno="10838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*lg<sp/>=<sp/>qobject_cast&lt;QCPLegend*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a79cff0baafbca10a3aaf694d2d3b9ab3" kindref="member">legendClick</ref>(lg,<sp/>0,<sp/>event);</highlight></codeline>
<codeline lineno="10840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*li<sp/>=<sp/>qobject_cast&lt;QCPAbstractLegendItem*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a79cff0baafbca10a3aaf694d2d3b9ab3" kindref="member">legendClick</ref>(li-&gt;parentLegend(),<sp/>li,<sp/>event);</highlight></codeline>
<codeline lineno="10842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plot_title" kindref="compound">QCPPlotTitle</ref><sp/>*pt<sp/>=<sp/>qobject_cast&lt;QCPPlotTitle*&gt;(clickedLayerable))</highlight></codeline>
<codeline lineno="10843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1a2137a819e518fee7edd1c0bf5984d8d6" kindref="member">titleClick</ref>(event,<sp/>pt);</highlight></codeline>
<codeline lineno="10844"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10845"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10846"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>event<sp/>of<sp/>affected<sp/>layout<sp/>element:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>)</highlight></codeline>
<codeline lineno="10848"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref>-&gt;mouseReleaseEvent(event);</highlight></codeline>
<codeline lineno="10850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a2f2e8b25e59cf3cf7b15e4767c02e747" kindref="member">mMouseEventElement</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10852"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doReplot<sp/>||<sp/><ref refid="class_q_custom_plot_1ae07f2895a34d13a97a10cae4d8e17a36" kindref="member">noAntialiasingOnDrag</ref>())</highlight></codeline>
<codeline lineno="10854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a606fd384b2a637ce2c24899bcbde77d6" kindref="member">replot</ref>();</highlight></codeline>
<codeline lineno="10855"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10856"><highlight class="normal"><sp/><sp/>QWidget::mouseReleaseEvent(event);</highlight></codeline>
<codeline lineno="10857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10858"><highlight class="normal"></highlight></codeline>
<codeline lineno="10865"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a7b8bd7e8d3a1d23a8595e9c6a6b76ef1" kindref="member">QCustomPlot::wheelEvent</ref>(QWheelEvent<sp/>*event)</highlight></codeline>
<codeline lineno="10866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10867"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="class_q_custom_plot_1ac80a14206f99304a91d2aa55775ec3ff" kindref="member">mouseWheel</ref>(event);</highlight></codeline>
<codeline lineno="10868"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>event<sp/>of<sp/>affected<sp/>layout<sp/>element:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QCPLayoutElement<sp/>*el<sp/>=<sp/><ref refid="class_q_custom_plot_1a840458186d4483c8a42d6a399448d38f" kindref="member">layoutElementAt</ref>(event-&gt;pos()))</highlight></codeline>
<codeline lineno="10871"><highlight class="normal"><sp/><sp/><sp/><sp/>el-&gt;<ref refid="class_q_c_p_layout_element_1a300521d2fd18a893c1b85f6be11ce2bf" kindref="member">wheelEvent</ref>(event);</highlight></codeline>
<codeline lineno="10872"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10873"><highlight class="normal"><sp/><sp/>QWidget::wheelEvent(event);</highlight></codeline>
<codeline lineno="10874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10875"><highlight class="normal"></highlight></codeline>
<codeline lineno="10883"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ad7a7d878bf050f101a43008e7d8fdb52" kindref="member">QCustomPlot::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="10884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>through<sp/>layout<sp/>phases:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10886"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>-&gt;<ref refid="class_q_c_p_layout_1a34ab477e820537ded7bade4399c482fd" kindref="member">update</ref>(<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374dad6119882eba136357c2f627992e527d3" kindref="member">QCPLayoutElement::upPreparation</ref>);</highlight></codeline>
<codeline lineno="10887"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>-&gt;<ref refid="class_q_c_p_layout_1a34ab477e820537ded7bade4399c482fd" kindref="member">update</ref>(<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" kindref="member">QCPLayoutElement::upMargins</ref>);</highlight></codeline>
<codeline lineno="10888"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1ac97298756882a0eecd98151679850ac1" kindref="member">mPlotLayout</ref>-&gt;<ref refid="class_q_c_p_layout_1a34ab477e820537ded7bade4399c482fd" kindref="member">update</ref>(<ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" kindref="member">QCPLayoutElement::upLayout</ref>);</highlight></codeline>
<codeline lineno="10889"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10890"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>viewport<sp/>background<sp/>pixmap:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10891"><highlight class="normal"><sp/><sp/><ref refid="class_q_custom_plot_1a05dd52438cee4353b18c1e53a439008d" kindref="member">drawBackground</ref>(painter);</highlight></codeline>
<codeline lineno="10892"><highlight class="normal"></highlight></codeline>
<codeline lineno="10893"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>all<sp/>layered<sp/>objects<sp/>(grid,<sp/>axes,<sp/>plottables,<sp/>items,<sp/>legend,...):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref><sp/>*layer,<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>)</highlight></codeline>
<codeline lineno="10895"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*child,<sp/>layer-&gt;<ref refid="class_q_c_p_layer_1a94c2f0100e48cefad2de8fe0fbb03c27" kindref="member">children</ref>())</highlight></codeline>
<codeline lineno="10897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;<ref refid="class_q_c_p_layerable_1a30809f7455e9794bca7b6c737622fa63" kindref="member">realVisibility</ref>())</highlight></codeline>
<codeline lineno="10899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a8fd6821ee6fecbfa04444c9062912abd" kindref="member">save</ref>();</highlight></codeline>
<codeline lineno="10901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setClipRect(child-&gt;<ref refid="class_q_c_p_layerable_1a07a8f746640c3704b09910df297afcba" kindref="member">clipRect</ref>().translated(0,<sp/>-1));</highlight></codeline>
<codeline lineno="10902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_q_c_p_layerable_1afdf83ddc6a265cbf4c89fe99d3d93473" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="10903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="class_q_c_p_layerable_1aecf2f7087482d4b6a78cb2770e5ed12d" kindref="member">draw</ref>(painter);</highlight></codeline>
<codeline lineno="10904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a64908e6298d5bbd83457dc987cc3a022" kindref="member">restore</ref>();</highlight></codeline>
<codeline lineno="10905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10908"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10909"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Debug<sp/>code<sp/>to<sp/>draw<sp/>all<sp/>layout<sp/>element<sp/>rects</highlight></codeline>
<codeline lineno="10910"><highlight class="comment"><sp/><sp/>foreach<sp/>(QCPLayoutElement*<sp/>el,<sp/>findChildren&lt;QCPLayoutElement*&gt;())</highlight></codeline>
<codeline lineno="10911"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10912"><highlight class="comment"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="10913"><highlight class="comment"><sp/><sp/><sp/><sp/>painter-&gt;setPen(QPen(QColor(0,<sp/>0,<sp/>0,<sp/>100),<sp/>0,<sp/>Qt::DashLine));</highlight></codeline>
<codeline lineno="10914"><highlight class="comment"><sp/><sp/><sp/><sp/>painter-&gt;drawRect(el-&gt;rect());</highlight></codeline>
<codeline lineno="10915"><highlight class="comment"><sp/><sp/><sp/><sp/>painter-&gt;setPen(QPen(QColor(255,<sp/>0,<sp/>0,<sp/>100),<sp/>0,<sp/>Qt::DashLine));</highlight></codeline>
<codeline lineno="10916"><highlight class="comment"><sp/><sp/><sp/><sp/>painter-&gt;drawRect(el-&gt;outerRect());</highlight></codeline>
<codeline lineno="10917"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10918"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10920"><highlight class="normal"></highlight></codeline>
<codeline lineno="10938"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a05dd52438cee4353b18c1e53a439008d" kindref="member">QCustomPlot::drawBackground</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="10939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10940"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>background<sp/>color<sp/>is<sp/>handled<sp/>in<sp/>individual<sp/>replot/save<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10941"><highlight class="normal"></highlight></codeline>
<codeline lineno="10942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>background<sp/>pixmap<sp/>(on<sp/>top<sp/>of<sp/>fill,<sp/>if<sp/>brush<sp/>specified):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_custom_plot_1ae8f4677399324a78c5f8dbfb95a34f90" kindref="member">mBackgroundPixmap</ref>.isNull())</highlight></codeline>
<codeline lineno="10944"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="10945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a62fe584b20680b1b2e1c7efb5c5416a5" kindref="member">mBackgroundScaled</ref>)</highlight></codeline>
<codeline lineno="10946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>mScaledBackground<sp/>needs<sp/>to<sp/>be<sp/>updated:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>scaledSize(<ref refid="class_q_custom_plot_1ae8f4677399324a78c5f8dbfb95a34f90" kindref="member">mBackgroundPixmap</ref>.size());</highlight></codeline>
<codeline lineno="10949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledSize.scale(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.size(),<sp/><ref refid="class_q_custom_plot_1ab82e8a5e3ad6b486f95d6da8bf49e9aa" kindref="member">mBackgroundScaledMode</ref>);</highlight></codeline>
<codeline lineno="10950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a081bf046501d52642dc6d7e3bdb97d57" kindref="member">mScaledBackgroundPixmap</ref>.size()<sp/>!=<sp/>scaledSize)</highlight></codeline>
<codeline lineno="10951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a081bf046501d52642dc6d7e3bdb97d57" kindref="member">mScaledBackgroundPixmap</ref><sp/>=<sp/><ref refid="class_q_custom_plot_1ae8f4677399324a78c5f8dbfb95a34f90" kindref="member">mBackgroundPixmap</ref>.scaled(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.size(),<sp/><ref refid="class_q_custom_plot_1ab82e8a5e3ad6b486f95d6da8bf49e9aa" kindref="member">mBackgroundScaledMode</ref>,<sp/>Qt::SmoothTransformation);</highlight></codeline>
<codeline lineno="10952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.topLeft(),<sp/><ref refid="class_q_custom_plot_1a081bf046501d52642dc6d7e3bdb97d57" kindref="member">mScaledBackgroundPixmap</ref>,<sp/>QRect(0,<sp/>0,<sp/><ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.width(),<sp/><ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.height())<sp/>&amp;<sp/><ref refid="class_q_custom_plot_1a081bf046501d52642dc6d7e3bdb97d57" kindref="member">mScaledBackgroundPixmap</ref>.rect());</highlight></codeline>
<codeline lineno="10953"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.topLeft(),<sp/><ref refid="class_q_custom_plot_1ae8f4677399324a78c5f8dbfb95a34f90" kindref="member">mBackgroundPixmap</ref>,<sp/>QRect(0,<sp/>0,<sp/><ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.width(),<sp/><ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>.height()));</highlight></codeline>
<codeline lineno="10956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10959"><highlight class="normal"></highlight></codeline>
<codeline lineno="10960"><highlight class="normal"></highlight></codeline>
<codeline lineno="10966"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a8b46607021c463c94709d3504951cb47" kindref="member">QCustomPlot::axisRemoved</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis)</highlight></codeline>
<codeline lineno="10967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a9a79cd0158a4c7f30cbc702f0fd800e4" kindref="member">xAxis</ref><sp/>==<sp/>axis)</highlight></codeline>
<codeline lineno="10969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a9a79cd0158a4c7f30cbc702f0fd800e4" kindref="member">xAxis</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1ada41599f22cad901c030f3dcbdd82fd9" kindref="member">xAxis2</ref><sp/>==<sp/>axis)</highlight></codeline>
<codeline lineno="10971"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ada41599f22cad901c030f3dcbdd82fd9" kindref="member">xAxis2</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1af6fea5679725b152c14facd920b19367" kindref="member">yAxis</ref><sp/>==<sp/>axis)</highlight></codeline>
<codeline lineno="10973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1af6fea5679725b152c14facd920b19367" kindref="member">yAxis</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1af13fdc5bce7d0fabd640f13ba805c0b7" kindref="member">yAxis2</ref><sp/>==<sp/>axis)</highlight></codeline>
<codeline lineno="10975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1af13fdc5bce7d0fabd640f13ba805c0b7" kindref="member">yAxis2</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10976"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10977"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>No<sp/>need<sp/>to<sp/>take<sp/>care<sp/>of<sp/>range<sp/>drag<sp/>axes<sp/>and<sp/>range<sp/>zoom<sp/>axes,<sp/>because<sp/>they<sp/>are<sp/>stored<sp/>in<sp/>smart<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10979"><highlight class="normal"></highlight></codeline>
<codeline lineno="10985"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a9d173454555021c9ffd4f675c4d9037a" kindref="member">QCustomPlot::legendRemoved</ref>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*legend)</highlight></codeline>
<codeline lineno="10986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;legend<sp/>==<sp/>legend)</highlight></codeline>
<codeline lineno="10988"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;legend<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10990"><highlight class="normal"></highlight></codeline>
<codeline lineno="10997"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a3117754df3a5638787a6223c7147970f" kindref="member">QCustomPlot::updateLayerIndices</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10998"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="10999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="11000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.at(i)-&gt;mIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="11001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11002"><highlight class="normal"></highlight></codeline>
<codeline lineno="11015"><highlight class="normal"><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*<ref refid="class_q_custom_plot_1a3fffd1d8364f657482ae985e0b5aa028" kindref="member">QCustomPlot::layerableAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*selectionDetails)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11016"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>layerIndex=<ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.size()-1;<sp/>layerIndex&gt;=0;<sp/>--layerIndex)</highlight></codeline>
<codeline lineno="11018"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QCPLayerable*&gt;<sp/>layerables<sp/>=<sp/><ref refid="class_q_custom_plot_1a72ee313041b873d76c198793ce7e6c37" kindref="member">mLayers</ref>.at(layerIndex)-&gt;children();</highlight></codeline>
<codeline lineno="11020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimumDistance<sp/>=<sp/><ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*1.1;</highlight></codeline>
<codeline lineno="11021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref><sp/>*minimumDistanceLayerable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=layerables.size()-1;<sp/>i&gt;=0;<sp/>--i)</highlight></codeline>
<codeline lineno="11023"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!layerables.at(i)-&gt;realVisibility())</highlight></codeline>
<codeline lineno="11025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVariant<sp/>details;</highlight></codeline>
<codeline lineno="11027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>layerables.at(i)-&gt;<ref refid="class_q_c_p_layerable_1a4001c4d0dfec55598efa4d531f2179a9" kindref="member">selectTest</ref>(pos,<sp/>onlySelectable,<sp/>&amp;details);</highlight></codeline>
<codeline lineno="11028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dist<sp/>&lt;<sp/>minimumDistance)</highlight></codeline>
<codeline lineno="11029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimumDistance<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="11031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimumDistanceLayerable<sp/>=<sp/>layerables.at(i);</highlight></codeline>
<codeline lineno="11032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionDetails)<sp/>*selectionDetails<sp/>=<sp/>details;</highlight></codeline>
<codeline lineno="11033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minimumDistance<sp/>&lt;<sp/><ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>())</highlight></codeline>
<codeline lineno="11036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minimumDistanceLayerable;</highlight></codeline>
<codeline lineno="11037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="11039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11040"><highlight class="normal"></highlight></codeline>
<codeline lineno="11052"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1ab528b84cf92baabe29b1d0ef2f77c93e" kindref="member">QCustomPlot::saveRastered</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality)</highlight></codeline>
<codeline lineno="11053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11054"><highlight class="normal"><sp/><sp/>QPixmap<sp/><ref refid="_packet_handler_8cpp_1aae7966d231efc476384b8aa9c25980f9" kindref="member">buffer</ref><sp/>=<sp/><ref refid="class_q_custom_plot_1aabb974d71ce96c137dc04eb6eab844fe" kindref="member">toPixmap</ref>(width,<sp/>height,<sp/>scale);</highlight></codeline>
<codeline lineno="11055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer.isNull())</highlight></codeline>
<codeline lineno="11056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer.save(fileName,<sp/>format,<sp/>quality);</highlight></codeline>
<codeline lineno="11057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11060"><highlight class="normal"></highlight></codeline>
<codeline lineno="11069"><highlight class="normal">QPixmap<sp/><ref refid="class_q_custom_plot_1aabb974d71ce96c137dc04eb6eab844fe" kindref="member">QCustomPlot::toPixmap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="11070"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>method<sp/>is<sp/>somewhat<sp/>similar<sp/>to<sp/>toPainter.<sp/>Change<sp/>something<sp/>here,<sp/>and<sp/>a<sp/>change<sp/>in<sp/>toPainter<sp/>might<sp/>be<sp/>necessary,<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newWidth,<sp/>newHeight;</highlight></codeline>
<codeline lineno="11073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>==<sp/>0<sp/>||<sp/>height<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="11074"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11075"><highlight class="normal"><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>this-&gt;width();</highlight></codeline>
<codeline lineno="11076"><highlight class="normal"><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>this-&gt;height();</highlight></codeline>
<codeline lineno="11077"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11078"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11079"><highlight class="normal"><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="11080"><highlight class="normal"><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="11081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledWidth<sp/>=<sp/>qRound(scale*newWidth);</highlight></codeline>
<codeline lineno="11083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaledHeight<sp/>=<sp/>qRound(scale*newHeight);</highlight></codeline>
<codeline lineno="11084"><highlight class="normal"></highlight></codeline>
<codeline lineno="11085"><highlight class="normal"><sp/><sp/>QPixmap<sp/>result(scaledWidth,<sp/>scaledHeight);</highlight></codeline>
<codeline lineno="11086"><highlight class="normal"><sp/><sp/>result.fill(<ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>==<sp/>Qt::SolidPattern<sp/>?<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.color()<sp/>:<sp/>Qt::transparent);<sp/></highlight><highlight class="comment">//<sp/>if<sp/>using<sp/>non-solid<sp/>pattern,<sp/>make<sp/>transparent<sp/>now<sp/>and<sp/>draw<sp/>brush<sp/>pattern<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11087"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>painter;</highlight></codeline>
<codeline lineno="11088"><highlight class="normal"><sp/><sp/>painter.<ref refid="class_q_c_p_painter_1a0a41146ccd619dceab6e25ec7b46b044" kindref="member">begin</ref>(&amp;result);</highlight></codeline>
<codeline lineno="11089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(painter.isActive())</highlight></codeline>
<codeline lineno="11090"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11091"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>oldViewport<sp/>=<sp/><ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>();</highlight></codeline>
<codeline lineno="11092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>(QRect(0,<sp/>0,<sp/>newWidth,<sp/>newHeight));</highlight></codeline>
<codeline lineno="11093"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.<ref refid="class_q_c_p_painter_1af6b1f7d2bbc548b10aa55d8b6ad49577" kindref="member">setMode</ref>(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">QCPPainter::pmNoCaching</ref>);</highlight></codeline>
<codeline lineno="11094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyCompare(scale,<sp/>1.0))</highlight></codeline>
<codeline lineno="11095"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>&gt;<sp/>1.0)<sp/></highlight><highlight class="comment">//<sp/>for<sp/>scale<sp/>&lt;<sp/>1<sp/>we<sp/>always<sp/>want<sp/>cosmetic<sp/>pens<sp/>where<sp/>possible,<sp/>because<sp/>else<sp/>lines<sp/>might<sp/>disappear<sp/>for<sp/>very<sp/>small<sp/>scales</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.<ref refid="class_q_c_p_painter_1af6b1f7d2bbc548b10aa55d8b6ad49577" kindref="member">setMode</ref>(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dac1e481bfaf408f2bd2eaad3ec341f36b" kindref="member">QCPPainter::pmNonCosmetic</ref>);</highlight></codeline>
<codeline lineno="11098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.scale(scale,<sp/>scale);</highlight></codeline>
<codeline lineno="11099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>!=<sp/>Qt::SolidPattern<sp/>&amp;&amp;<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush)</highlight></codeline>
<codeline lineno="11101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.fillRect(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>,<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>);</highlight></codeline>
<codeline lineno="11102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ad7a7d878bf050f101a43008e7d8fdb52" kindref="member">draw</ref>(&amp;painter);</highlight></codeline>
<codeline lineno="11103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>(oldViewport);</highlight></codeline>
<codeline lineno="11104"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="11105"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>might<sp/>happen<sp/>if<sp/>pixmap<sp/>has<sp/>width<sp/>or<sp/>height<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11107"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>activate<sp/>painter<sp/>on<sp/>pixmap&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPixmap();</highlight></codeline>
<codeline lineno="11109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11112"><highlight class="normal"></highlight></codeline>
<codeline lineno="11125"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_custom_plot_1a1be68d5c0f1e086d6374d1340a193fb9" kindref="member">QCustomPlot::toPainter</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="11126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>method<sp/>is<sp/>somewhat<sp/>similar<sp/>to<sp/>toPixmap.<sp/>Change<sp/>something<sp/>here,<sp/>and<sp/>a<sp/>change<sp/>in<sp/>toPixmap<sp/>might<sp/>be<sp/>necessary,<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newWidth,<sp/>newHeight;</highlight></codeline>
<codeline lineno="11129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>==<sp/>0<sp/>||<sp/>height<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="11130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11131"><highlight class="normal"><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>this-&gt;width();</highlight></codeline>
<codeline lineno="11132"><highlight class="normal"><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>this-&gt;height();</highlight></codeline>
<codeline lineno="11133"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11134"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11135"><highlight class="normal"><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="11136"><highlight class="normal"><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="11137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11138"><highlight class="normal"></highlight></codeline>
<codeline lineno="11139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(painter-&gt;isActive())</highlight></codeline>
<codeline lineno="11140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11141"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>oldViewport<sp/>=<sp/><ref refid="class_q_custom_plot_1a953ecdbc28018e7e84cb6213ad3d88c2" kindref="member">viewport</ref>();</highlight></codeline>
<codeline lineno="11142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>(QRect(0,<sp/>0,<sp/>newWidth,<sp/>newHeight));</highlight></codeline>
<codeline lineno="11143"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af6b1f7d2bbc548b10aa55d8b6ad49577" kindref="member">setMode</ref>(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">QCPPainter::pmNoCaching</ref>);</highlight></codeline>
<codeline lineno="11144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning:<sp/>the<sp/>following<sp/>is<sp/>different<sp/>in<sp/>toPixmap,<sp/>because<sp/>a<sp/>solid<sp/>background<sp/>color<sp/>is<sp/>applied<sp/>there<sp/>via<sp/>QPixmap::fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here,<sp/>we<sp/>need<sp/>to<sp/>do<sp/>this<sp/>via<sp/>QPainter::fillRect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush)</highlight></codeline>
<codeline lineno="11147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;fillRect(<ref refid="class_q_custom_plot_1ac0a7c38a715526c257cff95774f83ab6" kindref="member">mViewport</ref>,<sp/><ref refid="class_q_custom_plot_1a3aef5de4ac012178e3293248e9c63737" kindref="member">mBackgroundBrush</ref>);</highlight></codeline>
<codeline lineno="11148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1ad7a7d878bf050f101a43008e7d8fdb52" kindref="member">draw</ref>(painter);</highlight></codeline>
<codeline lineno="11149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" kindref="member">setViewport</ref>(oldViewport);</highlight></codeline>
<codeline lineno="11150"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11151"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Passed<sp/>painter<sp/>is<sp/>not<sp/>active&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11153"><highlight class="normal"></highlight></codeline>
<codeline lineno="11154"><highlight class="normal"></highlight></codeline>
<codeline lineno="11158"></codeline>
<codeline lineno="11191"><highlight class="normal"><ref refid="class_q_c_p_color_gradient_1a546e44df5fa1846400a582c041361c85" kindref="member">QCPColorGradient::QCPColorGradient</ref>(GradientPreset<sp/>preset)<sp/>:</highlight></codeline>
<codeline lineno="11192"><highlight class="normal"><sp/><sp/>mLevelCount(350),</highlight></codeline>
<codeline lineno="11193"><highlight class="normal"><sp/><sp/>mColorInterpolation(ciRGB),</highlight></codeline>
<codeline lineno="11194"><highlight class="normal"><sp/><sp/>mPeriodic(false),</highlight></codeline>
<codeline lineno="11195"><highlight class="normal"><sp/><sp/>mColorBufferInvalidated(true)</highlight></codeline>
<codeline lineno="11196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11197"><highlight class="normal"><sp/><sp/>mColorBuffer.fill(qRgb(0,<sp/>0,<sp/>0),<sp/>mLevelCount);</highlight></codeline>
<codeline lineno="11198"><highlight class="normal"><sp/><sp/>loadPreset(preset);</highlight></codeline>
<codeline lineno="11199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11200"><highlight class="normal"></highlight></codeline>
<codeline lineno="11201"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>undocumented<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11202"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aada47d8206bf2cec77462653bf471c13" kindref="member">QCPColorGradient::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11203"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((other.<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref><sp/>==<sp/>this-&gt;mLevelCount)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="11205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(other.<ref refid="class_q_c_p_color_gradient_1a028cef73d863800a9ee93ffd641cce01" kindref="member">mColorInterpolation</ref><sp/>==<sp/>this-&gt;mColorInterpolation)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="11206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(other.<ref refid="class_q_c_p_color_gradient_1a4b07deeb20ca1ee2d5ea7e01bf0420af" kindref="member">mPeriodic</ref><sp/>==<sp/>this-&gt;mPeriodic)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="11207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(other.<ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref><sp/>==<sp/>this-&gt;mColorStops));</highlight></codeline>
<codeline lineno="11208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11209"><highlight class="normal"></highlight></codeline>
<codeline lineno="11216"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1a18da587eb4f7fc788ea28ba15b6a12de" kindref="member">QCPColorGradient::setLevelCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="11217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="11219"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11220"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;n<sp/>must<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>2<sp/>but<sp/>was&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n;</highlight></codeline>
<codeline lineno="11221"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="11222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>)</highlight></codeline>
<codeline lineno="11224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="11226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11229"><highlight class="normal"></highlight></codeline>
<codeline lineno="11240"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1a724e828aa6f0ba5011a9392477c35d3a" kindref="member">QCPColorGradient::setColorStops</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMap&lt;double,<sp/>QColor&gt;<sp/>&amp;colorStops)</highlight></codeline>
<codeline lineno="11241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11242"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref><sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1a64f8aba7826f9c6363aacff8376cef37" kindref="member">colorStops</ref>;</highlight></codeline>
<codeline lineno="11243"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11245"><highlight class="normal"></highlight></codeline>
<codeline lineno="11252"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">QCPColorGradient::setColorStopAt</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="11253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11254"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.insert(position,<sp/>color);</highlight></codeline>
<codeline lineno="11255"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11257"><highlight class="normal"></highlight></codeline>
<codeline lineno="11265"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">QCPColorGradient::setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1" kindref="member">QCPColorGradient::ColorInterpolation</ref><sp/>interpolation)</highlight></codeline>
<codeline lineno="11266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interpolation<sp/>!=<sp/><ref refid="class_q_c_p_color_gradient_1a028cef73d863800a9ee93ffd641cce01" kindref="member">mColorInterpolation</ref>)</highlight></codeline>
<codeline lineno="11268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a028cef73d863800a9ee93ffd641cce01" kindref="member">mColorInterpolation</ref><sp/>=<sp/>interpolation;</highlight></codeline>
<codeline lineno="11270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11273"><highlight class="normal"></highlight></codeline>
<codeline lineno="11289"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1a39d6448155fc00a219f239220d14bb39" kindref="member">QCPColorGradient::setPeriodic</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="11290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11291"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a4b07deeb20ca1ee2d5ea7e01bf0420af" kindref="member">mPeriodic</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="11292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11293"><highlight class="normal"></highlight></codeline>
<codeline lineno="11306"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aaf423ceb943e177b0ed2c48c811d83dc" kindref="member">QCPColorGradient::colorize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range,<sp/>QRgb<sp/>*scanLine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataIndexFactor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logarithmic)</highlight></codeline>
<codeline lineno="11307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>change<sp/>something<sp/>here,<sp/>make<sp/>sure<sp/>to<sp/>also<sp/>adapt<sp/>::color()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)</highlight></codeline>
<codeline lineno="11310"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11311"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>given<sp/>as<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scanLine)</highlight></codeline>
<codeline lineno="11315"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11316"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>given<sp/>as<sp/>scanLine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref>)</highlight></codeline>
<codeline lineno="11320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a353f15ab3ab586eebf1f6b58c3e2707b" kindref="member">updateColorBuffer</ref>();</highlight></codeline>
<codeline lineno="11321"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="11322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!logarithmic)</highlight></codeline>
<codeline lineno="11323"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posToIndexFactor<sp/>=<sp/>(<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1)/range.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="11325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1a4b07deeb20ca1ee2d5ea7e01bf0420af" kindref="member">mPeriodic</ref>)</highlight></codeline>
<codeline lineno="11326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="11328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>(int)((data[dataIndexFactor*i]-range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*posToIndexFactor)<sp/>%<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>;</highlight></codeline>
<codeline lineno="11330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="11331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>;</highlight></codeline>
<codeline lineno="11332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLine[i]<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.at(index);</highlight></codeline>
<codeline lineno="11333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="11337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>(data[dataIndexFactor*i]-range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*posToIndexFactor;</highlight></codeline>
<codeline lineno="11339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="11340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>)</highlight></codeline>
<codeline lineno="11342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1;</highlight></codeline>
<codeline lineno="11343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLine[i]<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.at(index);</highlight></codeline>
<codeline lineno="11344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11346"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>logarithmic<sp/>==<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1a4b07deeb20ca1ee2d5ea7e01bf0420af" kindref="member">mPeriodic</ref>)</highlight></codeline>
<codeline lineno="11349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="11351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>(int)(qLn(data[dataIndexFactor*i]/range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/qLn(range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1))<sp/>%<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>;</highlight></codeline>
<codeline lineno="11353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="11354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>;</highlight></codeline>
<codeline lineno="11355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLine[i]<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.at(index);</highlight></codeline>
<codeline lineno="11356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11357"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="11360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>qLn(data[dataIndexFactor*i]/range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/qLn(range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1);</highlight></codeline>
<codeline lineno="11362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="11363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>)</highlight></codeline>
<codeline lineno="11365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1;</highlight></codeline>
<codeline lineno="11366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanLine[i]<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.at(index);</highlight></codeline>
<codeline lineno="11367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11371"><highlight class="normal"></highlight></codeline>
<codeline lineno="11381"><highlight class="normal">QRgb<sp/><ref refid="class_q_c_p_color_gradient_1a0599545c859268b025d2060dea741cea" kindref="member">QCPColorGradient::color</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;range,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logarithmic)</highlight></codeline>
<codeline lineno="11382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>change<sp/>something<sp/>here,<sp/>make<sp/>sure<sp/>to<sp/>also<sp/>adapt<sp/>::colorize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref>)</highlight></codeline>
<codeline lineno="11385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a353f15ab3ab586eebf1f6b58c3e2707b" kindref="member">updateColorBuffer</ref>();</highlight></codeline>
<codeline lineno="11386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!logarithmic)</highlight></codeline>
<codeline lineno="11388"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(position-range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1)/range.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="11389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11390"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>qLn(position/range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/qLn(range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1);</highlight></codeline>
<codeline lineno="11391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1a4b07deeb20ca1ee2d5ea7e01bf0420af" kindref="member">mPeriodic</ref>)</highlight></codeline>
<codeline lineno="11392"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11393"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>index<sp/>%<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>;</highlight></codeline>
<codeline lineno="11394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="11395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>;</highlight></codeline>
<codeline lineno="11396"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11397"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="11399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>)</highlight></codeline>
<codeline lineno="11401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1;</highlight></codeline>
<codeline lineno="11402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.at(index);</highlight></codeline>
<codeline lineno="11404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11405"><highlight class="normal"></highlight></codeline>
<codeline lineno="11413"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aa0aeec1528241728b9671bf8e60b1622" kindref="member">QCPColorGradient::loadPreset</ref>(GradientPreset<sp/>preset)</highlight></codeline>
<codeline lineno="11414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11415"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a939213e85f0d1279519d555c5fcfb6ad" kindref="member">clearColorStops</ref>();</highlight></codeline>
<codeline lineno="11416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(preset)</highlight></codeline>
<codeline lineno="11417"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072add11ae369a86f3b1b6205ec72e5021fb" kindref="member">gpGrayscale</ref>:</highlight></codeline>
<codeline lineno="11419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>);</highlight></codeline>
<codeline lineno="11420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>Qt::black);</highlight></codeline>
<codeline lineno="11421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>Qt::white);</highlight></codeline>
<codeline lineno="11422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a4f42e534cf6cff5a29a5388094d099b5" kindref="member">gpHot</ref>:</highlight></codeline>
<codeline lineno="11424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>);</highlight></codeline>
<codeline lineno="11425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(50,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="11426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.2,<sp/>QColor(180,<sp/>10,<sp/>0));</highlight></codeline>
<codeline lineno="11427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.4,<sp/>QColor(245,<sp/>50,<sp/>0));</highlight></codeline>
<codeline lineno="11428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.6,<sp/>QColor(255,<sp/>150,<sp/>10));</highlight></codeline>
<codeline lineno="11429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.8,<sp/>QColor(255,<sp/>255,<sp/>50));</highlight></codeline>
<codeline lineno="11430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(255,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072aec8c001f62c0d5cb853db5fd85309557" kindref="member">gpCold</ref>:</highlight></codeline>
<codeline lineno="11433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>);</highlight></codeline>
<codeline lineno="11434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(0,<sp/>0,<sp/>50));</highlight></codeline>
<codeline lineno="11435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.2,<sp/>QColor(0,<sp/>10,<sp/>180));</highlight></codeline>
<codeline lineno="11436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.4,<sp/>QColor(0,<sp/>50,<sp/>245));</highlight></codeline>
<codeline lineno="11437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.6,<sp/>QColor(10,<sp/>150,<sp/>255));</highlight></codeline>
<codeline lineno="11438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.8,<sp/>QColor(50,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(255,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a1bb89351b6def7d220973443fe059c62" kindref="member">gpNight</ref>:</highlight></codeline>
<codeline lineno="11442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" kindref="member">ciHSV</ref>);</highlight></codeline>
<codeline lineno="11443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(10,<sp/>20,<sp/>30));</highlight></codeline>
<codeline lineno="11444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(250,<sp/>255,<sp/>250));</highlight></codeline>
<codeline lineno="11445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a9e72663bf6b94b65945f7843f24e0721" kindref="member">gpCandy</ref>:</highlight></codeline>
<codeline lineno="11447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" kindref="member">ciHSV</ref>);</highlight></codeline>
<codeline lineno="11448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(0,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="11449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(255,<sp/>250,<sp/>250));</highlight></codeline>
<codeline lineno="11450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a382f0b07cec1a59d8a533438aea815d2" kindref="member">gpGeography</ref>:</highlight></codeline>
<codeline lineno="11452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>);</highlight></codeline>
<codeline lineno="11453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(70,<sp/>170,<sp/>210));</highlight></codeline>
<codeline lineno="11454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.20,<sp/>QColor(90,<sp/>160,<sp/>180));</highlight></codeline>
<codeline lineno="11455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.25,<sp/>QColor(45,<sp/>130,<sp/>175));</highlight></codeline>
<codeline lineno="11456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.30,<sp/>QColor(100,<sp/>140,<sp/>125));</highlight></codeline>
<codeline lineno="11457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.5,<sp/>QColor(100,<sp/>140,<sp/>100));</highlight></codeline>
<codeline lineno="11458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.6,<sp/>QColor(130,<sp/>145,<sp/>120));</highlight></codeline>
<codeline lineno="11459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.7,<sp/>QColor(140,<sp/>130,<sp/>120));</highlight></codeline>
<codeline lineno="11460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.9,<sp/>QColor(180,<sp/>190,<sp/>190));</highlight></codeline>
<codeline lineno="11461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(210,<sp/>210,<sp/>230));</highlight></codeline>
<codeline lineno="11462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a4297f4f9e212a819cd65e8e34567182b" kindref="member">gpIon</ref>:</highlight></codeline>
<codeline lineno="11464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" kindref="member">ciHSV</ref>);</highlight></codeline>
<codeline lineno="11465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(50,<sp/>10,<sp/>10));</highlight></codeline>
<codeline lineno="11466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.45,<sp/>QColor(0,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="11467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.8,<sp/>QColor(0,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(0,<sp/>255,<sp/>0));</highlight></codeline>
<codeline lineno="11469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072af1676b129f9f458ace453f280c731cf7" kindref="member">gpThermal</ref>:</highlight></codeline>
<codeline lineno="11471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>);</highlight></codeline>
<codeline lineno="11472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(0,<sp/>0,<sp/>50));</highlight></codeline>
<codeline lineno="11473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.15,<sp/>QColor(20,<sp/>0,<sp/>120));</highlight></codeline>
<codeline lineno="11474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.33,<sp/>QColor(200,<sp/>30,<sp/>140));</highlight></codeline>
<codeline lineno="11475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.6,<sp/>QColor(255,<sp/>100,<sp/>0));</highlight></codeline>
<codeline lineno="11476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.85,<sp/>QColor(255,<sp/>255,<sp/>40));</highlight></codeline>
<codeline lineno="11477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(255,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072ab7414ce4e36dc3e82e0132a7f0f41b52" kindref="member">gpPolar</ref>:</highlight></codeline>
<codeline lineno="11480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>);</highlight></codeline>
<codeline lineno="11481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(50,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.18,<sp/>QColor(10,<sp/>70,<sp/>255));</highlight></codeline>
<codeline lineno="11483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.28,<sp/>QColor(10,<sp/>10,<sp/>190));</highlight></codeline>
<codeline lineno="11484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.5,<sp/>QColor(0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="11485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.72,<sp/>QColor(190,<sp/>10,<sp/>10));</highlight></codeline>
<codeline lineno="11486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.82,<sp/>QColor(255,<sp/>70,<sp/>10));</highlight></codeline>
<codeline lineno="11487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(255,<sp/>255,<sp/>50));</highlight></codeline>
<codeline lineno="11488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072ad63adc100ef46f6b4a8a6deacec4642f" kindref="member">gpSpectrum</ref>:</highlight></codeline>
<codeline lineno="11490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" kindref="member">ciHSV</ref>);</highlight></codeline>
<codeline lineno="11491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(50,<sp/>0,<sp/>50));</highlight></codeline>
<codeline lineno="11492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.15,<sp/>QColor(0,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="11493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.35,<sp/>QColor(0,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.6,<sp/>QColor(255,<sp/>255,<sp/>0));</highlight></codeline>
<codeline lineno="11495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.75,<sp/>QColor(255,<sp/>30,<sp/>0));</highlight></codeline>
<codeline lineno="11496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(50,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="11497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a5f8a9e67b64c17ddfe4f069fe2b9fb02" kindref="member">gpJet</ref>:</highlight></codeline>
<codeline lineno="11499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>);</highlight></codeline>
<codeline lineno="11500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(0,<sp/>0,<sp/>100));</highlight></codeline>
<codeline lineno="11501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.15,<sp/>QColor(0,<sp/>50,<sp/>255));</highlight></codeline>
<codeline lineno="11502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.35,<sp/>QColor(0,<sp/>255,<sp/>255));</highlight></codeline>
<codeline lineno="11503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.65,<sp/>QColor(255,<sp/>255,<sp/>0));</highlight></codeline>
<codeline lineno="11504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0.85,<sp/>QColor(255,<sp/>30,<sp/>0));</highlight></codeline>
<codeline lineno="11505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(100,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="11506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1aed6569828fee337023670272910c9072a30efe58407acfb67939032f70213a130" kindref="member">gpHues</ref>:</highlight></codeline>
<codeline lineno="11508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1aa13fda86406e1d896a465a409ae63b38" kindref="member">setColorInterpolation</ref>(<ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" kindref="member">ciHSV</ref>);</highlight></codeline>
<codeline lineno="11509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(0,<sp/>QColor(255,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="11510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1.0/3.0,<sp/>QColor(0,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="11511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(2.0/3.0,<sp/>QColor(0,<sp/>255,<sp/>0));</highlight></codeline>
<codeline lineno="11512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a3b48be5e78079db1bb2a1188a4c3390e" kindref="member">setColorStopAt</ref>(1,<sp/>QColor(255,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="11513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11516"><highlight class="normal"></highlight></codeline>
<codeline lineno="11522"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1a939213e85f0d1279519d555c5fcfb6ad" kindref="member">QCPColorGradient::clearColorStops</ref>()</highlight></codeline>
<codeline lineno="11523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11524"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.clear();</highlight></codeline>
<codeline lineno="11525"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11527"><highlight class="normal"></highlight></codeline>
<codeline lineno="11534"><highlight class="normal"><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/><ref refid="class_q_c_p_color_gradient_1abe04e1d1ccab3d7aa78f2924faed4916" kindref="member">QCPColorGradient::inverted</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11535"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11536"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>result(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11537"><highlight class="normal"><sp/><sp/>result.clearColorStops();</highlight></codeline>
<codeline lineno="11538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QMap&lt;double,<sp/>QColor&gt;::const_iterator<sp/>it=<ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.constBegin();<sp/>it!=<ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.constEnd();<sp/>++it)</highlight></codeline>
<codeline lineno="11539"><highlight class="normal"><sp/><sp/><sp/><sp/>result.setColorStopAt(1.0-it.key(),<sp/>it.value());</highlight></codeline>
<codeline lineno="11540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11542"><highlight class="normal"></highlight></codeline>
<codeline lineno="11548"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1a353f15ab3ab586eebf1f6b58c3e2707b" kindref="member">QCPColorGradient::updateColorBuffer</ref>()</highlight></codeline>
<codeline lineno="11549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.size()<sp/>!=<sp/><ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>)</highlight></codeline>
<codeline lineno="11551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.resize(<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>);</highlight></codeline>
<codeline lineno="11552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="11553"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>indexToPosFactor<sp/>=<sp/>1.0/(double)(<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>-1);</highlight></codeline>
<codeline lineno="11555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_color_gradient_1a98fb68e359904b2c991fcae3e38a211a" kindref="member">mLevelCount</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="11556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position<sp/>=<sp/>i*indexToPosFactor;</highlight></codeline>
<codeline lineno="11558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QMap&lt;double,<sp/>QColor&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.lowerBound(position);</highlight></codeline>
<codeline lineno="11559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.constEnd())<sp/></highlight><highlight class="comment">//<sp/>position<sp/>is<sp/>on<sp/>or<sp/>after<sp/>last<sp/>stop,<sp/>use<sp/>color<sp/>of<sp/>last<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>[i]<sp/>=<sp/>(it-1).value().rgb();</highlight></codeline>
<codeline lineno="11562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.constBegin())<sp/></highlight><highlight class="comment">//<sp/>position<sp/>is<sp/>on<sp/>or<sp/>before<sp/>first<sp/>stop,<sp/>use<sp/>color<sp/>of<sp/>first<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>[i]<sp/>=<sp/>it.value().rgb();</highlight></codeline>
<codeline lineno="11565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>position<sp/>is<sp/>in<sp/>between<sp/>stops<sp/>(or<sp/>on<sp/>an<sp/>intermediate<sp/>stop),<sp/>interpolate<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMap&lt;double,<sp/>QColor&gt;::const_iterator<sp/>high<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="11568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMap&lt;double,<sp/>QColor&gt;::const_iterator<sp/>low<sp/>=<sp/>it-1;</highlight></codeline>
<codeline lineno="11569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(position-low.key())/(high.key()-low.key());<sp/></highlight><highlight class="comment">//<sp/>interpolation<sp/>factor<sp/>0..1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1a028cef73d863800a9ee93ffd641cce01" kindref="member">mColorInterpolation</ref>)</highlight></codeline>
<codeline lineno="11571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1a5e30f725c9cfe93999e268a9f92afbe7" kindref="member">ciRGB</ref>:</highlight></codeline>
<codeline lineno="11573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>[i]<sp/>=<sp/>qRgb((1-t)*low.value().red()<sp/>+<sp/>t*high.value().red(),</highlight></codeline>
<codeline lineno="11575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1-t)*low.value().green()<sp/>+<sp/>t*high.value().green(),</highlight></codeline>
<codeline lineno="11576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1-t)*low.value().blue()<sp/>+<sp/>t*high.value().blue());</highlight></codeline>
<codeline lineno="11577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient_1ac5dca17cc24336e6ca176610e7f77fc1af14ae62fcae11ecc07234eeaec5856cb" kindref="member">ciHSV</ref>:</highlight></codeline>
<codeline lineno="11580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QColor<sp/>lowHsv<sp/>=<sp/>low.value().toHsv();</highlight></codeline>
<codeline lineno="11582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QColor<sp/>highHsv<sp/>=<sp/>high.value().toHsv();</highlight></codeline>
<codeline lineno="11583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hueDiff<sp/>=<sp/>highHsv.hueF()-lowHsv.hueF();</highlight></codeline>
<codeline lineno="11585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hueDiff<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="11586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hue<sp/>=<sp/>lowHsv.hueF()<sp/>-<sp/>t*(1.0-hueDiff);</highlight></codeline>
<codeline lineno="11587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hueDiff<sp/>&lt;<sp/>-0.5)</highlight></codeline>
<codeline lineno="11588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hue<sp/>=<sp/>lowHsv.hueF()<sp/>+<sp/>t*(1.0+hueDiff);</highlight></codeline>
<codeline lineno="11589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hue<sp/>=<sp/>lowHsv.hueF()<sp/>+<sp/>t*hueDiff;</highlight></codeline>
<codeline lineno="11591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hue<sp/>&lt;<sp/>0)<sp/>hue<sp/>+=<sp/>1.0;</highlight></codeline>
<codeline lineno="11592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hue<sp/>&gt;=<sp/>1.0)<sp/>hue<sp/>-=<sp/>1.0;</highlight></codeline>
<codeline lineno="11593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>[i]<sp/>=<sp/>QColor::fromHsvF(hue,<sp/>(1-t)*lowHsv.saturationF()<sp/>+<sp/>t*highHsv.saturationF(),<sp/>(1-t)*lowHsv.valueF()<sp/>+<sp/>t*highHsv.valueF()).rgb();</highlight></codeline>
<codeline lineno="11594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11599"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.size()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="11600"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.fill(<ref refid="class_q_c_p_color_gradient_1a9e11a2b0974ef289d12c324822bc3a3e" kindref="member">mColorStops</ref>.constBegin().value().rgb());</highlight></codeline>
<codeline lineno="11602"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mColorStops<sp/>is<sp/>empty,<sp/>fill<sp/>color<sp/>buffer<sp/>with<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11603"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_gradient_1af8b5f0739faa5f8295154d47ce38ecff" kindref="member">mColorBuffer</ref>.fill(qRgb(0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="11605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11606"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_gradient_1abacf55e11f67d6722a687af1bb2687bd" kindref="member">mColorBufferInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11608"><highlight class="normal"></highlight></codeline>
<codeline lineno="11609"><highlight class="normal"></highlight></codeline>
<codeline lineno="11613"></codeline>
<codeline lineno="11651"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11652"><highlight class="normal"></highlight></codeline>
<codeline lineno="11733"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11734"><highlight class="normal"></highlight></codeline>
<codeline lineno="11739"><highlight class="normal"><ref refid="class_q_c_p_axis_rect_1a60b31dece805462c1b82eea2e69ba042" kindref="member">QCPAxisRect::QCPAxisRect</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setupDefaultAxes)<sp/>:</highlight></codeline>
<codeline lineno="11740"><highlight class="normal"><sp/><sp/>QCPLayoutElement(parentPlot),</highlight></codeline>
<codeline lineno="11741"><highlight class="normal"><sp/><sp/>mBackgroundBrush(Qt::NoBrush),</highlight></codeline>
<codeline lineno="11742"><highlight class="normal"><sp/><sp/>mBackgroundScaled(true),</highlight></codeline>
<codeline lineno="11743"><highlight class="normal"><sp/><sp/>mBackgroundScaledMode(Qt::KeepAspectRatioByExpanding),</highlight></codeline>
<codeline lineno="11744"><highlight class="normal"><sp/><sp/>mInsetLayout(new<sp/><ref refid="class_q_c_p_layout_inset" kindref="compound">QCPLayoutInset</ref>),</highlight></codeline>
<codeline lineno="11745"><highlight class="normal"><sp/><sp/>mRangeDrag(Qt::Horizontal|Qt::Vertical),</highlight></codeline>
<codeline lineno="11746"><highlight class="normal"><sp/><sp/>mRangeZoom(Qt::Horizontal|Qt::Vertical),</highlight></codeline>
<codeline lineno="11747"><highlight class="normal"><sp/><sp/>mRangeZoomFactorHorz(0.85),</highlight></codeline>
<codeline lineno="11748"><highlight class="normal"><sp/><sp/>mRangeZoomFactorVert(0.85),</highlight></codeline>
<codeline lineno="11749"><highlight class="normal"><sp/><sp/>mDragging(false)</highlight></codeline>
<codeline lineno="11750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11751"><highlight class="normal"><sp/><sp/>mInsetLayout-&gt;initializeParentPlot(mParentPlot);</highlight></codeline>
<codeline lineno="11752"><highlight class="normal"><sp/><sp/>mInsetLayout-&gt;setParentLayerable(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11753"><highlight class="normal"><sp/><sp/>mInsetLayout-&gt;setParent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11754"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="11755"><highlight class="normal"><sp/><sp/>setMinimumSize(50,<sp/>50);</highlight></codeline>
<codeline lineno="11756"><highlight class="normal"><sp/><sp/>setMinimumMargins(QMargins(15,<sp/>15,<sp/>15,<sp/>15));</highlight></codeline>
<codeline lineno="11757"><highlight class="normal"><sp/><sp/>mAxes.insert(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>,<sp/>QList&lt;QCPAxis*&gt;());</highlight></codeline>
<codeline lineno="11758"><highlight class="normal"><sp/><sp/>mAxes.insert(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>,<sp/>QList&lt;QCPAxis*&gt;());</highlight></codeline>
<codeline lineno="11759"><highlight class="normal"><sp/><sp/>mAxes.insert(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>,<sp/>QList&lt;QCPAxis*&gt;());</highlight></codeline>
<codeline lineno="11760"><highlight class="normal"><sp/><sp/>mAxes.insert(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>,<sp/>QList&lt;QCPAxis*&gt;());</highlight></codeline>
<codeline lineno="11761"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="11762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setupDefaultAxes)</highlight></codeline>
<codeline lineno="11763"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*xAxis<sp/>=<sp/>addAxis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>);</highlight></codeline>
<codeline lineno="11765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*yAxis<sp/>=<sp/>addAxis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>);</highlight></codeline>
<codeline lineno="11766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*xAxis2<sp/>=<sp/>addAxis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>);</highlight></codeline>
<codeline lineno="11767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*yAxis2<sp/>=<sp/>addAxis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="11768"><highlight class="normal"><sp/><sp/><sp/><sp/>setRangeDragAxes(xAxis,<sp/>yAxis);</highlight></codeline>
<codeline lineno="11769"><highlight class="normal"><sp/><sp/><sp/><sp/>setRangeZoomAxes(xAxis,<sp/>yAxis);</highlight></codeline>
<codeline lineno="11770"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11771"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11772"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11773"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11774"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11775"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11776"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_grid_1a209f40fdb252397b418b82d3494d8ea0" kindref="member">setZeroLinePen</ref>(Qt::NoPen);</highlight></codeline>
<codeline lineno="11777"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_grid_1a209f40fdb252397b418b82d3494d8ea0" kindref="member">setZeroLinePen</ref>(Qt::NoPen);</highlight></codeline>
<codeline lineno="11778"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11779"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11780"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11782"><highlight class="normal"></highlight></codeline>
<codeline lineno="11783"><highlight class="normal"><ref refid="class_q_c_p_axis_rect_1a463c44b1856ddbf82eb3f7b582839cd0" kindref="member">QCPAxisRect::~QCPAxisRect</ref>()</highlight></codeline>
<codeline lineno="11784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a255240399e0fd24baad80cbbe46f698a" kindref="member">mInsetLayout</ref>;</highlight></codeline>
<codeline lineno="11786"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a255240399e0fd24baad80cbbe46f698a" kindref="member">mInsetLayout</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11787"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="11788"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>axesList<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a18dcdc0dd6c7520bc9f3d15a7a3feec2" kindref="member">axes</ref>();</highlight></codeline>
<codeline lineno="11789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;axesList.size();<sp/>++i)</highlight></codeline>
<codeline lineno="11790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a03c39cd9704f0d36fb6cf980cdddcbaa" kindref="member">removeAxis</ref>(axesList.at(i));</highlight></codeline>
<codeline lineno="11791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11792"><highlight class="normal"></highlight></codeline>
<codeline lineno="11798"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a16e3e4646e52e4b5d5b865076c29ae58" kindref="member">QCPAxisRect::axisCount</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11799"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(type).size();</highlight></codeline>
<codeline lineno="11801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11802"><highlight class="normal"></highlight></codeline>
<codeline lineno="11808"><highlight class="normal"><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">QCPAxisRect::axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11809"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11810"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>ax(<ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(type));</highlight></codeline>
<codeline lineno="11811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>ax.size())</highlight></codeline>
<codeline lineno="11812"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ax.at(index);</highlight></codeline>
<codeline lineno="11814"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11815"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11816"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Axis<sp/>index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="11817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="11818"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11820"><highlight class="normal"></highlight></codeline>
<codeline lineno="11829"><highlight class="normal">QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a18dcdc0dd6c7520bc9f3d15a7a3feec2" kindref="member">QCPAxisRect::axes</ref>(QCPAxis::AxisTypes<sp/>types)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11830"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11831"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="11832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>))</highlight></codeline>
<codeline lineno="11833"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>);</highlight></codeline>
<codeline lineno="11834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>))</highlight></codeline>
<codeline lineno="11835"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="11836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>))</highlight></codeline>
<codeline lineno="11837"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>);</highlight></codeline>
<codeline lineno="11838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>))</highlight></codeline>
<codeline lineno="11839"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>);</highlight></codeline>
<codeline lineno="11840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11842"><highlight class="normal"></highlight></codeline>
<codeline lineno="11847"><highlight class="normal">QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a18dcdc0dd6c7520bc9f3d15a7a3feec2" kindref="member">QCPAxisRect::axes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="11848"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11849"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="11850"><highlight class="normal"><sp/><sp/>QHashIterator&lt;QCPAxis::AxisType,<sp/>QList&lt;QCPAxis*&gt;<sp/>&gt;<sp/>it(<ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>);</highlight></codeline>
<codeline lineno="11851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.hasNext())</highlight></codeline>
<codeline lineno="11852"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11853"><highlight class="normal"><sp/><sp/><sp/><sp/>it.next();</highlight></codeline>
<codeline lineno="11854"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>it.value();</highlight></codeline>
<codeline lineno="11855"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11858"><highlight class="normal"></highlight></codeline>
<codeline lineno="11878"><highlight class="normal"><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">QCPAxisRect::addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis)</highlight></codeline>
<codeline lineno="11879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11880"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*newAxis<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="11881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newAxis)</highlight></codeline>
<codeline lineno="11882"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11883"><highlight class="normal"><sp/><sp/><sp/><sp/>newAxis<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>type);</highlight></codeline>
<codeline lineno="11884"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>user<sp/>provided<sp/>existing<sp/>axis<sp/>instance,<sp/>do<sp/>some<sp/>sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11885"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="11887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;passed<sp/>axis<sp/>has<sp/>different<sp/>axis<sp/>type<sp/>than<sp/>specified<sp/>in<sp/>type<sp/>parameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="11890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11892"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;passed<sp/>axis<sp/>doesn&apos;t<sp/>have<sp/>this<sp/>axis<sp/>rect<sp/>as<sp/>parent<sp/>axis<sp/>rect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="11895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a18dcdc0dd6c7520bc9f3d15a7a3feec2" kindref="member">axes</ref>().contains(newAxis))</highlight></codeline>
<codeline lineno="11897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;passed<sp/>axis<sp/>is<sp/>already<sp/>owned<sp/>by<sp/>this<sp/>axis<sp/>rect&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="11900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>[type].<ref refid="class_q_c_p_axis_rect_1a871b9fe49e92b39a3cbe29a59e458536" kindref="member">size</ref>()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>axes<sp/>on<sp/>one<sp/>side,<sp/>add<sp/>half-bar<sp/>axis<sp/>ending<sp/>to<sp/>additional<sp/>axes<sp/>with<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11903"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invert<sp/>=<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)<sp/>||<sp/>(type<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>);</highlight></codeline>
<codeline lineno="11905"><highlight class="normal"><sp/><sp/><sp/><sp/>newAxis-&gt;<ref refid="class_q_c_p_axis_1a08af1c72db9ae4dc8cb8a973d44405ab" kindref="member">setLowerEnding</ref>(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref>(<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" kindref="member">QCPLineEnding::esHalfBar</ref>,<sp/>6,<sp/>10,<sp/>!invert));</highlight></codeline>
<codeline lineno="11906"><highlight class="normal"><sp/><sp/><sp/><sp/>newAxis-&gt;<ref refid="class_q_c_p_axis_1a69119b892fc306f651763596685aa377" kindref="member">setUpperEnding</ref>(<ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref>(<ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5a126c390f0c359fcd8df1fc5e38d26d5b" kindref="member">QCPLineEnding::esHalfBar</ref>,<sp/>6,<sp/>10,<sp/>invert));</highlight></codeline>
<codeline lineno="11907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11908"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>[type].append(newAxis);</highlight></codeline>
<codeline lineno="11909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newAxis;</highlight></codeline>
<codeline lineno="11910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11911"><highlight class="normal"></highlight></codeline>
<codeline lineno="11920"><highlight class="normal">QList&lt;QCPAxis*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a792e1f3d9cb1591fca135bb0de9b81fc" kindref="member">QCPAxisRect::addAxes</ref>(QCPAxis::AxisTypes<sp/>types)</highlight></codeline>
<codeline lineno="11921"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11922"><highlight class="normal"><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="11923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>))</highlight></codeline>
<codeline lineno="11924"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>);</highlight></codeline>
<codeline lineno="11925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>))</highlight></codeline>
<codeline lineno="11926"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="11927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>))</highlight></codeline>
<codeline lineno="11928"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>);</highlight></codeline>
<codeline lineno="11929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(types.testFlag(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>))</highlight></codeline>
<codeline lineno="11930"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>);</highlight></codeline>
<codeline lineno="11931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11933"><highlight class="normal"></highlight></codeline>
<codeline lineno="11941"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a03c39cd9704f0d36fb6cf980cdddcbaa" kindref="member">QCPAxisRect::removeAxis</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*axis)</highlight></codeline>
<codeline lineno="11942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11943"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>access<sp/>axis-&gt;axisType()<sp/>to<sp/>provide<sp/>safety<sp/>when<sp/>axis<sp/>is<sp/>an<sp/>invalid<sp/>pointer,<sp/>rather<sp/>go<sp/>through<sp/>all<sp/>axis<sp/>containers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11944"><highlight class="normal"><sp/><sp/>QHashIterator&lt;QCPAxis::AxisType,<sp/>QList&lt;QCPAxis*&gt;<sp/>&gt;<sp/>it(<ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>);</highlight></codeline>
<codeline lineno="11945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.hasNext())</highlight></codeline>
<codeline lineno="11946"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11947"><highlight class="normal"><sp/><sp/><sp/><sp/>it.next();</highlight></codeline>
<codeline lineno="11948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().contains(axis))</highlight></codeline>
<codeline lineno="11949"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>[it.key()].removeOne(axis);</highlight></codeline>
<codeline lineno="11951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qobject_cast&lt;QCustomPlot*&gt;(<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()))<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>this<sp/>isn&apos;t<sp/>called<sp/>from<sp/>QObject<sp/>dtor<sp/>when<sp/>QCustomPlot<sp/>is<sp/>already<sp/>destructed<sp/>(happens<sp/>when<sp/>the<sp/>axis<sp/>rect<sp/>is<sp/>not<sp/>in<sp/>any<sp/>layout<sp/>and<sp/>thus<sp/>QObject-child<sp/>of<sp/>QCustomPlot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()-&gt;<ref refid="class_q_custom_plot_1a8b46607021c463c94709d3504951cb47" kindref="member">axisRemoved</ref>(axis);</highlight></codeline>
<codeline lineno="11953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>;</highlight></codeline>
<codeline lineno="11954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="11957"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Axis<sp/>isn&apos;t<sp/>in<sp/>axis<sp/>rect:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>);</highlight></codeline>
<codeline lineno="11958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11960"><highlight class="normal"></highlight></codeline>
<codeline lineno="11987"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a5fa906175447b14206954f77fc7f1ef4" kindref="member">QCPAxisRect::setupFullAxesBox</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connectRanges)</highlight></codeline>
<codeline lineno="11988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11989"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*xAxis,<sp/>*yAxis,<sp/>*xAxis2,<sp/>*yAxis2;</highlight></codeline>
<codeline lineno="11990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a16e3e4646e52e4b5d5b865076c29ae58" kindref="member">axisCount</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="11991"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>);</highlight></codeline>
<codeline lineno="11992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11993"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>);</highlight></codeline>
<codeline lineno="11994"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="11995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a16e3e4646e52e4b5d5b865076c29ae58" kindref="member">axisCount</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="11996"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>);</highlight></codeline>
<codeline lineno="11997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11998"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>);</highlight></codeline>
<codeline lineno="11999"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a16e3e4646e52e4b5d5b865076c29ae58" kindref="member">axisCount</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="12001"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis2<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>);</highlight></codeline>
<codeline lineno="12002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12003"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis2<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>);</highlight></codeline>
<codeline lineno="12004"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a16e3e4646e52e4b5d5b865076c29ae58" kindref="member">axisCount</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="12006"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis2<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a2dc336092ccc57d44a46194c8a23e4f4" kindref="member">addAxis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="12007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12008"><highlight class="normal"><sp/><sp/><sp/><sp/>yAxis2<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="12009"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12010"><highlight class="normal"><sp/><sp/>xAxis-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12011"><highlight class="normal"><sp/><sp/>yAxis-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12012"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12013"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12014"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a04ba16e1f6f78d70f938519576ed32c8" kindref="member">setTickLabels</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12015"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a04ba16e1f6f78d70f938519576ed32c8" kindref="member">setTickLabels</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12016"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12017"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>());</highlight></codeline>
<codeline lineno="12018"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a2172fdb196b1a0dc3f40992fcad8e9e1" kindref="member">setRangeReversed</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>());</highlight></codeline>
<codeline lineno="12019"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1adef29cae617af4f519f6c40d1a866ca6" kindref="member">setScaleType</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>());</highlight></codeline>
<codeline lineno="12020"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a726186054be90487885a748aa1b42188" kindref="member">setScaleLogBase</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1ac937d2a602f865aff2ab6c1e288739f6" kindref="member">scaleLogBase</ref>());</highlight></codeline>
<codeline lineno="12021"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1ac891409315bc379e3b1abdb162c1a011" kindref="member">setTicks</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1a61c504ec7c5bed9a63edf45345995d10" kindref="member">ticks</ref>());</highlight></codeline>
<codeline lineno="12022"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a7c7111cbeac9ec5fcb40f93a1ef51a0b" kindref="member">setAutoTickCount</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1ac87454a1342f5d2939ab59e68b4d515b" kindref="member">autoTickCount</ref>());</highlight></codeline>
<codeline lineno="12023"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a4b1554ead9d7f9799650d51383e326dd" kindref="member">setSubTickCount</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1a290b4c1375476826daa10e914cb71dab" kindref="member">subTickCount</ref>());</highlight></codeline>
<codeline lineno="12024"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1adcbdec7a60054b88571e89599f4a45bf" kindref="member">setAutoSubTicks</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1ab9a950e16f373fe5c4b79078bb97c171" kindref="member">autoSubTicks</ref>());</highlight></codeline>
<codeline lineno="12025"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1af727db0acc6492c4c774c0700e738205" kindref="member">setTickStep</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1a0e6120d24266544441ab691f316a1b03" kindref="member">tickStep</ref>());</highlight></codeline>
<codeline lineno="12026"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a99fe77b034e06f5b723995beab96e741" kindref="member">setAutoTickStep</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1ae762920261b0c24beb56b893e5a2471d" kindref="member">autoTickStep</ref>());</highlight></codeline>
<codeline lineno="12027"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1ae585a54dc2aac662e90a2ca82f002590" kindref="member">setNumberFormat</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1ae6729b40845b29ffa5a440aa53cec215" kindref="member">numberFormat</ref>());</highlight></codeline>
<codeline lineno="12028"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a21dc8023ad7500382ad9574b48137e63" kindref="member">setNumberPrecision</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1a91cb2825060ac79a889296377fe0c7c1" kindref="member">numberPrecision</ref>());</highlight></codeline>
<codeline lineno="12029"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a54f24f5ce8feea25209388a863d7e448" kindref="member">setTickLabelType</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1a8a6f58a1ce12cfc4fadd379167668e8d" kindref="member">tickLabelType</ref>());</highlight></codeline>
<codeline lineno="12030"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a2ee0191daa03524a682113e63e05f7a7" kindref="member">setDateTimeFormat</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1a132b54ae184a12ed24c9af24f53dc70b" kindref="member">dateTimeFormat</ref>());</highlight></codeline>
<codeline lineno="12031"><highlight class="normal"><sp/><sp/>xAxis2-&gt;<ref refid="class_q_c_p_axis_1a262e06731debed7eee11fa6a81d67eaf" kindref="member">setDateTimeSpec</ref>(xAxis-&gt;<ref refid="class_q_c_p_axis_1afdd04c56ed29a9d948f840fc76f0d383" kindref="member">dateTimeSpec</ref>());</highlight></codeline>
<codeline lineno="12032"><highlight class="normal"></highlight></codeline>
<codeline lineno="12033"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>());</highlight></codeline>
<codeline lineno="12034"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a2172fdb196b1a0dc3f40992fcad8e9e1" kindref="member">setRangeReversed</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>());</highlight></codeline>
<codeline lineno="12035"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1adef29cae617af4f519f6c40d1a866ca6" kindref="member">setScaleType</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>());</highlight></codeline>
<codeline lineno="12036"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a726186054be90487885a748aa1b42188" kindref="member">setScaleLogBase</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1ac937d2a602f865aff2ab6c1e288739f6" kindref="member">scaleLogBase</ref>());</highlight></codeline>
<codeline lineno="12037"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1ac891409315bc379e3b1abdb162c1a011" kindref="member">setTicks</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1a61c504ec7c5bed9a63edf45345995d10" kindref="member">ticks</ref>());</highlight></codeline>
<codeline lineno="12038"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a7c7111cbeac9ec5fcb40f93a1ef51a0b" kindref="member">setAutoTickCount</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1ac87454a1342f5d2939ab59e68b4d515b" kindref="member">autoTickCount</ref>());</highlight></codeline>
<codeline lineno="12039"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a4b1554ead9d7f9799650d51383e326dd" kindref="member">setSubTickCount</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1a290b4c1375476826daa10e914cb71dab" kindref="member">subTickCount</ref>());</highlight></codeline>
<codeline lineno="12040"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1adcbdec7a60054b88571e89599f4a45bf" kindref="member">setAutoSubTicks</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1ab9a950e16f373fe5c4b79078bb97c171" kindref="member">autoSubTicks</ref>());</highlight></codeline>
<codeline lineno="12041"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1af727db0acc6492c4c774c0700e738205" kindref="member">setTickStep</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1a0e6120d24266544441ab691f316a1b03" kindref="member">tickStep</ref>());</highlight></codeline>
<codeline lineno="12042"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a99fe77b034e06f5b723995beab96e741" kindref="member">setAutoTickStep</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1ae762920261b0c24beb56b893e5a2471d" kindref="member">autoTickStep</ref>());</highlight></codeline>
<codeline lineno="12043"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1ae585a54dc2aac662e90a2ca82f002590" kindref="member">setNumberFormat</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1ae6729b40845b29ffa5a440aa53cec215" kindref="member">numberFormat</ref>());</highlight></codeline>
<codeline lineno="12044"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a21dc8023ad7500382ad9574b48137e63" kindref="member">setNumberPrecision</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1a91cb2825060ac79a889296377fe0c7c1" kindref="member">numberPrecision</ref>());</highlight></codeline>
<codeline lineno="12045"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a54f24f5ce8feea25209388a863d7e448" kindref="member">setTickLabelType</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1a8a6f58a1ce12cfc4fadd379167668e8d" kindref="member">tickLabelType</ref>());</highlight></codeline>
<codeline lineno="12046"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a2ee0191daa03524a682113e63e05f7a7" kindref="member">setDateTimeFormat</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1a132b54ae184a12ed24c9af24f53dc70b" kindref="member">dateTimeFormat</ref>());</highlight></codeline>
<codeline lineno="12047"><highlight class="normal"><sp/><sp/>yAxis2-&gt;<ref refid="class_q_c_p_axis_1a262e06731debed7eee11fa6a81d67eaf" kindref="member">setDateTimeSpec</ref>(yAxis-&gt;<ref refid="class_q_c_p_axis_1afdd04c56ed29a9d948f840fc76f0d383" kindref="member">dateTimeSpec</ref>());</highlight></codeline>
<codeline lineno="12048"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connectRanges)</highlight></codeline>
<codeline lineno="12050"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12051"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(xAxis,<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/>xAxis2,<sp/>SLOT(setRange(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="12052"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(yAxis,<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/>yAxis2,<sp/>SLOT(setRange(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="12053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12055"><highlight class="normal"></highlight></codeline>
<codeline lineno="12064"><highlight class="normal">QList&lt;QCPAbstractPlottable*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a5b0d629c8de5572945eeae79a142296e" kindref="member">QCPAxisRect::plottables</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12065"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12066"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>don&apos;t<sp/>append<sp/>all<sp/>QCPAxis::plottables()<sp/>into<sp/>a<sp/>list,<sp/>because<sp/>we<sp/>might<sp/>get<sp/>duplicate<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12067"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractPlottable*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="12068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="12069"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.at(i)-&gt;keyAxis()-&gt;axisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.at(i)-&gt;valueAxis()-&gt;axisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a62bf8e4e7f8d23fc1e9301ba0148269f" kindref="member">mPlottables</ref>.at(i));</highlight></codeline>
<codeline lineno="12072"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12075"><highlight class="normal"></highlight></codeline>
<codeline lineno="12084"><highlight class="normal">QList&lt;QCPGraph*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1afa4ff90901d9275f670e24b40e3c1b25" kindref="member">QCPAxisRect::graphs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12085"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12086"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>don&apos;t<sp/>append<sp/>all<sp/>QCPAxis::graphs()<sp/>into<sp/>a<sp/>list,<sp/>because<sp/>we<sp/>might<sp/>get<sp/>duplicate<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12087"><highlight class="normal"><sp/><sp/>QList&lt;QCPGraph*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="12088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="12089"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.at(i)-&gt;keyAxis()-&gt;axisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.at(i)-&gt;valueAxis()-&gt;axisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1adaf8d407d72a725169d7dbed2ee386bb" kindref="member">mGraphs</ref>.at(i));</highlight></codeline>
<codeline lineno="12092"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12095"><highlight class="normal"></highlight></codeline>
<codeline lineno="12106"><highlight class="normal">QList&lt;QCPAbstractItem<sp/>*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a0f17ed539962cfcbaca8ce0b1776c840" kindref="member">QCPAxisRect::items</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12107"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>don&apos;t<sp/>just<sp/>append<sp/>all<sp/>QCPAxis::items()<sp/>into<sp/>a<sp/>list,<sp/>because<sp/>we<sp/>might<sp/>get<sp/>duplicate<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>miss<sp/>those<sp/>items<sp/>that<sp/>have<sp/>this<sp/>axis<sp/>rect<sp/>as<sp/>clipAxisRect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12110"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractItem*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="12111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemId=0;<sp/>itemId&lt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.size();<sp/>++itemId)</highlight></codeline>
<codeline lineno="12112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.at(itemId)-&gt;clipAxisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.at(itemId));</highlight></codeline>
<codeline lineno="12116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12118"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QCPItemPosition*&gt;<sp/>positions<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.at(itemId)-&gt;positions();</highlight></codeline>
<codeline lineno="12119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posId=0;<sp/>posId&lt;positions.size();<sp/>++posId)</highlight></codeline>
<codeline lineno="12120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positions.at(posId)-&gt;axisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="12122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positions.at(posId)-&gt;keyAxis()-&gt;axisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="12123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positions.at(posId)-&gt;valueAxis()-&gt;axisRect()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a6a93905372326e31e98d6c3bc8953ec8" kindref="member">mItems</ref>.at(itemId));</highlight></codeline>
<codeline lineno="12126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12132"><highlight class="normal"></highlight></codeline>
<codeline lineno="12141"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a255080a017df9083a60a321ef2ba9ed8" kindref="member">QCPAxisRect::update</ref>(UpdatePhase<sp/>phase)</highlight></codeline>
<codeline lineno="12142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12143"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" kindref="member">QCPLayoutElement::update</ref>(phase);</highlight></codeline>
<codeline lineno="12144"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(phase)</highlight></codeline>
<codeline lineno="12146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374dad6119882eba136357c2f627992e527d3" kindref="member">upPreparation</ref>:</highlight></codeline>
<codeline lineno="12148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QList&lt;QCPAxis*&gt;<sp/>allAxes<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a18dcdc0dd6c7520bc9f3d15a7a3feec2" kindref="member">axes</ref>();</highlight></codeline>
<codeline lineno="12150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;allAxes.size();<sp/>++i)</highlight></codeline>
<codeline lineno="12151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allAxes.at(i)-&gt;setupTickVectors();</highlight></codeline>
<codeline lineno="12152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" kindref="member">upLayout</ref>:</highlight></codeline>
<codeline lineno="12155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a255240399e0fd24baad80cbbe46f698a" kindref="member">mInsetLayout</ref>-&gt;<ref refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" kindref="member">setOuterRect</ref>(<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>());</highlight></codeline>
<codeline lineno="12157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12161"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>update<sp/>call<sp/>on<sp/>to<sp/>inset<sp/>layout<sp/>(doesn&apos;t<sp/>happen<sp/>automatically,<sp/>because<sp/>QCPAxisRect<sp/>doesn&apos;t<sp/>derive<sp/>from<sp/>QCPLayout):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12163"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a255240399e0fd24baad80cbbe46f698a" kindref="member">mInsetLayout</ref>-&gt;<ref refid="class_q_c_p_layout_1a34ab477e820537ded7bade4399c482fd" kindref="member">update</ref>(phase);</highlight></codeline>
<codeline lineno="12164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12165"><highlight class="normal"></highlight></codeline>
<codeline lineno="12166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12167"><highlight class="normal">QList&lt;QCPLayoutElement*&gt;<sp/><ref refid="class_q_c_p_axis_rect_1a2bda6bf2b5b5797f92583cecd01c8949" kindref="member">QCPAxisRect::elements</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recursive)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12168"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12169"><highlight class="normal"><sp/><sp/>QList&lt;QCPLayoutElement*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="12170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a255240399e0fd24baad80cbbe46f698a" kindref="member">mInsetLayout</ref>)</highlight></codeline>
<codeline lineno="12171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12172"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_rect_1a255240399e0fd24baad80cbbe46f698a" kindref="member">mInsetLayout</ref>;</highlight></codeline>
<codeline lineno="12173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recursive)</highlight></codeline>
<codeline lineno="12174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>mInsetLayout-&gt;<ref refid="class_q_c_p_layout_1a51fe2675b53e829130b229bc1f7b0f99" kindref="member">elements</ref>(recursive);</highlight></codeline>
<codeline lineno="12175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12178"><highlight class="normal"></highlight></codeline>
<codeline lineno="12179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a9a6dd0763701cbc7d01f899bcbb3f9ca" kindref="member">QCPAxisRect::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12181"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12182"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12184"><highlight class="normal"></highlight></codeline>
<codeline lineno="12185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1afb1bbbbda8345cd2710d92ee48440b53" kindref="member">QCPAxisRect::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="12187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12188"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1ab49d338d1ce74b476fcead5b32cf06dc" kindref="member">drawBackground</ref>(painter);</highlight></codeline>
<codeline lineno="12189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12190"><highlight class="normal"></highlight></codeline>
<codeline lineno="12206"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1af615ab5e52b8e0a9a0eff415b6559db5" kindref="member">QCPAxisRect::setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm)</highlight></codeline>
<codeline lineno="12207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12208"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a38fb1a15f43228a0c124553649303722" kindref="member">mBackgroundPixmap</ref><sp/>=<sp/>pm;</highlight></codeline>
<codeline lineno="12209"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1aa74b9415598d59b49290e41e42d7ee27" kindref="member">mScaledBackgroundPixmap</ref><sp/>=<sp/>QPixmap();</highlight></codeline>
<codeline lineno="12210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12211"><highlight class="normal"></highlight></codeline>
<codeline lineno="12225"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1af615ab5e52b8e0a9a0eff415b6559db5" kindref="member">QCPAxisRect::setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="12226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12227"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a5748e1a37f63c428e38b0a7724b46259" kindref="member">mBackgroundBrush</ref><sp/>=<sp/>brush;</highlight></codeline>
<codeline lineno="12228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12229"><highlight class="normal"></highlight></codeline>
<codeline lineno="12237"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1af615ab5e52b8e0a9a0eff415b6559db5" kindref="member">QCPAxisRect::setBackground</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled,<sp/>Qt::AspectRatioMode<sp/>mode)</highlight></codeline>
<codeline lineno="12238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12239"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a38fb1a15f43228a0c124553649303722" kindref="member">mBackgroundPixmap</ref><sp/>=<sp/>pm;</highlight></codeline>
<codeline lineno="12240"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1aa74b9415598d59b49290e41e42d7ee27" kindref="member">mScaledBackgroundPixmap</ref><sp/>=<sp/>QPixmap();</highlight></codeline>
<codeline lineno="12241"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a5ad835f0fae5d7cc5ada9e063641dbf1" kindref="member">mBackgroundScaled</ref><sp/>=<sp/>scaled;</highlight></codeline>
<codeline lineno="12242"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a859fd368e794663e346b4f53f35078e9" kindref="member">mBackgroundScaledMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="12243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12244"><highlight class="normal"></highlight></codeline>
<codeline lineno="12255"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ae6d36c3e0e968ffb991170a018e7b503" kindref="member">QCPAxisRect::setBackgroundScaled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled)</highlight></codeline>
<codeline lineno="12256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12257"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a5ad835f0fae5d7cc5ada9e063641dbf1" kindref="member">mBackgroundScaled</ref><sp/>=<sp/>scaled;</highlight></codeline>
<codeline lineno="12258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12259"><highlight class="normal"></highlight></codeline>
<codeline lineno="12265"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a5ef77ea829c9de7ba248e473f48f7305" kindref="member">QCPAxisRect::setBackgroundScaledMode</ref>(Qt::AspectRatioMode<sp/>mode)</highlight></codeline>
<codeline lineno="12266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12267"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a859fd368e794663e346b4f53f35078e9" kindref="member">mBackgroundScaledMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="12268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12269"><highlight class="normal"></highlight></codeline>
<codeline lineno="12275"><highlight class="normal"><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a6d7c22cfc54fac7a3d6ef80b133a8574" kindref="member">QCPAxisRect::rangeDragAxis</ref>(Qt::Orientation<sp/>orientation)</highlight></codeline>
<codeline lineno="12276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(orientation<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/><ref refid="class_q_c_p_axis_rect_1aeaaa38c6d2030dd5f84461e2596e41e3" kindref="member">mRangeDragHorzAxis</ref>.data()<sp/>:<sp/><ref refid="class_q_c_p_axis_rect_1a3e41dffec18987366f2a8ffd80689c12" kindref="member">mRangeDragVertAxis</ref>.data());</highlight></codeline>
<codeline lineno="12278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12279"><highlight class="normal"></highlight></codeline>
<codeline lineno="12285"><highlight class="normal"><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*<ref refid="class_q_c_p_axis_rect_1a679c63f2b8daccfe6ec5110dce3dd3b6" kindref="member">QCPAxisRect::rangeZoomAxis</ref>(Qt::Orientation<sp/>orientation)</highlight></codeline>
<codeline lineno="12286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(orientation<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/><ref refid="class_q_c_p_axis_rect_1ae22f882bab20518559f3fbb84243d0ab" kindref="member">mRangeZoomHorzAxis</ref>.data()<sp/>:<sp/><ref refid="class_q_c_p_axis_rect_1a8b9acd16a203a9692bd35a9465f54bc1" kindref="member">mRangeZoomVertAxis</ref>.data());</highlight></codeline>
<codeline lineno="12288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12289"><highlight class="normal"></highlight></codeline>
<codeline lineno="12295"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ae4e6c4d143aacc88d2d3c56f117c2fe1" kindref="member">QCPAxisRect::rangeZoomFactor</ref>(Qt::Orientation<sp/>orientation)</highlight></codeline>
<codeline lineno="12296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(orientation<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/><ref refid="class_q_c_p_axis_rect_1ad08d0250ed7b99de387d0ea6c7fd4dc1" kindref="member">mRangeZoomFactorHorz</ref><sp/>:<sp/><ref refid="class_q_c_p_axis_rect_1a32f063629581d5bf82b12769940b34ad" kindref="member">mRangeZoomFactorVert</ref>);</highlight></codeline>
<codeline lineno="12298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12299"><highlight class="normal"></highlight></codeline>
<codeline lineno="12316"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ae6aef2f7211ba6097c925dcd26008418" kindref="member">QCPAxisRect::setRangeDrag</ref>(Qt::Orientations<sp/>orientations)</highlight></codeline>
<codeline lineno="12317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12318"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1aa9f107f66ca3469ad50ee6cea7c9e237" kindref="member">mRangeDrag</ref><sp/>=<sp/>orientations;</highlight></codeline>
<codeline lineno="12319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12320"><highlight class="normal"></highlight></codeline>
<codeline lineno="12336"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a7960a9d222f1c31d558b064b60f86a31" kindref="member">QCPAxisRect::setRangeZoom</ref>(Qt::Orientations<sp/>orientations)</highlight></codeline>
<codeline lineno="12337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12338"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a215eff671d48df2edccc36e7f976f28c" kindref="member">mRangeZoom</ref><sp/>=<sp/>orientations;</highlight></codeline>
<codeline lineno="12339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12340"><highlight class="normal"></highlight></codeline>
<codeline lineno="12347"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a648cce336bd99daac4a5ca3e5743775d" kindref="member">QCPAxisRect::setRangeDragAxes</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*horizontal,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*vertical)</highlight></codeline>
<codeline lineno="12348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12349"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1aeaaa38c6d2030dd5f84461e2596e41e3" kindref="member">mRangeDragHorzAxis</ref><sp/>=<sp/>horizontal;</highlight></codeline>
<codeline lineno="12350"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a3e41dffec18987366f2a8ffd80689c12" kindref="member">mRangeDragVertAxis</ref><sp/>=<sp/>vertical;</highlight></codeline>
<codeline lineno="12351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12352"><highlight class="normal"></highlight></codeline>
<codeline lineno="12360"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a9442cca2aa358405f39a64d51eca13d2" kindref="member">QCPAxisRect::setRangeZoomAxes</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*horizontal,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*vertical)</highlight></codeline>
<codeline lineno="12361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12362"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1ae22f882bab20518559f3fbb84243d0ab" kindref="member">mRangeZoomHorzAxis</ref><sp/>=<sp/>horizontal;</highlight></codeline>
<codeline lineno="12363"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a8b9acd16a203a9692bd35a9465f54bc1" kindref="member">mRangeZoomVertAxis</ref><sp/>=<sp/>vertical;</highlight></codeline>
<codeline lineno="12364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12365"><highlight class="normal"></highlight></codeline>
<codeline lineno="12376"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a895d7ac745ea614e04056244b3c138ac" kindref="member">QCPAxisRect::setRangeZoomFactor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>horizontalFactor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>verticalFactor)</highlight></codeline>
<codeline lineno="12377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12378"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1ad08d0250ed7b99de387d0ea6c7fd4dc1" kindref="member">mRangeZoomFactorHorz</ref><sp/>=<sp/>horizontalFactor;</highlight></codeline>
<codeline lineno="12379"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a32f063629581d5bf82b12769940b34ad" kindref="member">mRangeZoomFactorVert</ref><sp/>=<sp/>verticalFactor;</highlight></codeline>
<codeline lineno="12380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12381"><highlight class="normal"></highlight></codeline>
<codeline lineno="12386"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a895d7ac745ea614e04056244b3c138ac" kindref="member">QCPAxisRect::setRangeZoomFactor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor)</highlight></codeline>
<codeline lineno="12387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12388"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1ad08d0250ed7b99de387d0ea6c7fd4dc1" kindref="member">mRangeZoomFactorHorz</ref><sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="12389"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a32f063629581d5bf82b12769940b34ad" kindref="member">mRangeZoomFactorVert</ref><sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="12390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12391"><highlight class="normal"></highlight></codeline>
<codeline lineno="12410"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ab49d338d1ce74b476fcead5b32cf06dc" kindref="member">QCPAxisRect::drawBackground</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="12411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>background<sp/>fill:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a5748e1a37f63c428e38b0a7724b46259" kindref="member">mBackgroundBrush</ref><sp/>!=<sp/>Qt::NoBrush)</highlight></codeline>
<codeline lineno="12414"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;fillRect(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>,<sp/><ref refid="class_q_c_p_axis_rect_1a5748e1a37f63c428e38b0a7724b46259" kindref="member">mBackgroundBrush</ref>);</highlight></codeline>
<codeline lineno="12415"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>background<sp/>pixmap<sp/>(on<sp/>top<sp/>of<sp/>fill,<sp/>if<sp/>brush<sp/>specified):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_axis_rect_1a38fb1a15f43228a0c124553649303722" kindref="member">mBackgroundPixmap</ref>.isNull())</highlight></codeline>
<codeline lineno="12418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a5ad835f0fae5d7cc5ada9e063641dbf1" kindref="member">mBackgroundScaled</ref>)</highlight></codeline>
<codeline lineno="12420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>mScaledBackground<sp/>needs<sp/>to<sp/>be<sp/>updated:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QSize<sp/>scaledSize(<ref refid="class_q_c_p_axis_rect_1a38fb1a15f43228a0c124553649303722" kindref="member">mBackgroundPixmap</ref>.size());</highlight></codeline>
<codeline lineno="12423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledSize.scale(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.size(),<sp/><ref refid="class_q_c_p_axis_rect_1a859fd368e794663e346b4f53f35078e9" kindref="member">mBackgroundScaledMode</ref>);</highlight></codeline>
<codeline lineno="12424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1aa74b9415598d59b49290e41e42d7ee27" kindref="member">mScaledBackgroundPixmap</ref>.size()<sp/>!=<sp/>scaledSize)</highlight></codeline>
<codeline lineno="12425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1aa74b9415598d59b49290e41e42d7ee27" kindref="member">mScaledBackgroundPixmap</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a38fb1a15f43228a0c124553649303722" kindref="member">mBackgroundPixmap</ref>.scaled(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.size(),<sp/><ref refid="class_q_c_p_axis_rect_1a859fd368e794663e346b4f53f35078e9" kindref="member">mBackgroundScaledMode</ref>,<sp/>Qt::SmoothTransformation);</highlight></codeline>
<codeline lineno="12426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.topLeft(),<sp/><ref refid="class_q_c_p_axis_rect_1aa74b9415598d59b49290e41e42d7ee27" kindref="member">mScaledBackgroundPixmap</ref>,<sp/>QRect(0,<sp/>0,<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.width(),<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.height())<sp/>&amp;<sp/><ref refid="class_q_c_p_axis_rect_1aa74b9415598d59b49290e41e42d7ee27" kindref="member">mScaledBackgroundPixmap</ref>.rect());</highlight></codeline>
<codeline lineno="12427"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.topLeft(),<sp/><ref refid="class_q_c_p_axis_rect_1a38fb1a15f43228a0c124553649303722" kindref="member">mBackgroundPixmap</ref>,<sp/>QRect(0,<sp/>0,<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.width(),<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.height()));</highlight></codeline>
<codeline lineno="12430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12433"><highlight class="normal"></highlight></codeline>
<codeline lineno="12444"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a6024ccdc74f5dc0e8a0fe482e5b28a20" kindref="member">QCPAxisRect::updateAxesOffset</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type)</highlight></codeline>
<codeline lineno="12445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QCPAxis*&gt;<sp/>axesList<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(type);</highlight></codeline>
<codeline lineno="12447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axesList.isEmpty())</highlight></codeline>
<codeline lineno="12448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12449"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirstVisible<sp/>=<sp/>!axesList.first()-&gt;visible();<sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>first<sp/>axis<sp/>is<sp/>visible,<sp/>the<sp/>second<sp/>axis<sp/>(which<sp/>is<sp/>where<sp/>the<sp/>loop<sp/>starts)<sp/>isn&apos;t<sp/>the<sp/>first<sp/>visible<sp/>axis,<sp/>so<sp/>initialize<sp/>with<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;axesList.size();<sp/>++i)</highlight></codeline>
<codeline lineno="12452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>axesList.at(i-1)-&gt;offset()<sp/>+<sp/>axesList.at(i-1)-&gt;calculateMargin();</highlight></codeline>
<codeline lineno="12454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axesList.at(i)-&gt;visible())<sp/></highlight><highlight class="comment">//<sp/>only<sp/>add<sp/>inner<sp/>tick<sp/>length<sp/>to<sp/>offset<sp/>if<sp/>this<sp/>axis<sp/>is<sp/>visible<sp/>and<sp/>it&apos;s<sp/>not<sp/>the<sp/>first<sp/>visible<sp/>one<sp/>(might<sp/>happen<sp/>if<sp/>true<sp/>first<sp/>axis<sp/>is<sp/>invisible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isFirstVisible)</highlight></codeline>
<codeline lineno="12457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>axesList.at(i)-&gt;tickLengthIn();</highlight></codeline>
<codeline lineno="12458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isFirstVisible<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12460"><highlight class="normal"><sp/><sp/><sp/><sp/>axesList.at(i)-&gt;setOffset(offset);</highlight></codeline>
<codeline lineno="12461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12463"><highlight class="normal"></highlight></codeline>
<codeline lineno="12464"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12465"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1ae79f18302e6507586aa8c032a5f9ed1c" kindref="member">QCPAxisRect::calculateAutoMargin</ref>(<ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref><sp/>side)</highlight></codeline>
<codeline lineno="12466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" kindref="member">mAutoMargins</ref>.testFlag(side))</highlight></codeline>
<codeline lineno="12468"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Called<sp/>with<sp/>side<sp/>that<sp/>isn&apos;t<sp/>specified<sp/>as<sp/>auto<sp/>margin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12469"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12470"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a6024ccdc74f5dc0e8a0fe482e5b28a20" kindref="member">updateAxesOffset</ref>(<ref refid="class_q_c_p_axis_1ac0a6b77bd52bec6c81cd62d167cfeba6" kindref="member">QCPAxis::marginSideToAxisType</ref>(side));</highlight></codeline>
<codeline lineno="12471"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>only<sp/>need<sp/>to<sp/>look<sp/>at<sp/>the<sp/>last<sp/>(outer<sp/>most)<sp/>axis<sp/>to<sp/>determine<sp/>the<sp/>total<sp/>margin,<sp/>due<sp/>to<sp/>updateAxisOffset<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QList&lt;QCPAxis*&gt;<sp/>axesList<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1afe7a24d2a2bea98fc552fa826350ba81" kindref="member">mAxes</ref>.value(<ref refid="class_q_c_p_axis_1ac0a6b77bd52bec6c81cd62d167cfeba6" kindref="member">QCPAxis::marginSideToAxisType</ref>(side));</highlight></codeline>
<codeline lineno="12474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axesList.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="12475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>axesList.last()-&gt;offset()<sp/>+<sp/>axesList.last()-&gt;calculateMargin();</highlight></codeline>
<codeline lineno="12476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="12478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12479"><highlight class="normal"></highlight></codeline>
<codeline lineno="12491"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a77501dbeccdac7256f7979b05077c04e" kindref="member">QCPAxisRect::mousePressEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="12492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12493"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a032896b28f83a58010d8d533b78c49df" kindref="member">mDragStart</ref><sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;pos();<sp/></highlight><highlight class="comment">//<sp/>need<sp/>this<sp/>even<sp/>when<sp/>not<sp/>LeftButton<sp/>is<sp/>pressed,<sp/>to<sp/>determine<sp/>in<sp/>releaseEvent<sp/>whether<sp/>it<sp/>was<sp/>a<sp/>full<sp/>click<sp/>(no<sp/>position<sp/>change<sp/>between<sp/>press<sp/>and<sp/>release)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;buttons()<sp/>&amp;<sp/>Qt::LeftButton)</highlight></codeline>
<codeline lineno="12495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1ab49a6698194cf0e9e38a1d734c0888a8" kindref="member">mDragging</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>antialiasing<sp/>backup<sp/>in<sp/>case<sp/>we<sp/>start<sp/>dragging:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1ae07f2895a34d13a97a10cae4d8e17a36" kindref="member">noAntialiasingOnDrag</ref>())</highlight></codeline>
<codeline lineno="12499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1aa4a24f76360cfebe1bcf17a77fa7521b" kindref="member">mAADragBackup</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a81e954fbb485bb44c609e5707f0067b3" kindref="member">antialiasedElements</ref>();</highlight></codeline>
<codeline lineno="12501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a6fcb12e052e276d57efbb128be31d6f5" kindref="member">mNotAADragBackup</ref><sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a8060cee59757213764382a78d3196189" kindref="member">notAntialiasedElements</ref>();</highlight></codeline>
<codeline lineno="12502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mouse<sp/>range<sp/>dragging<sp/>interaction:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a12401c02b6949a717f5749bb28c62983" kindref="member">interactions</ref>().testFlag(<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a2c4432b9aceafb94000be8d1b589ef18" kindref="member">QCP::iRangeDrag</ref>))</highlight></codeline>
<codeline lineno="12505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1aeaaa38c6d2030dd5f84461e2596e41e3" kindref="member">mRangeDragHorzAxis</ref>)</highlight></codeline>
<codeline lineno="12507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a41936cf473ec638bec382f5a40cdb1f3" kindref="member">mDragStartHorzRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1aeaaa38c6d2030dd5f84461e2596e41e3" kindref="member">mRangeDragHorzAxis</ref>.data()-&gt;range();</highlight></codeline>
<codeline lineno="12508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a3e41dffec18987366f2a8ffd80689c12" kindref="member">mRangeDragVertAxis</ref>)</highlight></codeline>
<codeline lineno="12509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a1a5ae4c74b8bd46baf91bf4e4f4165f0" kindref="member">mDragStartVertRange</ref><sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a3e41dffec18987366f2a8ffd80689c12" kindref="member">mRangeDragVertAxis</ref>.data()-&gt;range();</highlight></codeline>
<codeline lineno="12510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12513"><highlight class="normal"></highlight></codeline>
<codeline lineno="12521"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a4baf3d5dd69166788f6ceda0ea182c6e" kindref="member">QCPAxisRect::mouseMoveEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="12522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mouse<sp/>range<sp/>dragging<sp/>interaction:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1ab49a6698194cf0e9e38a1d734c0888a8" kindref="member">mDragging</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a12401c02b6949a717f5749bb28c62983" kindref="member">interactions</ref>().testFlag(<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a2c4432b9aceafb94000be8d1b589ef18" kindref="member">QCP::iRangeDrag</ref>))</highlight></codeline>
<codeline lineno="12525"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1aa9f107f66ca3469ad50ee6cea7c9e237" kindref="member">mRangeDrag</ref>.testFlag(Qt::Horizontal))</highlight></codeline>
<codeline lineno="12527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*rangeDragHorzAxis<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1aeaaa38c6d2030dd5f84461e2596e41e3" kindref="member">mRangeDragHorzAxis</ref>.data())</highlight></codeline>
<codeline lineno="12529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rangeDragHorzAxis-&gt;mScaleType<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">QCPAxis::stLinear</ref>)</highlight></codeline>
<codeline lineno="12531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>rangeDragHorzAxis-&gt;pixelToCoord(<ref refid="class_q_c_p_axis_rect_1a032896b28f83a58010d8d533b78c49df" kindref="member">mDragStart</ref>.x())<sp/>-<sp/>rangeDragHorzAxis-&gt;pixelToCoord(event-&gt;pos().x());</highlight></codeline>
<codeline lineno="12533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rangeDragHorzAxis-&gt;setRange(<ref refid="class_q_c_p_axis_rect_1a41936cf473ec638bec382f5a40cdb1f3" kindref="member">mDragStartHorzRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>+diff,<sp/><ref refid="class_q_c_p_axis_rect_1a41936cf473ec638bec382f5a40cdb1f3" kindref="member">mDragStartHorzRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>+diff);</highlight></codeline>
<codeline lineno="12534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rangeDragHorzAxis-&gt;mScaleType<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="12535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>rangeDragHorzAxis-&gt;pixelToCoord(<ref refid="class_q_c_p_axis_rect_1a032896b28f83a58010d8d533b78c49df" kindref="member">mDragStart</ref>.x())<sp/>/<sp/>rangeDragHorzAxis-&gt;pixelToCoord(event-&gt;pos().x());</highlight></codeline>
<codeline lineno="12537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rangeDragHorzAxis-&gt;setRange(<ref refid="class_q_c_p_axis_rect_1a41936cf473ec638bec382f5a40cdb1f3" kindref="member">mDragStartHorzRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>*diff,<sp/><ref refid="class_q_c_p_axis_rect_1a41936cf473ec638bec382f5a40cdb1f3" kindref="member">mDragStartHorzRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>*diff);</highlight></codeline>
<codeline lineno="12538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1aa9f107f66ca3469ad50ee6cea7c9e237" kindref="member">mRangeDrag</ref>.testFlag(Qt::Vertical))</highlight></codeline>
<codeline lineno="12542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*rangeDragVertAxis<sp/>=<sp/><ref refid="class_q_c_p_axis_rect_1a3e41dffec18987366f2a8ffd80689c12" kindref="member">mRangeDragVertAxis</ref>.data())</highlight></codeline>
<codeline lineno="12544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rangeDragVertAxis-&gt;mScaleType<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">QCPAxis::stLinear</ref>)</highlight></codeline>
<codeline lineno="12546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>rangeDragVertAxis-&gt;pixelToCoord(<ref refid="class_q_c_p_axis_rect_1a032896b28f83a58010d8d533b78c49df" kindref="member">mDragStart</ref>.y())<sp/>-<sp/>rangeDragVertAxis-&gt;pixelToCoord(event-&gt;pos().y());</highlight></codeline>
<codeline lineno="12548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rangeDragVertAxis-&gt;setRange(<ref refid="class_q_c_p_axis_rect_1a1a5ae4c74b8bd46baf91bf4e4f4165f0" kindref="member">mDragStartVertRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>+diff,<sp/><ref refid="class_q_c_p_axis_rect_1a1a5ae4c74b8bd46baf91bf4e4f4165f0" kindref="member">mDragStartVertRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>+diff);</highlight></codeline>
<codeline lineno="12549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rangeDragVertAxis-&gt;mScaleType<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="12550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>rangeDragVertAxis-&gt;pixelToCoord(<ref refid="class_q_c_p_axis_rect_1a032896b28f83a58010d8d533b78c49df" kindref="member">mDragStart</ref>.y())<sp/>/<sp/>rangeDragVertAxis-&gt;pixelToCoord(event-&gt;pos().y());</highlight></codeline>
<codeline lineno="12552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rangeDragVertAxis-&gt;setRange(<ref refid="class_q_c_p_axis_rect_1a1a5ae4c74b8bd46baf91bf4e4f4165f0" kindref="member">mDragStartVertRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>*diff,<sp/><ref refid="class_q_c_p_axis_rect_1a1a5ae4c74b8bd46baf91bf4e4f4165f0" kindref="member">mDragStartVertRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>*diff);</highlight></codeline>
<codeline lineno="12553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1aa9f107f66ca3469ad50ee6cea7c9e237" kindref="member">mRangeDrag</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>either<sp/>vertical<sp/>or<sp/>horizontal<sp/>drag<sp/>was<sp/>enabled,<sp/>do<sp/>a<sp/>replot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1ae07f2895a34d13a97a10cae4d8e17a36" kindref="member">noAntialiasingOnDrag</ref>())</highlight></codeline>
<codeline lineno="12559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1ae10d685b5eabea2999fb8775ca173c24" kindref="member">setNotAntialiasedElements</ref>(<ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa897c232a0ffc8368e7c100ffc59ef31" kindref="member">QCP::aeAll</ref>);</highlight></codeline>
<codeline lineno="12560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a606fd384b2a637ce2c24899bcbde77d6" kindref="member">replot</ref>();</highlight></codeline>
<codeline lineno="12561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12564"><highlight class="normal"></highlight></codeline>
<codeline lineno="12565"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12566"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1adf6c99780cea55ab39459a6eaad3a94a" kindref="member">QCPAxisRect::mouseReleaseEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="12567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12568"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="12569"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1ab49a6698194cf0e9e38a1d734c0888a8" kindref="member">mDragging</ref><sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="12570"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;noAntialiasingOnDrag())</highlight></codeline>
<codeline lineno="12571"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1af6f91e5eab1be85f67c556e98c3745e8" kindref="member">setAntialiasedElements</ref>(<ref refid="class_q_c_p_axis_rect_1aa4a24f76360cfebe1bcf17a77fa7521b" kindref="member">mAADragBackup</ref>);</highlight></codeline>
<codeline lineno="12573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1ae10d685b5eabea2999fb8775ca173c24" kindref="member">setNotAntialiasedElements</ref>(<ref refid="class_q_c_p_axis_rect_1a6fcb12e052e276d57efbb128be31d6f5" kindref="member">mNotAADragBackup</ref>);</highlight></codeline>
<codeline lineno="12574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12576"><highlight class="normal"></highlight></codeline>
<codeline lineno="12591"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_axis_rect_1a5acf41fc30aa68ea263246ecfad85c31" kindref="member">QCPAxisRect::wheelEvent</ref>(QWheelEvent<sp/>*event)</highlight></codeline>
<codeline lineno="12592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mouse<sp/>range<sp/>zooming<sp/>interaction:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a12401c02b6949a717f5749bb28c62983" kindref="member">interactions</ref>().testFlag(<ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037abee1e94353525a636aeaf0ba32b72e14" kindref="member">QCP::iRangeZoom</ref>))</highlight></codeline>
<codeline lineno="12595"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a215eff671d48df2edccc36e7f976f28c" kindref="member">mRangeZoom</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="12597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor;</highlight></codeline>
<codeline lineno="12599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wheelSteps<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;delta()/120.0;<sp/></highlight><highlight class="comment">//<sp/>a<sp/>single<sp/>step<sp/>delta<sp/>is<sp/>+/-120<sp/>usually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a215eff671d48df2edccc36e7f976f28c" kindref="member">mRangeZoom</ref>.testFlag(Qt::Horizontal))</highlight></codeline>
<codeline lineno="12601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>qPow(<ref refid="class_q_c_p_axis_rect_1ad08d0250ed7b99de387d0ea6c7fd4dc1" kindref="member">mRangeZoomFactorHorz</ref>,<sp/>wheelSteps);</highlight></codeline>
<codeline lineno="12603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1ae22f882bab20518559f3fbb84243d0ab" kindref="member">mRangeZoomHorzAxis</ref>.data())</highlight></codeline>
<codeline lineno="12604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1ae22f882bab20518559f3fbb84243d0ab" kindref="member">mRangeZoomHorzAxis</ref>.data()-&gt;scaleRange(factor,<sp/><ref refid="class_q_c_p_axis_rect_1ae22f882bab20518559f3fbb84243d0ab" kindref="member">mRangeZoomHorzAxis</ref>.data()-&gt;pixelToCoord(event-&gt;pos().x()));</highlight></codeline>
<codeline lineno="12605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a215eff671d48df2edccc36e7f976f28c" kindref="member">mRangeZoom</ref>.testFlag(Qt::Vertical))</highlight></codeline>
<codeline lineno="12607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>qPow(<ref refid="class_q_c_p_axis_rect_1a32f063629581d5bf82b12769940b34ad" kindref="member">mRangeZoomFactorVert</ref>,<sp/>wheelSteps);</highlight></codeline>
<codeline lineno="12609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a8b9acd16a203a9692bd35a9465f54bc1" kindref="member">mRangeZoomVertAxis</ref>.data())</highlight></codeline>
<codeline lineno="12610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a8b9acd16a203a9692bd35a9465f54bc1" kindref="member">mRangeZoomVertAxis</ref>.data()-&gt;scaleRange(factor,<sp/><ref refid="class_q_c_p_axis_rect_1a8b9acd16a203a9692bd35a9465f54bc1" kindref="member">mRangeZoomVertAxis</ref>.data()-&gt;pixelToCoord(event-&gt;pos().y()));</highlight></codeline>
<codeline lineno="12611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a606fd384b2a637ce2c24899bcbde77d6" kindref="member">replot</ref>();</highlight></codeline>
<codeline lineno="12613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12616"><highlight class="normal"></highlight></codeline>
<codeline lineno="12617"><highlight class="normal"></highlight></codeline>
<codeline lineno="12621"></codeline>
<codeline lineno="12646"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12647"><highlight class="normal"></highlight></codeline>
<codeline lineno="12654"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12655"><highlight class="normal"></highlight></codeline>
<codeline lineno="12660"><highlight class="normal"><ref refid="class_q_c_p_abstract_legend_item_1afaff87610e8da0fa238ecf552872d774" kindref="member">QCPAbstractLegendItem::QCPAbstractLegendItem</ref>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*parent)<sp/>:</highlight></codeline>
<codeline lineno="12661"><highlight class="normal"><sp/><sp/>QCPLayoutElement(parent-&gt;parentPlot()),</highlight></codeline>
<codeline lineno="12662"><highlight class="normal"><sp/><sp/>mParentLegend(parent),</highlight></codeline>
<codeline lineno="12663"><highlight class="normal"><sp/><sp/>mFont(parent-&gt;font()),</highlight></codeline>
<codeline lineno="12664"><highlight class="normal"><sp/><sp/>mTextColor(parent-&gt;textColor()),</highlight></codeline>
<codeline lineno="12665"><highlight class="normal"><sp/><sp/>mSelectedFont(parent-&gt;selectedFont()),</highlight></codeline>
<codeline lineno="12666"><highlight class="normal"><sp/><sp/>mSelectedTextColor(parent-&gt;selectedTextColor()),</highlight></codeline>
<codeline lineno="12667"><highlight class="normal"><sp/><sp/>mSelectable(true),</highlight></codeline>
<codeline lineno="12668"><highlight class="normal"><sp/><sp/>mSelected(false)</highlight></codeline>
<codeline lineno="12669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12670"><highlight class="normal"><sp/><sp/>setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;legend&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="12671"><highlight class="normal"><sp/><sp/>setMargins(QMargins(8,<sp/>2,<sp/>8,<sp/>2));</highlight></codeline>
<codeline lineno="12672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12673"><highlight class="normal"></highlight></codeline>
<codeline lineno="12679"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a409c53455d8112f71d70c0c43eb10265" kindref="member">QCPAbstractLegendItem::setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="12680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12681"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1ae916a78ac0d2a60e20a17ca2f24f9754" kindref="member">mFont</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1ae476404706638d84fadc01021df2b19e" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="12682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12683"><highlight class="normal"></highlight></codeline>
<codeline lineno="12689"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a6ebace6aaffaedcdab2d74e88acc2d1e" kindref="member">QCPAbstractLegendItem::setTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="12690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12691"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1a974b21e9930227d281344bd2242d289d" kindref="member">mTextColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="12692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12693"><highlight class="normal"></highlight></codeline>
<codeline lineno="12700"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a91db5aee48617a9d3206e61376807365" kindref="member">QCPAbstractLegendItem::setSelectedFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="12701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12702"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1ab971df604306b192875a7d097feb1e21" kindref="member">mSelectedFont</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1ae476404706638d84fadc01021df2b19e" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="12703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12704"><highlight class="normal"></highlight></codeline>
<codeline lineno="12711"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a4d01d008ee1a5bfe9905b0397a421936" kindref="member">QCPAbstractLegendItem::setSelectedTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="12712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12713"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1a4965c13854d970b24c284f0a4f005fbd" kindref="member">mSelectedTextColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="12714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12715"><highlight class="normal"></highlight></codeline>
<codeline lineno="12721"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a9913ef48730551b696e7f98a2391c599" kindref="member">QCPAbstractLegendItem::setSelectable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable)</highlight></codeline>
<codeline lineno="12722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_legend_item_1aa84029f57b1b32f642fb7db63c3fc2c2" kindref="member">mSelectable</ref><sp/>!=<sp/>selectable)</highlight></codeline>
<codeline lineno="12724"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1aa84029f57b1b32f642fb7db63c3fc2c2" kindref="member">mSelectable</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1a0a0205f33f37edae50826c24cb8f1983" kindref="member">selectable</ref>;</highlight></codeline>
<codeline lineno="12726"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_abstract_legend_item_1abc4d779b938cc9235f9196737dbaa6bd" kindref="member">selectableChanged</ref>(<ref refid="class_q_c_p_abstract_legend_item_1aa84029f57b1b32f642fb7db63c3fc2c2" kindref="member">mSelectable</ref>);</highlight></codeline>
<codeline lineno="12727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12729"><highlight class="normal"></highlight></codeline>
<codeline lineno="12738"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">QCPAbstractLegendItem::setSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)</highlight></codeline>
<codeline lineno="12739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>!=<sp/>selected)</highlight></codeline>
<codeline lineno="12741"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1ac776e68e3367704452131c6aa9908bb9" kindref="member">selected</ref>;</highlight></codeline>
<codeline lineno="12743"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_abstract_legend_item_1a7cb61fdfbaf69c590bacb8f9e7099d9e" kindref="member">selectionChanged</ref>(<ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref>);</highlight></codeline>
<codeline lineno="12744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12746"><highlight class="normal"></highlight></codeline>
<codeline lineno="12747"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12748"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1ad0480d5cad34627a294a2921caa4a62f" kindref="member">QCPAbstractLegendItem::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12749"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12750"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="12751"><highlight class="normal"><sp/><sp/>if<sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)<sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="12752"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>(!<ref refid="class_q_c_p_abstract_legend_item_1aa84029f57b1b32f642fb7db63c3fc2c2" kindref="member">mSelectable</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;selectableParts().testFlag(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>::spItems)))</highlight></codeline>
<codeline lineno="12753"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="12754"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12755"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="12756"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;selectionTolerance()*0.99;</highlight></codeline>
<codeline lineno="12757"><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline lineno="12758"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="12759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12760"><highlight class="normal"></highlight></codeline>
<codeline lineno="12761"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>::<ref refid="class_q_c_p_abstract_legend_item_1a71c3baeda42ba78d2cccd97e74110a5e" kindref="member">applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12763"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12764"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca1aca7a50c1b95403958733a4acafe773" kindref="member">QCP::aeLegendItems</ref>);</highlight></codeline>
<codeline lineno="12765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12766"><highlight class="normal"></highlight></codeline>
<codeline lineno="12767"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12768"><highlight class="normal">QRect<sp/><ref refid="class_q_c_p_abstract_legend_item_1abcb540c331b49ef7ee0ea1abbd0dcac3" kindref="member">QCPAbstractLegendItem::clipRect</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12769"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref>;</highlight></codeline>
<codeline lineno="12771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12772"><highlight class="normal"></highlight></codeline>
<codeline lineno="12773"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1abcfe9e335d99c7fac74e03d26723c1b7" kindref="member">QCPAbstractLegendItem::selectEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="12775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12776"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="12777"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="12778"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_abstract_legend_item_1aa84029f57b1b32f642fb7db63c3fc2c2" kindref="member">mSelectable</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;selectableParts().testFlag(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref>::spItems))</highlight></codeline>
<codeline lineno="12779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="12781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">setSelected</ref>(additive<sp/>?<sp/>!<ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="12783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="12784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12786"><highlight class="normal"></highlight></codeline>
<codeline lineno="12787"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1ae64e667e7c5b85cd92c9b91928faef28" kindref="member">QCPAbstractLegendItem::deselectEvent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="12789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_legend_item_1aa84029f57b1b32f642fb7db63c3fc2c2" kindref="member">mSelectable</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;<ref refid="class_q_c_p_legend_1aa90c7fdbad7a0e93527bafb1f1f49a43" kindref="member">selectableParts</ref>().testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">QCPLegend::spItems</ref>))</highlight></codeline>
<codeline lineno="12791"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="12793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">setSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="12795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="12796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12798"><highlight class="normal"></highlight></codeline>
<codeline lineno="12802"></codeline>
<codeline lineno="12836"><highlight class="normal"><ref refid="class_q_c_p_plottable_legend_item_1ac1072591fe409d3dabad51b23ee4d6c5" kindref="member">QCPPlottableLegendItem::QCPPlottableLegendItem</ref>(<ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref><sp/>*parent,<sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable)<sp/>:</highlight></codeline>
<codeline lineno="12837"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>(parent),</highlight></codeline>
<codeline lineno="12838"><highlight class="normal"><sp/><sp/>mPlottable(plottable)</highlight></codeline>
<codeline lineno="12839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12841"><highlight class="normal"></highlight></codeline>
<codeline lineno="12847"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_plottable_legend_item_1ab36270e6b022a6961fa44136f35c0e4b" kindref="member">QCPPlottableLegendItem::getIconBorderPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12848"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;<ref refid="class_q_c_p_legend_1a165630cad7e41f89b54f65cdef3310e8" kindref="member">selectedIconBorderPen</ref>()<sp/>:<sp/><ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;<ref refid="class_q_c_p_legend_1a2c4719d79630b0d0c75ef2333c59a912" kindref="member">iconBorderPen</ref>();</highlight></codeline>
<codeline lineno="12850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12851"><highlight class="normal"></highlight></codeline>
<codeline lineno="12857"><highlight class="normal">QColor<sp/><ref refid="class_q_c_p_plottable_legend_item_1ad762b07439c738660ba93e78c1d03667" kindref="member">QCPPlottableLegendItem::getTextColor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12858"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_abstract_legend_item_1a4965c13854d970b24c284f0a4f005fbd" kindref="member">mSelectedTextColor</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_legend_item_1a974b21e9930227d281344bd2242d289d" kindref="member">mTextColor</ref>;</highlight></codeline>
<codeline lineno="12860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12861"><highlight class="normal"></highlight></codeline>
<codeline lineno="12867"><highlight class="normal">QFont<sp/><ref refid="class_q_c_p_plottable_legend_item_1a8a85c8a25affb4895423d730164d61de" kindref="member">QCPPlottableLegendItem::getFont</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12868"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_legend_item_1ae58ebebbd0c36cc6fe897483369984d2" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_abstract_legend_item_1ab971df604306b192875a7d097feb1e21" kindref="member">mSelectedFont</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_legend_item_1ae916a78ac0d2a60e20a17ca2f24f9754" kindref="member">mFont</ref>;</highlight></codeline>
<codeline lineno="12870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12871"><highlight class="normal"></highlight></codeline>
<codeline lineno="12878"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plottable_legend_item_1a68a781c3de4f9959fdf82075052d43aa" kindref="member">QCPPlottableLegendItem::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="12879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_plottable_legend_item_1ada647fb4b22971a1a424e15b4f6af0d9" kindref="member">mPlottable</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12881"><highlight class="normal"><sp/><sp/>painter-&gt;setFont(<ref refid="class_q_c_p_plottable_legend_item_1a8a85c8a25affb4895423d730164d61de" kindref="member">getFont</ref>());</highlight></codeline>
<codeline lineno="12882"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(QPen(<ref refid="class_q_c_p_plottable_legend_item_1ad762b07439c738660ba93e78c1d03667" kindref="member">getTextColor</ref>()));</highlight></codeline>
<codeline lineno="12883"><highlight class="normal"><sp/><sp/>QSizeF<sp/>iconSize<sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;<ref refid="class_q_c_p_legend_1a27dfb770b14adc0e8811bef8129780a5" kindref="member">iconSize</ref>();</highlight></codeline>
<codeline lineno="12884"><highlight class="normal"><sp/><sp/>QRectF<sp/>textRect<sp/>=<sp/>painter-&gt;fontMetrics().boundingRect(0,<sp/>0,<sp/>0,<sp/>iconSize.height(),<sp/>Qt::TextDontClip,<sp/><ref refid="class_q_c_p_plottable_legend_item_1ada647fb4b22971a1a424e15b4f6af0d9" kindref="member">mPlottable</ref>-&gt;<ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="12885"><highlight class="normal"><sp/><sp/>QRectF<sp/>iconRect(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.topLeft(),<sp/>iconSize);</highlight></codeline>
<codeline lineno="12886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textHeight<sp/>=<sp/>qMax(textRect.height(),<sp/>iconSize.height());<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>text<sp/>has<sp/>smaller<sp/>height<sp/>than<sp/>icon,<sp/>center<sp/>text<sp/>vertically<sp/>in<sp/>icon<sp/>height,<sp/>else<sp/>align<sp/>tops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12887"><highlight class="normal"><sp/><sp/>painter-&gt;drawText(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.x()+iconSize.width()+<ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;<ref refid="class_q_c_p_legend_1a9d6d07042a284c4ba5f9e3cb5c9281ef" kindref="member">iconTextPadding</ref>(),<sp/><ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>.y(),<sp/>textRect.width(),<sp/>textHeight,<sp/>Qt::TextDontClip,<sp/><ref refid="class_q_c_p_plottable_legend_item_1ada647fb4b22971a1a424e15b4f6af0d9" kindref="member">mPlottable</ref>-&gt;<ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="12888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>icon:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12889"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a8fd6821ee6fecbfa04444c9062912abd" kindref="member">save</ref>();</highlight></codeline>
<codeline lineno="12890"><highlight class="normal"><sp/><sp/>painter-&gt;setClipRect(iconRect,<sp/>Qt::IntersectClip);</highlight></codeline>
<codeline lineno="12891"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_plottable_legend_item_1ada647fb4b22971a1a424e15b4f6af0d9" kindref="member">mPlottable</ref>-&gt;<ref refid="class_q_c_p_abstract_plottable_1a9a450783fd9ed539e589999fd390cdf7" kindref="member">drawLegendIcon</ref>(painter,<sp/>iconRect);</highlight></codeline>
<codeline lineno="12892"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a64908e6298d5bbd83457dc987cc3a022" kindref="member">restore</ref>();</highlight></codeline>
<codeline lineno="12893"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>icon<sp/>border:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plottable_legend_item_1ab36270e6b022a6961fa44136f35c0e4b" kindref="member">getIconBorderPen</ref>().style()<sp/>!=<sp/>Qt::NoPen)</highlight></codeline>
<codeline lineno="12895"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="12896"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_plottable_legend_item_1ab36270e6b022a6961fa44136f35c0e4b" kindref="member">getIconBorderPen</ref>());</highlight></codeline>
<codeline lineno="12897"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="12898"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawRect(iconRect);</highlight></codeline>
<codeline lineno="12899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="12900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12901"><highlight class="normal"></highlight></codeline>
<codeline lineno="12907"><highlight class="normal">QSize<sp/><ref refid="class_q_c_p_plottable_legend_item_1a76bad654ebc8e870392f488419a6a483" kindref="member">QCPPlottableLegendItem::minimumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12908"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_plottable_legend_item_1ada647fb4b22971a1a424e15b4f6af0d9" kindref="member">mPlottable</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QSize();</highlight></codeline>
<codeline lineno="12910"><highlight class="normal"><sp/><sp/>QSize<sp/>result(0,<sp/>0);</highlight></codeline>
<codeline lineno="12911"><highlight class="normal"><sp/><sp/>QRect<sp/>textRect;</highlight></codeline>
<codeline lineno="12912"><highlight class="normal"><sp/><sp/>QFontMetrics<sp/>fontMetrics(<ref refid="class_q_c_p_plottable_legend_item_1a8a85c8a25affb4895423d730164d61de" kindref="member">getFont</ref>());</highlight></codeline>
<codeline lineno="12913"><highlight class="normal"><sp/><sp/>QSize<sp/>iconSize<sp/>=<sp/><ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;<ref refid="class_q_c_p_legend_1a27dfb770b14adc0e8811bef8129780a5" kindref="member">iconSize</ref>();</highlight></codeline>
<codeline lineno="12914"><highlight class="normal"><sp/><sp/>textRect<sp/>=<sp/>fontMetrics.boundingRect(0,<sp/>0,<sp/>0,<sp/>iconSize.height(),<sp/>Qt::TextDontClip,<sp/><ref refid="class_q_c_p_plottable_legend_item_1ada647fb4b22971a1a424e15b4f6af0d9" kindref="member">mPlottable</ref>-&gt;<ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="12915"><highlight class="normal"><sp/><sp/>result.setWidth(iconSize.width()<sp/>+<sp/><ref refid="class_q_c_p_abstract_legend_item_1aafcd9fc6fcb10f4a8d46037011afafe8" kindref="member">mParentLegend</ref>-&gt;<ref refid="class_q_c_p_legend_1a9d6d07042a284c4ba5f9e3cb5c9281ef" kindref="member">iconTextPadding</ref>()<sp/>+<sp/>textRect.width()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.left()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.right());</highlight></codeline>
<codeline lineno="12916"><highlight class="normal"><sp/><sp/>result.setHeight(qMax(textRect.height(),<sp/>iconSize.height())<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.top()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.bottom());</highlight></codeline>
<codeline lineno="12917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="12918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12919"><highlight class="normal"></highlight></codeline>
<codeline lineno="12920"><highlight class="normal"></highlight></codeline>
<codeline lineno="12924"></codeline>
<codeline lineno="12949"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12950"><highlight class="normal"></highlight></codeline>
<codeline lineno="12958"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12959"><highlight class="normal"></highlight></codeline>
<codeline lineno="12966"><highlight class="normal"><ref refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" kindref="member">QCPLegend::QCPLegend</ref>()</highlight></codeline>
<codeline lineno="12967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12968"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1aaef2cd2d456197ee06a208793678e436" kindref="member">setRowSpacing</ref>(0);</highlight></codeline>
<codeline lineno="12969"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a3a49272aba32bb0fddc3bb2a45a3dba0" kindref="member">setColumnSpacing</ref>(10);</highlight></codeline>
<codeline lineno="12970"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref>(QMargins(2,<sp/>3,<sp/>2,<sp/>2));</highlight></codeline>
<codeline lineno="12971"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" kindref="member">setAntialiased</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12972"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a8b0740cce488bf7010da6beda6898984" kindref="member">setIconSize</ref>(32,<sp/>18);</highlight></codeline>
<codeline lineno="12973"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12974"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a62973bd69d5155e8ea3141366e8968f6" kindref="member">setIconTextPadding</ref>(7);</highlight></codeline>
<codeline lineno="12975"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12976"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">setSelectableParts</ref>(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref><sp/>|<sp/><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>);</highlight></codeline>
<codeline lineno="12977"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a378201c07d500af7126e3ec91652eed7" kindref="member">spNone</ref>);</highlight></codeline>
<codeline lineno="12978"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="12979"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a866a9e3f5267de7430a6c7f26a61db9f" kindref="member">setBorderPen</ref>(QPen(Qt::black));</highlight></codeline>
<codeline lineno="12980"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a2c35d262953a25d96b6112653fbefc88" kindref="member">setSelectedBorderPen</ref>(QPen(Qt::blue,<sp/>2));</highlight></codeline>
<codeline lineno="12981"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a2f2c93d18a651f4ff294bb3f026f49b8" kindref="member">setIconBorderPen</ref>(Qt::NoPen);</highlight></codeline>
<codeline lineno="12982"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1ade93aabe9bcccaf9cf46cec22c658027" kindref="member">setSelectedIconBorderPen</ref>(QPen(Qt::blue,<sp/>2));</highlight></codeline>
<codeline lineno="12983"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a497bbcd38baa3598c08e2b3f48103f23" kindref="member">setBrush</ref>(Qt::white);</highlight></codeline>
<codeline lineno="12984"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a875227f3219c9799464631dec5e8f1bd" kindref="member">setSelectedBrush</ref>(Qt::white);</highlight></codeline>
<codeline lineno="12985"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1ae1eb239ff4a4632fe1b6c3e668d845c6" kindref="member">setTextColor</ref>(Qt::black);</highlight></codeline>
<codeline lineno="12986"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a7674dfc7a1f30e1abd1018c0ed45e0bc" kindref="member">setSelectedTextColor</ref>(Qt::blue);</highlight></codeline>
<codeline lineno="12987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12988"><highlight class="normal"></highlight></codeline>
<codeline lineno="12989"><highlight class="normal"><ref refid="class_q_c_p_legend_1a52b305572e20f4e7cb37e945e2b9bec0" kindref="member">QCPLegend::~QCPLegend</ref>()</highlight></codeline>
<codeline lineno="12990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12991"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a24795c7250eb5214fcea16b7217b4dfb" kindref="member">clearItems</ref>();</highlight></codeline>
<codeline lineno="12992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qobject_cast&lt;QCustomPlot*&gt;(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>))<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>this<sp/>isn&apos;t<sp/>called<sp/>from<sp/>QObject<sp/>dtor<sp/>when<sp/>QCustomPlot<sp/>is<sp/>already<sp/>destructed<sp/>(happens<sp/>when<sp/>the<sp/>legend<sp/>is<sp/>not<sp/>in<sp/>any<sp/>layout<sp/>and<sp/>thus<sp/>QObject-child<sp/>of<sp/>QCustomPlot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a9d173454555021c9ffd4f675c4d9037a" kindref="member">legendRemoved</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12995"><highlight class="normal"></highlight></codeline>
<codeline lineno="12996"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>doc<sp/>for<sp/>getter,<sp/>see<sp/>setSelectedParts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12997"><highlight class="normal">QCPLegend::SelectableParts<sp/><ref refid="class_q_c_p_legend_1abbbf1b2d6a149013527ed87b0780894a" kindref="member">QCPLegend::selectedParts</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="12998"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>any<sp/>legend<sp/>elements<sp/>selected,<sp/>if<sp/>yes,<sp/>add<sp/>spItems<sp/>to<sp/>return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSelectedItems<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13002"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)-&gt;<ref refid="class_q_c_p_abstract_legend_item_1ac776e68e3367704452131c6aa9908bb9" kindref="member">selected</ref>())</highlight></codeline>
<codeline lineno="13004"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hasSelectedItems<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13008"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSelectedItems)</highlight></codeline>
<codeline lineno="13010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>|<sp/><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>;</highlight></codeline>
<codeline lineno="13011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>&amp;<sp/>~<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>;</highlight></codeline>
<codeline lineno="13013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13014"><highlight class="normal"></highlight></codeline>
<codeline lineno="13018"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a866a9e3f5267de7430a6c7f26a61db9f" kindref="member">QCPLegend::setBorderPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="13019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13020"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a52ab8342a382456131d567f962d7f9d0" kindref="member">mBorderPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="13021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13022"><highlight class="normal"></highlight></codeline>
<codeline lineno="13026"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a497bbcd38baa3598c08e2b3f48103f23" kindref="member">QCPLegend::setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="13027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13028"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a9bd7cd05a9a485e06eda513a348baf80" kindref="member">mBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_legend_1a7e5d2766e7d724f399022be8a4e8a2cb" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="13029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13030"><highlight class="normal"></highlight></codeline>
<codeline lineno="13040"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1aa4cda8499e3cb0f3be415edc02984c73" kindref="member">QCPLegend::setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="13041"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13042"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a56ffacb184a99eefe09a0c7181d0713d" kindref="member">mFont</ref><sp/>=<sp/><ref refid="class_q_c_p_legend_1a5cf8b840bc02f7bf4edb8dde400d0f41" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="13043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13044"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i))</highlight></codeline>
<codeline lineno="13046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)-&gt;<ref refid="class_q_c_p_abstract_legend_item_1a409c53455d8112f71d70c0c43eb10265" kindref="member">setFont</ref>(<ref refid="class_q_c_p_legend_1a56ffacb184a99eefe09a0c7181d0713d" kindref="member">mFont</ref>);</highlight></codeline>
<codeline lineno="13047"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13049"><highlight class="normal"></highlight></codeline>
<codeline lineno="13059"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1ae1eb239ff4a4632fe1b6c3e668d845c6" kindref="member">QCPLegend::setTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="13060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13061"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a478b2d809a7390e9ff8f8bb70d6bd9fe" kindref="member">mTextColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="13062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13063"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i))</highlight></codeline>
<codeline lineno="13065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)-&gt;<ref refid="class_q_c_p_abstract_legend_item_1a6ebace6aaffaedcdab2d74e88acc2d1e" kindref="member">setTextColor</ref>(color);</highlight></codeline>
<codeline lineno="13066"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13068"><highlight class="normal"></highlight></codeline>
<codeline lineno="13073"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a8b0740cce488bf7010da6beda6898984" kindref="member">QCPLegend::setIconSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size)</highlight></codeline>
<codeline lineno="13074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13075"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a39b972aae6c6a3fa5aa73313ab7a5765" kindref="member">mIconSize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="13076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13077"><highlight class="normal"></highlight></codeline>
<codeline lineno="13080"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a8b0740cce488bf7010da6beda6898984" kindref="member">QCPLegend::setIconSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="13081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13082"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a39b972aae6c6a3fa5aa73313ab7a5765" kindref="member">mIconSize</ref>.setWidth(width);</highlight></codeline>
<codeline lineno="13083"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a39b972aae6c6a3fa5aa73313ab7a5765" kindref="member">mIconSize</ref>.setHeight(height);</highlight></codeline>
<codeline lineno="13084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13085"><highlight class="normal"></highlight></codeline>
<codeline lineno="13091"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a62973bd69d5155e8ea3141366e8968f6" kindref="member">QCPLegend::setIconTextPadding</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding)</highlight></codeline>
<codeline lineno="13092"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13093"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a8abf8843864ee9afc3f54f906c062240" kindref="member">mIconTextPadding</ref><sp/>=<sp/>padding;</highlight></codeline>
<codeline lineno="13094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13095"><highlight class="normal"></highlight></codeline>
<codeline lineno="13102"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a2f2c93d18a651f4ff294bb3f026f49b8" kindref="member">QCPLegend::setIconBorderPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="13103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13104"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a773ae518c3149fcabff4a2906fdacbc4" kindref="member">mIconBorderPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="13105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13106"><highlight class="normal"></highlight></codeline>
<codeline lineno="13117"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a9ce60aa8bbd89f62ae4fa83ac6c60110" kindref="member">QCPLegend::setSelectableParts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectableParts<sp/>&amp;selectable)</highlight></codeline>
<codeline lineno="13118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" kindref="member">mSelectableParts</ref><sp/>!=<sp/>selectable)</highlight></codeline>
<codeline lineno="13120"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" kindref="member">mSelectableParts</ref><sp/>=<sp/>selectable;</highlight></codeline>
<codeline lineno="13122"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_legend_1a8a77300fd0976d6bdd8000f4e8d114b8" kindref="member">selectableChanged</ref>(<ref refid="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" kindref="member">mSelectableParts</ref>);</highlight></codeline>
<codeline lineno="13123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13125"><highlight class="normal"></highlight></codeline>
<codeline lineno="13147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">QCPLegend::setSelectedParts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectableParts<sp/>&amp;selected)</highlight></codeline>
<codeline lineno="13148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13149"><highlight class="normal"><sp/><sp/>SelectableParts<sp/>newSelected<sp/>=<sp/>selected;</highlight></codeline>
<codeline lineno="13150"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>=<sp/>this-&gt;<ref refid="class_q_c_p_legend_1abbbf1b2d6a149013527ed87b0780894a" kindref="member">selectedParts</ref>();<sp/></highlight><highlight class="comment">//<sp/>update<sp/>mSelectedParts<sp/>in<sp/>case<sp/>item<sp/>selection<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13151"><highlight class="normal"></highlight></codeline>
<codeline lineno="13152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>!=<sp/>newSelected)</highlight></codeline>
<codeline lineno="13153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>)<sp/>&amp;&amp;<sp/>newSelected.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>))<sp/></highlight><highlight class="comment">//<sp/>attempt<sp/>to<sp/>set<sp/>spItems<sp/>flag<sp/>(can&apos;t<sp/>do<sp/>that)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;spItems<sp/>flag<sp/>can<sp/>not<sp/>be<sp/>set,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>unset<sp/>with<sp/>this<sp/>function&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSelected<sp/>&amp;=<sp/>~<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>;</highlight></codeline>
<codeline lineno="13158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>)<sp/>&amp;&amp;<sp/>!newSelected.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a768bfb95f323db4c66473375032c0af7" kindref="member">spItems</ref>))<sp/></highlight><highlight class="comment">//<sp/>spItems<sp/>flag<sp/>was<sp/>unset,<sp/>so<sp/>clear<sp/>item<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i))</highlight></codeline>
<codeline lineno="13164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)-&gt;<ref refid="class_q_c_p_abstract_legend_item_1a6eed93b0ab99cb3eabb043fb08179c2b" kindref="member">setSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>=<sp/>newSelected;</highlight></codeline>
<codeline lineno="13168"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_legend_1a82c88464edac07a9eefaf3906268df3b" kindref="member">selectionChanged</ref>(<ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>);</highlight></codeline>
<codeline lineno="13169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13171"><highlight class="normal"></highlight></codeline>
<codeline lineno="13178"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a2c35d262953a25d96b6112653fbefc88" kindref="member">QCPLegend::setSelectedBorderPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="13179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13180"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a62906c996906ae23e9f724b6ac1f7334" kindref="member">mSelectedBorderPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="13181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13182"><highlight class="normal"></highlight></codeline>
<codeline lineno="13188"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1ade93aabe9bcccaf9cf46cec22c658027" kindref="member">QCPLegend::setSelectedIconBorderPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="13189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13190"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a7429ac0e64c7b90b649b4d8f4cc5fa55" kindref="member">mSelectedIconBorderPen</ref><sp/>=<sp/>pen;</highlight></codeline>
<codeline lineno="13191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13192"><highlight class="normal"></highlight></codeline>
<codeline lineno="13199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a875227f3219c9799464631dec5e8f1bd" kindref="member">QCPLegend::setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="13200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13201"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1ab3c7567c86d4784b1e48f76a84b3a1e2" kindref="member">mSelectedBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_legend_1a7e5d2766e7d724f399022be8a4e8a2cb" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="13202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13203"><highlight class="normal"></highlight></codeline>
<codeline lineno="13211"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1ab580a01c3c0a239374ed66c29edf5ad2" kindref="member">QCPLegend::setSelectedFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="13212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13213"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a86ce8f6c20a2f51a48eaf3c24ce16805" kindref="member">mSelectedFont</ref><sp/>=<sp/><ref refid="class_q_c_p_legend_1a5cf8b840bc02f7bf4edb8dde400d0f41" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="13214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i))</highlight></codeline>
<codeline lineno="13217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)-&gt;<ref refid="class_q_c_p_abstract_legend_item_1a91db5aee48617a9d3206e61376807365" kindref="member">setSelectedFont</ref>(font);</highlight></codeline>
<codeline lineno="13218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13220"><highlight class="normal"></highlight></codeline>
<codeline lineno="13228"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a7674dfc7a1f30e1abd1018c0ed45e0bc" kindref="member">QCPLegend::setSelectedTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="13229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13230"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a6c25c8796c6e73e983aae6024965f2be" kindref="member">mSelectedTextColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="13231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i))</highlight></codeline>
<codeline lineno="13234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)-&gt;<ref refid="class_q_c_p_abstract_legend_item_1a4d01d008ee1a5bfe9905b0397a421936" kindref="member">setSelectedTextColor</ref>(color);</highlight></codeline>
<codeline lineno="13235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13237"><highlight class="normal"></highlight></codeline>
<codeline lineno="13243"><highlight class="normal"><ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">QCPLegend::item</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13244"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qobject_cast&lt;<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref>*&gt;(<ref refid="class_q_c_p_layout_grid_1a26849ee5c47b4c940e8d65e8462f1065" kindref="member">elementAt</ref>(index));</highlight></codeline>
<codeline lineno="13246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13247"><highlight class="normal"></highlight></codeline>
<codeline lineno="13254"><highlight class="normal"><ref refid="class_q_c_p_plottable_legend_item" kindref="compound">QCPPlottableLegendItem</ref><sp/>*<ref refid="class_q_c_p_legend_1a5ee80cf83f65e3b6dd386942ee3cc1ee" kindref="member">QCPLegend::itemWithPlottable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13255"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13257"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plottable_legend_item" kindref="compound">QCPPlottableLegendItem</ref><sp/>*pli<sp/>=<sp/>qobject_cast&lt;QCPPlottableLegendItem*&gt;(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i)))</highlight></codeline>
<codeline lineno="13259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pli-&gt;plottable()<sp/>==<sp/>plottable)</highlight></codeline>
<codeline lineno="13261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pli;</highlight></codeline>
<codeline lineno="13262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13266"><highlight class="normal"></highlight></codeline>
<codeline lineno="13271"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">QCPLegend::itemCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13272"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1aa682b1d36660478f665bab3c64e956a9" kindref="member">elementCount</ref>();</highlight></codeline>
<codeline lineno="13274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13275"><highlight class="normal"></highlight></codeline>
<codeline lineno="13279"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a380dd19eb631592e1ebb9b24cc5b398a" kindref="member">QCPLegend::hasItem</ref>(<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*item)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13280"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>this-&gt;<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i))</highlight></codeline>
<codeline lineno="13284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13288"><highlight class="normal"></highlight></codeline>
<codeline lineno="13295"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a2eb1d24bdf5658e64962a656303fd61a" kindref="member">QCPLegend::hasItemWithPlottable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref><sp/>*plottable)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13296"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a5ee80cf83f65e3b6dd386942ee3cc1ee" kindref="member">itemWithPlottable</ref>(plottable);</highlight></codeline>
<codeline lineno="13298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13299"><highlight class="normal"></highlight></codeline>
<codeline lineno="13307"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a3ab274de52d2951faea45a6d975e6b3f" kindref="member">QCPLegend::addItem</ref>(<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*item)</highlight></codeline>
<codeline lineno="13308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_legend_1a380dd19eb631592e1ebb9b24cc5b398a" kindref="member">hasItem</ref>(item))</highlight></codeline>
<codeline lineno="13310"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_grid_1adff1a2ca691ed83d2d24a4cd1fe17012" kindref="member">addElement</ref>(<ref refid="class_q_c_p_layout_grid_1af8e6c7a05864ebe610c87756c7b9079c" kindref="member">rowCount</ref>(),<sp/>0,<sp/>item);</highlight></codeline>
<codeline lineno="13312"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13315"><highlight class="normal"></highlight></codeline>
<codeline lineno="13323"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" kindref="member">QCPLegend::removeItem</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="13324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*ali<sp/>=<sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(index))</highlight></codeline>
<codeline lineno="13326"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(ali);</highlight></codeline>
<codeline lineno="13328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a08bba60e4acd20165526a8fd7f986b58" kindref="member">simplify</ref>();</highlight></codeline>
<codeline lineno="13329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="13330"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13333"><highlight class="normal"></highlight></codeline>
<codeline lineno="13342"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" kindref="member">QCPLegend::removeItem</ref>(<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*item)</highlight></codeline>
<codeline lineno="13343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="13345"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_grid_1a08bba60e4acd20165526a8fd7f986b58" kindref="member">simplify</ref>();</highlight></codeline>
<codeline lineno="13346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="13347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13348"><highlight class="normal"></highlight></codeline>
<codeline lineno="13352"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a24795c7250eb5214fcea16b7217b4dfb" kindref="member">QCPLegend::clearItems</ref>()</highlight></codeline>
<codeline lineno="13353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>()-1;<sp/>i&gt;=0;<sp/>--i)</highlight></codeline>
<codeline lineno="13355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1ac91595c3eaa746fe6321d2eb952c63bb" kindref="member">removeItem</ref>(i);</highlight></codeline>
<codeline lineno="13356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13357"><highlight class="normal"></highlight></codeline>
<codeline lineno="13364"><highlight class="normal">QList&lt;QCPAbstractLegendItem<sp/>*&gt;<sp/><ref refid="class_q_c_p_legend_1ac93eaf236e911d67aa8b88942ef45c5e" kindref="member">QCPLegend::selectedItems</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13365"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13366"><highlight class="normal"><sp/><sp/>QList&lt;QCPAbstractLegendItem*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="13367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_legend_1a198228e9cdc78d3a3c306fa6763d0404" kindref="member">itemCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="13368"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_legend_item" kindref="compound">QCPAbstractLegendItem</ref><sp/>*ali<sp/>=<sp/><ref refid="class_q_c_p_legend_1a454272d7094437beb3278a2294006da5" kindref="member">item</ref>(i))</highlight></codeline>
<codeline lineno="13370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ali-&gt;selected())</highlight></codeline>
<codeline lineno="13372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(ali);</highlight></codeline>
<codeline lineno="13373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13377"><highlight class="normal"></highlight></codeline>
<codeline lineno="13391"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a26307f532c3458b379663b7d517a5f47" kindref="member">QCPLegend::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13392"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13393"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0ca9e0127a6361b5d0596b031a482c5cf97" kindref="member">QCP::aeLegend</ref>);</highlight></codeline>
<codeline lineno="13394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13395"><highlight class="normal"></highlight></codeline>
<codeline lineno="13401"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_legend_1a60172c9d2212584f38f5d0c1e50970c7" kindref="member">QCPLegend::getBorderPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13402"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref>)<sp/>?<sp/><ref refid="class_q_c_p_legend_1a62906c996906ae23e9f724b6ac1f7334" kindref="member">mSelectedBorderPen</ref><sp/>:<sp/><ref refid="class_q_c_p_legend_1a52ab8342a382456131d567f962d7f9d0" kindref="member">mBorderPen</ref>;</highlight></codeline>
<codeline lineno="13404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13405"><highlight class="normal"></highlight></codeline>
<codeline lineno="13411"><highlight class="normal">QBrush<sp/><ref refid="class_q_c_p_legend_1a236fe4cd617c9f88620fd9de74417f20" kindref="member">QCPLegend::getBrush</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13412"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref>)<sp/>?<sp/><ref refid="class_q_c_p_legend_1ab3c7567c86d4784b1e48f76a84b3a1e2" kindref="member">mSelectedBrush</ref><sp/>:<sp/><ref refid="class_q_c_p_legend_1a9bd7cd05a9a485e06eda513a348baf80" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="13414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13415"><highlight class="normal"></highlight></codeline>
<codeline lineno="13421"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a4462151bf875ca85fa3815457c683fdc" kindref="member">QCPLegend::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="13422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>background<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13424"><highlight class="normal"><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_legend_1a236fe4cd617c9f88620fd9de74417f20" kindref="member">getBrush</ref>());</highlight></codeline>
<codeline lineno="13425"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_legend_1a60172c9d2212584f38f5d0c1e50970c7" kindref="member">getBorderPen</ref>());</highlight></codeline>
<codeline lineno="13426"><highlight class="normal"><sp/><sp/>painter-&gt;drawRect(<ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref>);</highlight></codeline>
<codeline lineno="13427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13428"><highlight class="normal"></highlight></codeline>
<codeline lineno="13429"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13430"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1aa3892801051bc7b985e003576df844db" kindref="member">QCPLegend::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13431"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" kindref="member">mSelectableParts</ref>.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref>))</highlight></codeline>
<codeline lineno="13434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13435"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="13436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" kindref="member">mOuterRect</ref>.contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="13437"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(details)<sp/>details-&gt;setValue(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref>);</highlight></codeline>
<codeline lineno="13439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="13440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13443"><highlight class="normal"></highlight></codeline>
<codeline lineno="13444"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13445"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1af93bf87dc5c383a9d2ada80b35f3a1a5" kindref="member">QCPLegend::selectEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="13446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13447"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="13448"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>=<sp/><ref refid="class_q_c_p_legend_1abbbf1b2d6a149013527ed87b0780894a" kindref="member">selectedParts</ref>();<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>item<sp/>selection<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13449"><highlight class="normal"><sp/><sp/>if<sp/>(details.value&lt;<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1" kindref="member">SelectablePart</ref>&gt;()<sp/>==<sp/><ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" kindref="member">mSelectableParts</ref>.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref>))</highlight></codeline>
<codeline lineno="13450"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13451"><highlight class="normal"><sp/><sp/><sp/><sp/>SelectableParts<sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>;</highlight></codeline>
<codeline lineno="13452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>(additive<sp/>?<sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>^spLegendBox<sp/>:<sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>|spLegendBox);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>unset<sp/>spItems<sp/>in<sp/>!additive<sp/>case,<sp/>because<sp/>they<sp/>will<sp/>be<sp/>deselected<sp/>by<sp/>QCustomPlot<sp/>(they&apos;re<sp/>normal<sp/>QCPLayerables<sp/>with<sp/>own<sp/>deselectEvent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="13454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="13455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13457"><highlight class="normal"></highlight></codeline>
<codeline lineno="13458"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a5208ead4331c9b0440f768f059777c58" kindref="member">QCPLegend::deselectEvent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="13460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13461"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>=<sp/><ref refid="class_q_c_p_legend_1abbbf1b2d6a149013527ed87b0780894a" kindref="member">selectedParts</ref>();<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>item<sp/>selection<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_legend_1a179b4d5c1bea723b76e402ff48f0d7fb" kindref="member">mSelectableParts</ref>.testFlag(<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref>))</highlight></codeline>
<codeline lineno="13463"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13464"><highlight class="normal"><sp/><sp/><sp/><sp/>SelectableParts<sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref>;</highlight></codeline>
<codeline lineno="13465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_legend_1a2aee309bb5c2a794b1987f3fc97f8ad8" kindref="member">setSelectedParts</ref>(<ref refid="class_q_c_p_legend_1abbbf1b2d6a149013527ed87b0780894a" kindref="member">selectedParts</ref>()<sp/>&amp;<sp/>~<ref refid="class_q_c_p_legend_1a5404de8bc1e4a994ca4ae69e2c7072f1a0fa4758962a46fa1dc9da818abae23c4" kindref="member">spLegendBox</ref>);</highlight></codeline>
<codeline lineno="13466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="13467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_legend_1a917a34dd2856baafd8d56852d94d00e2" kindref="member">mSelectedParts</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="13468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13470"><highlight class="normal"></highlight></codeline>
<codeline lineno="13471"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13472"><highlight class="normal"><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/><ref refid="class_q_c_p_legend_1a7a9795a28c9c2514b4ae50f0a63d407c" kindref="member">QCPLegend::selectionCategory</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13473"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a269c9af298e257d1108edec0432b5513" kindref="member">QCP::iSelectLegend</ref>;</highlight></codeline>
<codeline lineno="13475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13476"><highlight class="normal"></highlight></codeline>
<codeline lineno="13477"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13478"><highlight class="normal"><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037" kindref="member">QCP::Interaction</ref><sp/><ref refid="class_q_c_p_abstract_legend_item_1a53a80054ab329beaca072fb08c08944b" kindref="member">QCPAbstractLegendItem::selectionCategory</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13479"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_q_c_p_1a2ad6bb6281c7c2d593d4277b44c2b037a269c9af298e257d1108edec0432b5513" kindref="member">QCP::iSelectLegend</ref>;</highlight></codeline>
<codeline lineno="13481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13482"><highlight class="normal"></highlight></codeline>
<codeline lineno="13483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_legend_1a4d552c63d82742d77fb7f177bae7b1ba" kindref="member">QCPLegend::parentPlotInitialized</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)</highlight></codeline>
<codeline lineno="13485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13486"><highlight class="normal"><sp/><sp/>Q_UNUSED(parentPlot)</highlight></codeline>
<codeline lineno="13487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13488"><highlight class="normal"></highlight></codeline>
<codeline lineno="13489"><highlight class="normal"></highlight></codeline>
<codeline lineno="13493"></codeline>
<codeline lineno="13512"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13513"><highlight class="normal"></highlight></codeline>
<codeline lineno="13522"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13523"><highlight class="normal"></highlight></codeline>
<codeline lineno="13529"><highlight class="normal"><ref refid="class_q_c_p_plot_title_1aaae17bee2de6d6a1e695f76fb1abed03" kindref="member">QCPPlotTitle::QCPPlotTitle</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="13530"><highlight class="normal"><sp/><sp/>QCPLayoutElement(parentPlot),</highlight></codeline>
<codeline lineno="13531"><highlight class="normal"><sp/><sp/>mFont(QFont(QLatin1String(</highlight><highlight class="stringliteral">&quot;sans<sp/>serif&quot;</highlight><highlight class="normal">),<sp/>13*1.5,<sp/>QFont::Bold)),</highlight></codeline>
<codeline lineno="13532"><highlight class="normal"><sp/><sp/>mTextColor(Qt::black),</highlight></codeline>
<codeline lineno="13533"><highlight class="normal"><sp/><sp/>mSelectedFont(QFont(QLatin1String(</highlight><highlight class="stringliteral">&quot;sans<sp/>serif&quot;</highlight><highlight class="normal">),<sp/>13*1.6,<sp/>QFont::Bold)),</highlight></codeline>
<codeline lineno="13534"><highlight class="normal"><sp/><sp/>mSelectedTextColor(Qt::blue),</highlight></codeline>
<codeline lineno="13535"><highlight class="normal"><sp/><sp/>mSelectable(false),</highlight></codeline>
<codeline lineno="13536"><highlight class="normal"><sp/><sp/>mSelected(false)</highlight></codeline>
<codeline lineno="13537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentPlot)</highlight></codeline>
<codeline lineno="13539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13540"><highlight class="normal"><sp/><sp/><sp/><sp/>setLayer(parentPlot-&gt;<ref refid="class_q_custom_plot_1af73057345656cbd1463454982d808b00" kindref="member">currentLayer</ref>());</highlight></codeline>
<codeline lineno="13541"><highlight class="normal"><sp/><sp/><sp/><sp/>mFont<sp/>=<sp/>QFont(parentPlot-&gt;font().family(),<sp/>parentPlot-&gt;font().pointSize()*1.5,<sp/>QFont::Bold);</highlight></codeline>
<codeline lineno="13542"><highlight class="normal"><sp/><sp/><sp/><sp/>mSelectedFont<sp/>=<sp/>QFont(parentPlot-&gt;font().family(),<sp/>parentPlot-&gt;font().pointSize()*1.6,<sp/>QFont::Bold);</highlight></codeline>
<codeline lineno="13543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13544"><highlight class="normal"><sp/><sp/>setMargins(QMargins(5,<sp/>5,<sp/>5,<sp/>0));</highlight></codeline>
<codeline lineno="13545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13546"><highlight class="normal"></highlight></codeline>
<codeline lineno="13551"><highlight class="normal"><ref refid="class_q_c_p_plot_title_1aaae17bee2de6d6a1e695f76fb1abed03" kindref="member">QCPPlotTitle::QCPPlotTitle</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)<sp/>:</highlight></codeline>
<codeline lineno="13552"><highlight class="normal"><sp/><sp/>QCPLayoutElement(parentPlot),</highlight></codeline>
<codeline lineno="13553"><highlight class="normal"><sp/><sp/>mText(text),</highlight></codeline>
<codeline lineno="13554"><highlight class="normal"><sp/><sp/>mFont(QFont(parentPlot-&gt;font().family(),<sp/>parentPlot-&gt;font().pointSize()*1.5,<sp/>QFont::Bold)),</highlight></codeline>
<codeline lineno="13555"><highlight class="normal"><sp/><sp/>mTextColor(Qt::black),</highlight></codeline>
<codeline lineno="13556"><highlight class="normal"><sp/><sp/>mSelectedFont(QFont(parentPlot-&gt;font().family(),<sp/>parentPlot-&gt;font().pointSize()*1.6,<sp/>QFont::Bold)),</highlight></codeline>
<codeline lineno="13557"><highlight class="normal"><sp/><sp/>mSelectedTextColor(Qt::blue),</highlight></codeline>
<codeline lineno="13558"><highlight class="normal"><sp/><sp/>mSelectable(false),</highlight></codeline>
<codeline lineno="13559"><highlight class="normal"><sp/><sp/>mSelected(false)</highlight></codeline>
<codeline lineno="13560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13561"><highlight class="normal"><sp/><sp/>setLayer(QLatin1String(</highlight><highlight class="stringliteral">&quot;axes&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="13562"><highlight class="normal"><sp/><sp/>setMargins(QMargins(5,<sp/>5,<sp/>5,<sp/>0));</highlight></codeline>
<codeline lineno="13563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13564"><highlight class="normal"></highlight></codeline>
<codeline lineno="13570"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1aae5a93e88050dfb2cbf6adc087516821" kindref="member">QCPPlotTitle::setText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="13571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13572"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_plot_title_1a0d961bfac1211d59d3b0bc30d35f6379" kindref="member">mText</ref><sp/>=<sp/><ref refid="class_q_c_p_plot_title_1aeaa6f2384a611e8a610262b976b3cee5" kindref="member">text</ref>;</highlight></codeline>
<codeline lineno="13573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13574"><highlight class="normal"></highlight></codeline>
<codeline lineno="13580"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a199fc7170802ea65006c371875349e37" kindref="member">QCPPlotTitle::setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="13581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13582"><highlight class="normal"><sp/><sp/>mFont<sp/>=<sp/><ref refid="class_q_c_p_plot_title_1aa5f4cf007db51ccdd1c137191f564119" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="13583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13584"><highlight class="normal"></highlight></codeline>
<codeline lineno="13590"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a71273e3a0ca6b4c151591b37b9e5ce33" kindref="member">QCPPlotTitle::setTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="13591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13592"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_plot_title_1a5d7f834d6522c1a72fb0682c0b7ebe13" kindref="member">mTextColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="13593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13594"><highlight class="normal"></highlight></codeline>
<codeline lineno="13600"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a5245980ead999ceed51dbe702d0e3131" kindref="member">QCPPlotTitle::setSelectedFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="13601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13602"><highlight class="normal"><sp/><sp/>mSelectedFont<sp/>=<sp/><ref refid="class_q_c_p_plot_title_1aa5f4cf007db51ccdd1c137191f564119" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="13603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13604"><highlight class="normal"></highlight></codeline>
<codeline lineno="13610"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a09ffd8c52ac8824d00382f84be391b66" kindref="member">QCPPlotTitle::setSelectedTextColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="13611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13612"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_plot_title_1a8b9760e62af92814c4effdd7ad69c5f9" kindref="member">mSelectedTextColor</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="13613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13614"><highlight class="normal"></highlight></codeline>
<codeline lineno="13621"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a8866b07b9fa14877d4cefbf38406c5dd" kindref="member">QCPPlotTitle::setSelectable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectable)</highlight></codeline>
<codeline lineno="13622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plot_title_1aadefb5e2b19b1cc7deda0a55ec747884" kindref="member">mSelectable</ref><sp/>!=<sp/>selectable)</highlight></codeline>
<codeline lineno="13624"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_plot_title_1aadefb5e2b19b1cc7deda0a55ec747884" kindref="member">mSelectable</ref><sp/>=<sp/><ref refid="class_q_c_p_plot_title_1a8d75c7cbcf2049c9512a3335d6f11416" kindref="member">selectable</ref>;</highlight></codeline>
<codeline lineno="13626"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_plot_title_1a5eac3c17a4dbabb75250bc1210a83cfc" kindref="member">selectableChanged</ref>(<ref refid="class_q_c_p_plot_title_1aadefb5e2b19b1cc7deda0a55ec747884" kindref="member">mSelectable</ref>);</highlight></codeline>
<codeline lineno="13627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13629"><highlight class="normal"></highlight></codeline>
<codeline lineno="13637"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a8d441a889d371307df86f1ab7687a333" kindref="member">QCPPlotTitle::setSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)</highlight></codeline>
<codeline lineno="13638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref><sp/>!=<sp/>selected)</highlight></codeline>
<codeline lineno="13640"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref><sp/>=<sp/><ref refid="class_q_c_p_plot_title_1a9771f3a4bca026484d7c8b5d953b5e82" kindref="member">selected</ref>;</highlight></codeline>
<codeline lineno="13642"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_plot_title_1a3a01ede2da3b0b5eda33aa5274cc3523" kindref="member">selectionChanged</ref>(<ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref>);</highlight></codeline>
<codeline lineno="13643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13645"><highlight class="normal"></highlight></codeline>
<codeline lineno="13646"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13647"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a0e2a491864bf8d8e8b159ef38e9d85bd" kindref="member">QCPPlotTitle::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13648"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13649"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layerable_1a62bd552d1a45aa9accb24b310542279e" kindref="member">applyAntialiasingHint</ref>(painter,<sp/><ref refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" kindref="member">mAntialiased</ref>,<sp/><ref refid="namespace_q_c_p_1ae55dbe315d41fe80f29ba88100843a0caa9e90d81896358757d94275aeaa58f6a" kindref="member">QCP::aeNone</ref>);</highlight></codeline>
<codeline lineno="13650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13651"><highlight class="normal"></highlight></codeline>
<codeline lineno="13652"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13653"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1ae4f1f8d24489628dabb7256363b097d2" kindref="member">QCPPlotTitle::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="13654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13655"><highlight class="normal"><sp/><sp/>painter-&gt;setFont(<ref refid="class_q_c_p_plot_title_1a7e74004e3a68118b16491848708a8b3a" kindref="member">mainFont</ref>());</highlight></codeline>
<codeline lineno="13656"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(QPen(<ref refid="class_q_c_p_plot_title_1ac1b02546563a2e76f97d78a576f82f5a" kindref="member">mainTextColor</ref>()));</highlight></codeline>
<codeline lineno="13657"><highlight class="normal"><sp/><sp/>painter-&gt;drawText(<ref refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" kindref="member">mRect</ref>,<sp/>Qt::AlignCenter,<sp/><ref refid="class_q_c_p_plot_title_1a0d961bfac1211d59d3b0bc30d35f6379" kindref="member">mText</ref>,<sp/>&amp;<ref refid="class_q_c_p_plot_title_1a7178a0f6c1e633c144c17b4de4e0b840" kindref="member">mTextBoundingRect</ref>);</highlight></codeline>
<codeline lineno="13658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13659"><highlight class="normal"></highlight></codeline>
<codeline lineno="13660"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13661"><highlight class="normal">QSize<sp/><ref refid="class_q_c_p_plot_title_1a695e6037e72a1e129387e7e4a980faea" kindref="member">QCPPlotTitle::minimumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13662"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13663"><highlight class="normal"><sp/><sp/>QFontMetrics<sp/>metrics(mFont);</highlight></codeline>
<codeline lineno="13664"><highlight class="normal"><sp/><sp/>QSize<sp/>result<sp/>=<sp/>metrics.boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::AlignCenter,<sp/><ref refid="class_q_c_p_plot_title_1a0d961bfac1211d59d3b0bc30d35f6379" kindref="member">mText</ref>).size();</highlight></codeline>
<codeline lineno="13665"><highlight class="normal"><sp/><sp/>result.rwidth()<sp/>+=<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.left()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.right();</highlight></codeline>
<codeline lineno="13666"><highlight class="normal"><sp/><sp/>result.rheight()<sp/>+=<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.top()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.bottom();</highlight></codeline>
<codeline lineno="13667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13669"><highlight class="normal"></highlight></codeline>
<codeline lineno="13670"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13671"><highlight class="normal">QSize<sp/><ref refid="class_q_c_p_plot_title_1a2afaf11a379038e5ca58040a0eb0ae4c" kindref="member">QCPPlotTitle::maximumSizeHint</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13672"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13673"><highlight class="normal"><sp/><sp/>QFontMetrics<sp/>metrics(mFont);</highlight></codeline>
<codeline lineno="13674"><highlight class="normal"><sp/><sp/>QSize<sp/>result<sp/>=<sp/>metrics.boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::AlignCenter,<sp/><ref refid="class_q_c_p_plot_title_1a0d961bfac1211d59d3b0bc30d35f6379" kindref="member">mText</ref>).size();</highlight></codeline>
<codeline lineno="13675"><highlight class="normal"><sp/><sp/>result.rheight()<sp/>+=<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.top()<sp/>+<sp/><ref refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" kindref="member">mMargins</ref>.bottom();</highlight></codeline>
<codeline lineno="13676"><highlight class="normal"><sp/><sp/>result.setWidth(QWIDGETSIZE_MAX);</highlight></codeline>
<codeline lineno="13677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13679"><highlight class="normal"></highlight></codeline>
<codeline lineno="13680"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a22672ef2abe442b1e73b7ee04cff9bdd" kindref="member">QCPPlotTitle::selectEvent</ref>(QMouseEvent<sp/>*event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariant<sp/>&amp;details,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="13682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13683"><highlight class="normal"><sp/><sp/>Q_UNUSED(event)</highlight></codeline>
<codeline lineno="13684"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="13685"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_plot_title_1aadefb5e2b19b1cc7deda0a55ec747884" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="13686"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="13688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_plot_title_1a8d441a889d371307df86f1ab7687a333" kindref="member">setSelected</ref>(additive<sp/>?<sp/>!<ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref><sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="13690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="13691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13693"><highlight class="normal"></highlight></codeline>
<codeline lineno="13694"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13695"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1ac6dfce05bebdb9bd0bfacd5ff02f3325" kindref="member">QCPPlotTitle::deselectEvent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*selectionStateChanged)</highlight></codeline>
<codeline lineno="13696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_plot_title_1aadefb5e2b19b1cc7deda0a55ec747884" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="13698"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selBefore<sp/>=<sp/><ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="13700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_plot_title_1a8d441a889d371307df86f1ab7687a333" kindref="member">setSelected</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionStateChanged)</highlight></codeline>
<codeline lineno="13702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectionStateChanged<sp/>=<sp/><ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref><sp/>!=<sp/>selBefore;</highlight></codeline>
<codeline lineno="13703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13705"><highlight class="normal"></highlight></codeline>
<codeline lineno="13706"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13707"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1a5b7ae716be9134a48f4e378feb0e6699" kindref="member">QCPPlotTitle::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13708"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13709"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="13710"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_plot_title_1aadefb5e2b19b1cc7deda0a55ec747884" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="13711"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="13712"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="13713"><highlight class="normal"><sp/><sp/>if<sp/>(<ref refid="class_q_c_p_plot_title_1a7178a0f6c1e633c144c17b4de4e0b840" kindref="member">mTextBoundingRect</ref>.contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="13714"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;selectionTolerance()*0.99;</highlight></codeline>
<codeline lineno="13715"><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline lineno="13716"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="13717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13718"><highlight class="normal"></highlight></codeline>
<codeline lineno="13724"><highlight class="normal">QFont<sp/><ref refid="class_q_c_p_plot_title" kindref="compound">QCPPlotTitle</ref>::<ref refid="class_q_c_p_plot_title_1a7e74004e3a68118b16491848708a8b3a" kindref="member">mainFont</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13725"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref><sp/>?<sp/>mSelectedFont<sp/>:<sp/><ref refid="class_q_c_p_plot_title_1ad9e2c2a2e941f3444cb692a51df0df62" kindref="member">mFont</ref>;</highlight></codeline>
<codeline lineno="13727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13728"><highlight class="normal"></highlight></codeline>
<codeline lineno="13734"><highlight class="normal">QColor<sp/><ref refid="class_q_c_p_plot_title_1ac1b02546563a2e76f97d78a576f82f5a" kindref="member">QCPPlotTitle::mainTextColor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13735"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_plot_title_1afef1342a20f5ca985a20b9cfdc03d815" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_plot_title_1a8b9760e62af92814c4effdd7ad69c5f9" kindref="member">mSelectedTextColor</ref><sp/>:<sp/><ref refid="class_q_c_p_plot_title_1a5d7f834d6522c1a72fb0682c0b7ebe13" kindref="member">mTextColor</ref>;</highlight></codeline>
<codeline lineno="13737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13738"><highlight class="normal"></highlight></codeline>
<codeline lineno="13739"><highlight class="normal"></highlight></codeline>
<codeline lineno="13743"></codeline>
<codeline lineno="13792"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13793"><highlight class="normal"></highlight></codeline>
<codeline lineno="13807"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13808"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13809"><highlight class="normal"></highlight></codeline>
<codeline lineno="13831"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13832"><highlight class="normal"></highlight></codeline>
<codeline lineno="13836"><highlight class="normal"><ref refid="class_q_c_p_color_scale_1aa8debce1be38b54287c04d4f584394b4" kindref="member">QCPColorScale::QCPColorScale</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="13837"><highlight class="normal"><sp/><sp/>QCPLayoutElement(parentPlot),</highlight></codeline>
<codeline lineno="13838"><highlight class="normal"><sp/><sp/>mType(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>::atTop),<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>atTop<sp/>such<sp/>that<sp/>setType(QCPAxis::atRight)<sp/>below<sp/>doesn&apos;t<sp/>skip<sp/>work<sp/>because<sp/>it<sp/>thinks<sp/>it&apos;s<sp/>already<sp/>atRight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13839"><highlight class="normal"><sp/><sp/>mDataScaleType(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>::stLinear),</highlight></codeline>
<codeline lineno="13840"><highlight class="normal"><sp/><sp/>mBarWidth(20),</highlight></codeline>
<codeline lineno="13841"><highlight class="normal"><sp/><sp/>mAxisRect(new<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private" kindref="compound">QCPColorScaleAxisRectPrivate</ref>(this))</highlight></codeline>
<codeline lineno="13842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13843"><highlight class="normal"><sp/><sp/>setMinimumMargins(QMargins(0,<sp/>6,<sp/>0,<sp/>6));<sp/></highlight><highlight class="comment">//<sp/>for<sp/>default<sp/>right<sp/>color<sp/>scale<sp/>types,<sp/>keep<sp/>some<sp/>room<sp/>at<sp/>bottom<sp/>and<sp/>top<sp/>(important<sp/>if<sp/>no<sp/>margin<sp/>group<sp/>is<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13844"><highlight class="normal"><sp/><sp/>setType(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="13845"><highlight class="normal"><sp/><sp/>setDataRange(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(0,<sp/>6));</highlight></codeline>
<codeline lineno="13846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13847"><highlight class="normal"></highlight></codeline>
<codeline lineno="13848"><highlight class="normal"><ref refid="class_q_c_p_color_scale_1a49d8d2d155c15fa315fdc0427194c9ea" kindref="member">QCPColorScale::~QCPColorScale</ref>()</highlight></codeline>
<codeline lineno="13849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>;</highlight></codeline>
<codeline lineno="13851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13852"><highlight class="normal"></highlight></codeline>
<codeline lineno="13853"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>undocumented<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13854"><highlight class="normal">QString<sp/><ref refid="class_q_c_p_color_scale_1af92a62a6e4401f4c5b5e36cc94351ec9" kindref="member">QCPColorScale::label</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13855"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>)</highlight></codeline>
<codeline lineno="13857"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13858"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>color<sp/>axis<sp/>undefined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QString();</highlight></codeline>
<codeline lineno="13860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13861"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="13862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;label();</highlight></codeline>
<codeline lineno="13863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13864"><highlight class="normal"></highlight></codeline>
<codeline lineno="13865"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>undocumented<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13866"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a0d45597064cc40bc8a84d11e870c6b05" kindref="member">QCPColorScale::rangeDrag</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13867"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="13869"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13870"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13873"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="13874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;rangeDrag().testFlag(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;rangeDragAxis(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;rangeDragAxis(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>))-&gt;orientation()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>);</highlight></codeline>
<codeline lineno="13877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13878"><highlight class="normal"></highlight></codeline>
<codeline lineno="13879"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>undocumented<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13880"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a1123986a10acda3cdc371e4d97b3326c" kindref="member">QCPColorScale::rangeZoom</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13881"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="13883"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13884"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13887"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="13888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;rangeZoom().testFlag(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;rangeZoomAxis(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="13890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;rangeZoomAxis(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>))-&gt;orientation()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>);</highlight></codeline>
<codeline lineno="13891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13892"><highlight class="normal"></highlight></codeline>
<codeline lineno="13900"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a1bf9bdb291927c422dd66b404b206f1f" kindref="member">QCPColorScale::setType</ref>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type)</highlight></codeline>
<codeline lineno="13901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="13903"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13904"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref><sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="13908"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref><sp/>=<sp/><ref refid="class_q_c_p_color_scale_1a9a5236328c97fbfde01e3d91c4fcce6a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="13910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>rangeTransfer(0,<sp/>6);</highlight></codeline>
<codeline lineno="13911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>logBaseTransfer<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="13912"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>labelTransfer;</highlight></codeline>
<codeline lineno="13913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>revert<sp/>some<sp/>settings<sp/>on<sp/>old<sp/>axis:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>)</highlight></codeline>
<codeline lineno="13915"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rangeTransfer<sp/>=<sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;range();</highlight></codeline>
<codeline lineno="13917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labelTransfer<sp/>=<sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;label();</highlight></codeline>
<codeline lineno="13918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logBaseTransfer<sp/>=<sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;scaleLogBase();</highlight></codeline>
<codeline lineno="13919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;setLabel(QString());</highlight></codeline>
<codeline lineno="13920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data(),<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="13921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>disconnect(<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data(),<sp/>SIGNAL(scaleTypeChanged(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_scale_1aeb6107d67dd7325145b2498abae67fc3" kindref="member">setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="13922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>atype,<sp/>QList&lt;QCPAxis::AxisType&gt;()<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)</highlight></codeline>
<codeline lineno="13924"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;axis(atype)-&gt;setTicks(atype<sp/>==<sp/><ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>);</highlight></codeline>
<codeline lineno="13926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;axis(atype)-&gt;setTickLabels(atype==<sp/><ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>);</highlight></codeline>
<codeline lineno="13927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>new<sp/>mColorAxis<sp/>pointer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref><sp/>=<sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;axis(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>);</highlight></codeline>
<codeline lineno="13930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>settings<sp/>to<sp/>new<sp/>axis:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;setRange(rangeTransfer);<sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>range<sp/>of<sp/>old<sp/>axis<sp/>to<sp/>new<sp/>one<sp/>(necessary<sp/>if<sp/>axis<sp/>changes<sp/>from<sp/>vertical<sp/>to<sp/>horizontal<sp/>or<sp/>vice<sp/>versa)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;setLabel(labelTransfer);</highlight></codeline>
<codeline lineno="13933"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;setScaleLogBase(logBaseTransfer);<sp/></highlight><highlight class="comment">//<sp/>scaleType<sp/>is<sp/>synchronized<sp/>among<sp/>axes<sp/>in<sp/>realtime<sp/>via<sp/>signals<sp/>(connected<sp/>in<sp/>QCPColorScale<sp/>ctor),<sp/>so<sp/>we<sp/>only<sp/>need<sp/>to<sp/>take<sp/>care<sp/>of<sp/>log<sp/>base<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13934"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data(),<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="13935"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data(),<sp/>SIGNAL(scaleTypeChanged(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_scale_1aeb6107d67dd7325145b2498abae67fc3" kindref="member">setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="13936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;setRangeDragAxes(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>)<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="13937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>)<sp/>==<sp/>Qt::Vertical<sp/>?<sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="13938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13940"><highlight class="normal"></highlight></codeline>
<codeline lineno="13950"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" kindref="member">QCPColorScale::setDataRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;dataRange)</highlight></codeline>
<codeline lineno="13951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>!=<sp/>dataRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/><ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>!=<sp/>dataRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="13953"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref><sp/>=<sp/><ref refid="class_q_c_p_color_scale_1a52134696d5e04074fff4227d92d96f7b" kindref="member">dataRange</ref>;</highlight></codeline>
<codeline lineno="13955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>)</highlight></codeline>
<codeline lineno="13956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;setRange(<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>);</highlight></codeline>
<codeline lineno="13957"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_color_scale_1a293176da9447ec6819be1d901966a257" kindref="member">dataRangeChanged</ref>(<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>);</highlight></codeline>
<codeline lineno="13958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13960"><highlight class="normal"></highlight></codeline>
<codeline lineno="13971"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1aeb6107d67dd7325145b2498abae67fc3" kindref="member">QCPColorScale::setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>scaleType)</highlight></codeline>
<codeline lineno="13972"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a2754d6a78736f64a241e333fbd955372" kindref="member">mDataScaleType</ref><sp/>!=<sp/>scaleType)</highlight></codeline>
<codeline lineno="13974"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2754d6a78736f64a241e333fbd955372" kindref="member">mDataScaleType</ref><sp/>=<sp/>scaleType;</highlight></codeline>
<codeline lineno="13976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>)</highlight></codeline>
<codeline lineno="13977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;setScaleType(<ref refid="class_q_c_p_color_scale_1a2754d6a78736f64a241e333fbd955372" kindref="member">mDataScaleType</ref>);</highlight></codeline>
<codeline lineno="13978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a2754d6a78736f64a241e333fbd955372" kindref="member">mDataScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="13979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>());</highlight></codeline>
<codeline lineno="13980"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_color_scale_1a61558b962f7791ff2f15a565dcf60181" kindref="member">dataScaleTypeChanged</ref>(<ref refid="class_q_c_p_color_scale_1a2754d6a78736f64a241e333fbd955372" kindref="member">mDataScaleType</ref>);</highlight></codeline>
<codeline lineno="13981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13983"><highlight class="normal"></highlight></codeline>
<codeline lineno="13991"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a1f29583bb6f1e7f473b62fb712be3940" kindref="member">QCPColorScale::setGradient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>&amp;gradient)</highlight></codeline>
<codeline lineno="13992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1ae195a385032066b5c46cc3301af58922" kindref="member">mGradient</ref><sp/>!=<sp/>gradient)</highlight></codeline>
<codeline lineno="13994"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="13995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1ae195a385032066b5c46cc3301af58922" kindref="member">mGradient</ref><sp/>=<sp/><ref refid="class_q_c_p_color_scale_1ac71a6cd853c97a2dbfd32f67afd399df" kindref="member">gradient</ref>;</highlight></codeline>
<codeline lineno="13996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="13997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;mGradientImageInvalidated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13998"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_color_scale_1a67a5eb06cf551d322885e8635a46378c" kindref="member">gradientChanged</ref>(<ref refid="class_q_c_p_color_scale_1ae195a385032066b5c46cc3301af58922" kindref="member">mGradient</ref>);</highlight></codeline>
<codeline lineno="13999"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14001"><highlight class="normal"></highlight></codeline>
<codeline lineno="14006"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1aee124ae8396320cacf8276e9a0fbb8ce" kindref="member">QCPColorScale::setLabel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;str)</highlight></codeline>
<codeline lineno="14007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>)</highlight></codeline>
<codeline lineno="14009"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14010"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>color<sp/>axis<sp/>undefined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14012"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14013"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14014"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;setLabel(str);</highlight></codeline>
<codeline lineno="14015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14016"><highlight class="normal"></highlight></codeline>
<codeline lineno="14021"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1ab9dcc0c1cd583477496209b1413bcb99" kindref="member">QCPColorScale::setBarWidth</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="14022"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14023"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_1a409d2ab78dff1f92da5e6acfb062e811" kindref="member">mBarWidth</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="14024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14025"><highlight class="normal"></highlight></codeline>
<codeline lineno="14032"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a21c51a55e4fd581b6feadca9ee5b38d5" kindref="member">QCPColorScale::setRangeDrag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="14033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="14035"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14036"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14039"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled)</highlight></codeline>
<codeline lineno="14041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;setRangeDrag(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>));</highlight></codeline>
<codeline lineno="14042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;setRangeDrag(0);</highlight></codeline>
<codeline lineno="14044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14045"><highlight class="normal"></highlight></codeline>
<codeline lineno="14052"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a96bd60fb6317ad6821841b539c93eeeb" kindref="member">QCPColorScale::setRangeZoom</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="14053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="14055"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14056"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14058"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14059"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled)</highlight></codeline>
<codeline lineno="14061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;setRangeZoom(<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">QCPAxis::orientation</ref>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref>));</highlight></codeline>
<codeline lineno="14062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14063"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;setRangeZoom(0);</highlight></codeline>
<codeline lineno="14064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14065"><highlight class="normal"></highlight></codeline>
<codeline lineno="14069"><highlight class="normal">QList&lt;QCPColorMap*&gt;<sp/><ref refid="class_q_c_p_color_scale_1a01bb96981614f2556ef7da04531a7a05" kindref="member">QCPColorScale::colorMaps</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="14070"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14071"><highlight class="normal"><sp/><sp/>QList&lt;QCPColorMap*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="14072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a2dbfbf15dc38713f9a1c445a3dd2e989" kindref="member">plottableCount</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="14073"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map" kindref="compound">QCPColorMap</ref><sp/>*cm<sp/>=<sp/>qobject_cast&lt;QCPColorMap*&gt;(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">plottable</ref>(i)))</highlight></codeline>
<codeline lineno="14075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cm-&gt;colorScale()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(cm);</highlight></codeline>
<codeline lineno="14077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14080"><highlight class="normal"></highlight></codeline>
<codeline lineno="14087"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a425983db4478543924ddbd04ea20a356" kindref="member">QCPColorScale::rescaleDataRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyVisibleMaps)</highlight></codeline>
<codeline lineno="14088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14089"><highlight class="normal"><sp/><sp/>QList&lt;QCPColorMap*&gt;<sp/>maps<sp/>=<sp/><ref refid="class_q_c_p_color_scale_1a01bb96981614f2556ef7da04531a7a05" kindref="member">colorMaps</ref>();</highlight></codeline>
<codeline lineno="14090"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange;</highlight></codeline>
<codeline lineno="14091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>should<sp/>change<sp/>this<sp/>to<sp/>QCPAbstractPlottable::SignDomain<sp/>later<sp/>(currently<sp/>is<sp/>protected,<sp/>maybe<sp/>move<sp/>to<sp/>QCP<sp/>namespace)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a2754d6a78736f64a241e333fbd955372" kindref="member">mDataScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="14094"><highlight class="normal"><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>(<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>?<sp/>-1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="14095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;maps.size();<sp/>++i)</highlight></codeline>
<codeline lineno="14096"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!maps.at(i)-&gt;realVisibility()<sp/>&amp;&amp;<sp/>onlyVisibleMaps)</highlight></codeline>
<codeline lineno="14098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14099"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>mapRange;</highlight></codeline>
<codeline lineno="14100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maps.at(i)-&gt;colorScale()<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>currentFoundRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mapRange<sp/>=<sp/>maps.at(i)-&gt;data()-&gt;dataBounds();</highlight></codeline>
<codeline lineno="14104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="14105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>mapRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>mapRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>*1e-3;</highlight></codeline>
<codeline lineno="14108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>mapRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="14109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentFoundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="14111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mapRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="14113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>mapRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>*1e-3;</highlight></codeline>
<codeline lineno="14114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mapRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="14115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentFoundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentFoundRange)</highlight></codeline>
<codeline lineno="14118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!haveRange)</highlight></codeline>
<codeline lineno="14120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange<sp/>=<sp/>mapRange;</highlight></codeline>
<codeline lineno="14121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">expand</ref>(mapRange);</highlight></codeline>
<codeline lineno="14123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRange)</highlight></codeline>
<codeline lineno="14128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(newRange))<sp/></highlight><highlight class="comment">//<sp/>likely<sp/>due<sp/>to<sp/>range<sp/>being<sp/>zero<sp/>(plottable<sp/>has<sp/>only<sp/>constant<sp/>data<sp/>in<sp/>this<sp/>dimension),<sp/>shift<sp/>current<sp/>range<sp/>to<sp/>at<sp/>least<sp/>center<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center<sp/>=<sp/>(newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>+newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)*0.5;<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>and<sp/>lower<sp/>should<sp/>be<sp/>equal<sp/>anyway,<sp/>but<sp/>just<sp/>to<sp/>make<sp/>sure,<sp/>incase<sp/>validRange<sp/>returned<sp/>false<sp/>for<sp/>other<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a2754d6a78736f64a241e333fbd955372" kindref="member">mDataScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">QCPAxis::stLinear</ref>)</highlight></codeline>
<codeline lineno="14133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center-<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="14135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center+<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/2.0;</highlight></codeline>
<codeline lineno="14136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mScaleType<sp/>==<sp/>stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>center/qSqrt(<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="14139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>center*qSqrt(<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>/<ref refid="class_q_c_p_color_scale_1a5d4853feb32cd0077bb2b871687c844b" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="14140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" kindref="member">setDataRange</ref>(newRange);</highlight></codeline>
<codeline lineno="14143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14145"><highlight class="normal"></highlight></codeline>
<codeline lineno="14146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1ab8f6991ac88243fc582b44b183670334" kindref="member">QCPColorScale::update</ref>(UpdatePhase<sp/>phase)</highlight></codeline>
<codeline lineno="14148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14149"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" kindref="member">QCPLayoutElement::update</ref>(phase);</highlight></codeline>
<codeline lineno="14150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="14151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14152"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14156"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;update(phase);</highlight></codeline>
<codeline lineno="14157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(phase)</highlight></codeline>
<codeline lineno="14159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" kindref="member">upMargins</ref>:</highlight></codeline>
<codeline lineno="14161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>||<sp/><ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)</highlight></codeline>
<codeline lineno="14163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">setMaximumSize</ref>(QWIDGETSIZE_MAX,<sp/><ref refid="class_q_c_p_color_scale_1a409d2ab78dff1f92da5e6acfb062e811" kindref="member">mBarWidth</ref>+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().top()+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().bottom()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().top()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().bottom());</highlight></codeline>
<codeline lineno="14165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">setMinimumSize</ref>(0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a409d2ab78dff1f92da5e6acfb062e811" kindref="member">mBarWidth</ref>+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().top()+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().bottom()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().top()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().bottom());</highlight></codeline>
<codeline lineno="14166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">setMaximumSize</ref>(<ref refid="class_q_c_p_color_scale_1a409d2ab78dff1f92da5e6acfb062e811" kindref="member">mBarWidth</ref>+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().left()+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().right()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().left()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().right(),<sp/>QWIDGETSIZE_MAX);</highlight></codeline>
<codeline lineno="14169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">setMinimumSize</ref>(<ref refid="class_q_c_p_color_scale_1a409d2ab78dff1f92da5e6acfb062e811" kindref="member">mBarWidth</ref>+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().left()+<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;margins().right()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().left()+<ref refid="class_q_c_p_layout_element_1a85ff977dfcced84eef32d9f819ec9543" kindref="member">margins</ref>().right(),<sp/>0);</highlight></codeline>
<codeline lineno="14170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" kindref="member">upLayout</ref>:</highlight></codeline>
<codeline lineno="14174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;setOuterRect(<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>());</highlight></codeline>
<codeline lineno="14176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14181"><highlight class="normal"></highlight></codeline>
<codeline lineno="14182"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a23d530c340c15d2fce6583e7120ee8bd" kindref="member">QCPColorScale::applyDefaultAntialiasingHint</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="14184"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14185"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14187"><highlight class="normal"></highlight></codeline>
<codeline lineno="14188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a5df6ad81b2ad045878d276c2d5be7120" kindref="member">QCPColorScale::mousePressEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="14190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="14192"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14193"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14196"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;mousePressEvent(event);</highlight></codeline>
<codeline lineno="14197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14198"><highlight class="normal"></highlight></codeline>
<codeline lineno="14199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a3aca469d531ce7b5882de73590aa0de6" kindref="member">QCPColorScale::mouseMoveEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="14201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="14203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14204"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14207"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;mouseMoveEvent(event);</highlight></codeline>
<codeline lineno="14208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14209"><highlight class="normal"></highlight></codeline>
<codeline lineno="14210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1a0916613d20901950fc6d00c6f99fe0a1" kindref="member">QCPColorScale::mouseReleaseEvent</ref>(QMouseEvent<sp/>*event)</highlight></codeline>
<codeline lineno="14212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="14214"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14215"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14218"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;mouseReleaseEvent(event);</highlight></codeline>
<codeline lineno="14219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14220"><highlight class="normal"></highlight></codeline>
<codeline lineno="14221"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_1ab398e14c01240f3dc855884fe9e1ee8c" kindref="member">QCPColorScale::wheelEvent</ref>(QWheelEvent<sp/>*event)</highlight></codeline>
<codeline lineno="14223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>)</highlight></codeline>
<codeline lineno="14225"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14226"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>axis<sp/>rect<sp/>was<sp/>deleted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14229"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_1a6e37f7d49cd614dc50ef1caae60461b9" kindref="member">mAxisRect</ref>.data()-&gt;wheelEvent(event);</highlight></codeline>
<codeline lineno="14230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14231"><highlight class="normal"></highlight></codeline>
<codeline lineno="14235"></codeline>
<codeline lineno="14250"><highlight class="normal"><ref refid="class_q_c_p_color_scale_axis_rect_private_1ad3b242f75dd2b33581364a4e668a80db" kindref="member">QCPColorScaleAxisRectPrivate::QCPColorScaleAxisRectPrivate</ref>(<ref refid="class_q_c_p_color_scale" kindref="compound">QCPColorScale</ref><sp/>*parentColorScale)<sp/>:</highlight></codeline>
<codeline lineno="14251"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref>(parentColorScale-&gt;parentPlot(),<sp/>true),</highlight></codeline>
<codeline lineno="14252"><highlight class="normal"><sp/><sp/>mParentColorScale(parentColorScale),</highlight></codeline>
<codeline lineno="14253"><highlight class="normal"><sp/><sp/>mGradientImageInvalidated(true)</highlight></codeline>
<codeline lineno="14254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14255"><highlight class="normal"><sp/><sp/>setParentLayerable(parentColorScale);</highlight></codeline>
<codeline lineno="14256"><highlight class="normal"><sp/><sp/>setMinimumMargins(QMargins(0,<sp/>0,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="14257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/>QList&lt;QCPAxis::AxisType&gt;()<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="14258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14259"><highlight class="normal"><sp/><sp/><sp/><sp/>axis(type)-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14260"><highlight class="normal"><sp/><sp/><sp/><sp/>axis(type)-&gt;<ref refid="class_q_c_p_axis_1ac4fb913cce3072b5e75a4635e0f6cd04" kindref="member">grid</ref>()-&gt;<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14261"><highlight class="normal"><sp/><sp/><sp/><sp/>axis(type)-&gt;<ref refid="class_q_c_p_axis_1a5691441cb3de9e9844855d339c0db279" kindref="member">setPadding</ref>(0);</highlight></codeline>
<codeline lineno="14262"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(axis(type),<sp/>SIGNAL(selectionChanged(QCPAxis::SelectableParts)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(axisSelectionChanged(QCPAxis::SelectableParts)));</highlight></codeline>
<codeline lineno="14263"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(axis(type),<sp/>SIGNAL(selectableChanged(QCPAxis::SelectableParts)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(axisSelectableChanged(QCPAxis::SelectableParts)));</highlight></codeline>
<codeline lineno="14264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14265"><highlight class="normal"></highlight></codeline>
<codeline lineno="14266"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>),<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>),<sp/>SLOT(setRange(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="14267"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>),<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>),<sp/>SLOT(setRange(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="14268"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>),<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>),<sp/>SLOT(setRange(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="14269"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>),<sp/>SIGNAL(rangeChanged(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>),<sp/>SLOT(setRange(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="14270"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>),<sp/>SIGNAL(scaleTypeChanged(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>),<sp/>SLOT(setScaleType(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="14271"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>),<sp/>SIGNAL(scaleTypeChanged(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>),<sp/>SLOT(setScaleType(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="14272"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>),<sp/>SIGNAL(scaleTypeChanged(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>),<sp/>SLOT(setScaleType(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="14273"><highlight class="normal"><sp/><sp/>connect(axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>),<sp/>SIGNAL(scaleTypeChanged(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/>axis(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>),<sp/>SLOT(setScaleType(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="14274"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>layer<sp/>transfers<sp/>of<sp/>color<sp/>scale<sp/>transfer<sp/>to<sp/>axis<sp/>rect<sp/>and<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>axes<sp/>must<sp/>be<sp/>set<sp/>after<sp/>axis<sp/>rect,<sp/>such<sp/>that<sp/>they<sp/>appear<sp/>above<sp/>color<sp/>gradient<sp/>drawn<sp/>by<sp/>axis<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14277"><highlight class="normal"><sp/><sp/>connect(parentColorScale,<sp/>SIGNAL(layerChanged(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>*)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(setLayer(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>*)));</highlight></codeline>
<codeline lineno="14278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/>QList&lt;QCPAxis::AxisType&gt;()<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="14279"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(parentColorScale,<sp/>SIGNAL(layerChanged(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>*)),<sp/>axis(type),<sp/>SLOT(setLayer(<ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref>*)));</highlight></codeline>
<codeline lineno="14280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14281"><highlight class="normal"></highlight></codeline>
<codeline lineno="14286"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1adb67bfe9057a9dd9a85f548c274e6d98" kindref="member">QCPColorScaleAxisRectPrivate::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="14287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_axis_rect_private_1a2c0b15b071e1f93006b48b5be022a631" kindref="member">mGradientImageInvalidated</ref>)</highlight></codeline>
<codeline lineno="14289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a73754cab312aeaddea1bfcc67cc079ac" kindref="member">updateGradientImage</ref>();</highlight></codeline>
<codeline lineno="14290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirrorHorz<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirrorVert<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>)</highlight></codeline>
<codeline lineno="14294"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14295"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorHorz<sp/>=<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a9a5236328c97fbfde01e3d91c4fcce6a" kindref="member">type</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>||<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a9a5236328c97fbfde01e3d91c4fcce6a" kindref="member">type</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>);</highlight></codeline>
<codeline lineno="14296"><highlight class="normal"><sp/><sp/><sp/><sp/>mirrorVert<sp/>=<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a2efbc90fd31898fe05d2b74a8422b1d5" kindref="member">mColorAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a9a5236328c97fbfde01e3d91c4fcce6a" kindref="member">type</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>||<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a9a5236328c97fbfde01e3d91c4fcce6a" kindref="member">type</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>);</highlight></codeline>
<codeline lineno="14297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14298"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14299"><highlight class="normal"><sp/><sp/>painter-&gt;drawImage(<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>(),<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1ad4f7c8ee1c6012d9950870811773119c" kindref="member">mGradientImage</ref>.mirrored(mirrorHorz,<sp/>mirrorVert));</highlight></codeline>
<codeline lineno="14300"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis_rect_1afb1bbbbda8345cd2710d92ee48440b53" kindref="member">QCPAxisRect::draw</ref>(painter);</highlight></codeline>
<codeline lineno="14301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14302"><highlight class="normal"></highlight></codeline>
<codeline lineno="14308"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a73754cab312aeaddea1bfcc67cc079ac" kindref="member">QCPColorScaleAxisRectPrivate::updateGradientImage</ref>()</highlight></codeline>
<codeline lineno="14309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().isEmpty())</highlight></codeline>
<codeline lineno="14311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14312"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1ae195a385032066b5c46cc3301af58922" kindref="member">mGradient</ref>.<ref refid="class_q_c_p_color_gradient_1ae7537a8e6d0fed3f1928328062bb0f4e" kindref="member">levelCount</ref>();</highlight></codeline>
<codeline lineno="14314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="14315"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>data(n);</highlight></codeline>
<codeline lineno="14316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14317"><highlight class="normal"><sp/><sp/><sp/><sp/>data[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="14318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>||<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1a7d47ed4ab76f38e50164e9d77fe33789" kindref="member">mType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)</highlight></codeline>
<codeline lineno="14319"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14320"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="14321"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/><ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().height();</highlight></codeline>
<codeline lineno="14322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1ad4f7c8ee1c6012d9950870811773119c" kindref="member">mGradientImage</ref><sp/>=<sp/>QImage(w,<sp/>h,<sp/>QImage::Format_RGB32);</highlight></codeline>
<codeline lineno="14323"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;QRgb*&gt;<sp/>pixels;</highlight></codeline>
<codeline lineno="14324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;<sp/>y&lt;h;<sp/>++y)</highlight></codeline>
<codeline lineno="14325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixels.append(reinterpret_cast&lt;QRgb*&gt;(<ref refid="class_q_c_p_color_scale_axis_rect_private_1ad4f7c8ee1c6012d9950870811773119c" kindref="member">mGradientImage</ref>.scanLine(y)));</highlight></codeline>
<codeline lineno="14326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1ae195a385032066b5c46cc3301af58922" kindref="member">mGradient</ref>.<ref refid="class_q_c_p_color_gradient_1aaf423ceb943e177b0ed2c48c811d83dc" kindref="member">colorize</ref>(data.constData(),<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(0,<sp/>n-1),<sp/>pixels.first(),<sp/>n);</highlight></codeline>
<codeline lineno="14327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=1;<sp/>y&lt;h;<sp/>++y)</highlight></codeline>
<codeline lineno="14328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pixels.at(y),<sp/>pixels.first(),<sp/>n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(QRgb));</highlight></codeline>
<codeline lineno="14329"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14331"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="class_q_c_p_layout_element_1affdfea003469aac3d0fac5f4e06171bc" kindref="member">rect</ref>().width();</highlight></codeline>
<codeline lineno="14332"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="14333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1ad4f7c8ee1c6012d9950870811773119c" kindref="member">mGradientImage</ref><sp/>=<sp/>QImage(w,<sp/>h,<sp/>QImage::Format_RGB32);</highlight></codeline>
<codeline lineno="14334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;<sp/>y&lt;h;<sp/>++y)</highlight></codeline>
<codeline lineno="14335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRgb<sp/>*pixels<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">QRgb*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_color_scale_axis_rect_private_1ad4f7c8ee1c6012d9950870811773119c" kindref="member">mGradientImage</ref>.scanLine(y));</highlight></codeline>
<codeline lineno="14337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRgb<sp/>lineColor<sp/>=<sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a311c73f51a4cb0b556388197833cf099" kindref="member">mParentColorScale</ref>-&gt;<ref refid="class_q_c_p_color_scale_1ae195a385032066b5c46cc3301af58922" kindref="member">mGradient</ref>.<ref refid="class_q_c_p_color_gradient_1a0599545c859268b025d2060dea741cea" kindref="member">color</ref>(data[h-1-y],<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(0,<sp/>n-1));</highlight></codeline>
<codeline lineno="14338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;<sp/>x&lt;w;<sp/>++x)</highlight></codeline>
<codeline lineno="14339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[x]<sp/>=<sp/>lineColor;</highlight></codeline>
<codeline lineno="14340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14342"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a2c0b15b071e1f93006b48b5be022a631" kindref="member">mGradientImageInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14344"><highlight class="normal"></highlight></codeline>
<codeline lineno="14350"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a6112ad4291ac1695d37659cb049d598d" kindref="member">QCPColorScaleAxisRectPrivate::axisSelectionChanged</ref>(QCPAxis::SelectableParts<sp/>selectedParts)</highlight></codeline>
<codeline lineno="14351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>bases<sp/>of<sp/>four<sp/>axes<sp/>shall<sp/>always<sp/>(de-)selected<sp/>synchronously:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/>QList&lt;QCPAxis::AxisType&gt;()<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="14354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*senderAxis<sp/>=<sp/>qobject_cast&lt;QCPAxis*&gt;(sender()))</highlight></codeline>
<codeline lineno="14356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(senderAxis-&gt;axisType()<sp/>==<sp/>type)</highlight></codeline>
<codeline lineno="14357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;<ref refid="class_q_c_p_axis_1ad2bff3d2ed3d35c10d44c0c02441bd2c" kindref="member">selectableParts</ref>().testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>))</highlight></codeline>
<codeline lineno="14360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectedParts.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>))</highlight></codeline>
<codeline lineno="14362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;<ref refid="class_q_c_p_axis_1ab9d7a69277dcbed9119b3c1f25ca19c3" kindref="member">setSelectedParts</ref>(<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;selectedParts()<sp/>|<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>);</highlight></codeline>
<codeline lineno="14363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;<ref refid="class_q_c_p_axis_1ab9d7a69277dcbed9119b3c1f25ca19c3" kindref="member">setSelectedParts</ref>(<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;selectedParts()<sp/>&amp;<sp/>~<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>);</highlight></codeline>
<codeline lineno="14365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14368"><highlight class="normal"></highlight></codeline>
<codeline lineno="14374"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_scale_axis_rect_private_1a66d2baed86966bb03a6d7c32dc7d59f7" kindref="member">QCPColorScaleAxisRectPrivate::axisSelectableChanged</ref>(QCPAxis::SelectableParts<sp/>selectableParts)</highlight></codeline>
<codeline lineno="14375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>synchronize<sp/>axis<sp/>base<sp/>selectability:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18a" kindref="member">QCPAxis::AxisType</ref><sp/>type,<sp/>QList&lt;QCPAxis::AxisType&gt;()<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="14378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*senderAxis<sp/>=<sp/>qobject_cast&lt;QCPAxis*&gt;(sender()))</highlight></codeline>
<codeline lineno="14380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(senderAxis-&gt;axisType()<sp/>==<sp/>type)</highlight></codeline>
<codeline lineno="14381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;<ref refid="class_q_c_p_axis_1ad2bff3d2ed3d35c10d44c0c02441bd2c" kindref="member">selectableParts</ref>().testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>))</highlight></codeline>
<codeline lineno="14384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectableParts.testFlag(<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>))</highlight></codeline>
<codeline lineno="14386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;<ref refid="class_q_c_p_axis_1a513f9b9e326c505d9bec54880031b085" kindref="member">setSelectableParts</ref>(<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;selectableParts()<sp/>|<sp/><ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>);</highlight></codeline>
<codeline lineno="14387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;<ref refid="class_q_c_p_axis_1a513f9b9e326c505d9bec54880031b085" kindref="member">setSelectableParts</ref>(<ref refid="class_q_c_p_axis_rect_1a560de44e47a4af0f86c59102a094b1e4" kindref="member">axis</ref>(type)-&gt;selectableParts()<sp/>&amp;<sp/>~<ref refid="class_q_c_p_axis_1abee4c7a54c468b1385dfce2c898b115fa8949d2c1a31eccae9be7ed32e7a1ae38" kindref="member">QCPAxis::spAxis</ref>);</highlight></codeline>
<codeline lineno="14389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14392"><highlight class="normal"></highlight></codeline>
<codeline lineno="14393"><highlight class="normal"></highlight></codeline>
<codeline lineno="14397"></codeline>
<codeline lineno="14417"><highlight class="normal"><ref refid="class_q_c_p_data_1a1f06d624e36ba0ed72ac36d42aa5c7ee" kindref="member">QCPData::QCPData</ref>()<sp/>:</highlight></codeline>
<codeline lineno="14418"><highlight class="normal"><sp/><sp/>key(0),</highlight></codeline>
<codeline lineno="14419"><highlight class="normal"><sp/><sp/>value(0),</highlight></codeline>
<codeline lineno="14420"><highlight class="normal"><sp/><sp/>keyErrorPlus(0),</highlight></codeline>
<codeline lineno="14421"><highlight class="normal"><sp/><sp/>keyErrorMinus(0),</highlight></codeline>
<codeline lineno="14422"><highlight class="normal"><sp/><sp/>valueErrorPlus(0),</highlight></codeline>
<codeline lineno="14423"><highlight class="normal"><sp/><sp/>valueErrorMinus(0)</highlight></codeline>
<codeline lineno="14424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14426"><highlight class="normal"></highlight></codeline>
<codeline lineno="14430"><highlight class="normal"><ref refid="class_q_c_p_data_1a1f06d624e36ba0ed72ac36d42aa5c7ee" kindref="member">QCPData::QCPData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>:</highlight></codeline>
<codeline lineno="14431"><highlight class="normal"><sp/><sp/>key(key),</highlight></codeline>
<codeline lineno="14432"><highlight class="normal"><sp/><sp/>value(value),</highlight></codeline>
<codeline lineno="14433"><highlight class="normal"><sp/><sp/>keyErrorPlus(0),</highlight></codeline>
<codeline lineno="14434"><highlight class="normal"><sp/><sp/>keyErrorMinus(0),</highlight></codeline>
<codeline lineno="14435"><highlight class="normal"><sp/><sp/>valueErrorPlus(0),</highlight></codeline>
<codeline lineno="14436"><highlight class="normal"><sp/><sp/>valueErrorMinus(0)</highlight></codeline>
<codeline lineno="14437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14439"><highlight class="normal"></highlight></codeline>
<codeline lineno="14440"><highlight class="normal"></highlight></codeline>
<codeline lineno="14444"></codeline>
<codeline lineno="14479"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14480"><highlight class="normal"></highlight></codeline>
<codeline lineno="14488"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14489"><highlight class="normal"></highlight></codeline>
<codeline lineno="14501"><highlight class="normal"><ref refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" kindref="member">QCPGraph::QCPGraph</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="14502"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>(keyAxis,<sp/>valueAxis)</highlight></codeline>
<codeline lineno="14503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14504"><highlight class="normal"><sp/><sp/>mData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>;</highlight></codeline>
<codeline lineno="14505"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14506"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::blue,<sp/>0));</highlight></codeline>
<codeline lineno="14507"><highlight class="normal"><sp/><sp/>setErrorPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="14508"><highlight class="normal"><sp/><sp/>setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="14509"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(QColor(80,<sp/>80,<sp/>255),<sp/>2.5));</highlight></codeline>
<codeline lineno="14510"><highlight class="normal"><sp/><sp/>setSelectedBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="14511"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14512"><highlight class="normal"><sp/><sp/>setLineStyle(lsLine);</highlight></codeline>
<codeline lineno="14513"><highlight class="normal"><sp/><sp/>setErrorType(etNone);</highlight></codeline>
<codeline lineno="14514"><highlight class="normal"><sp/><sp/>setErrorBarSize(6);</highlight></codeline>
<codeline lineno="14515"><highlight class="normal"><sp/><sp/>setErrorBarSkipSymbol(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14516"><highlight class="normal"><sp/><sp/>setChannelFillGraph(0);</highlight></codeline>
<codeline lineno="14517"><highlight class="normal"><sp/><sp/>setAdaptiveSampling(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14519"><highlight class="normal"></highlight></codeline>
<codeline lineno="14520"><highlight class="normal"><ref refid="class_q_c_p_graph_1ae9998cfb9d379ac0ef3fbd6995cfbd76" kindref="member">QCPGraph::~QCPGraph</ref>()</highlight></codeline>
<codeline lineno="14521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="14523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14524"><highlight class="normal"></highlight></codeline>
<codeline lineno="14535"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" kindref="member">QCPGraph::setData</ref>(<ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)</highlight></codeline>
<codeline lineno="14536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref><sp/>==<sp/>data)</highlight></codeline>
<codeline lineno="14538"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14539"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>data<sp/>pointer<sp/>is<sp/>already<sp/>in<sp/>(and<sp/>owned<sp/>by)<sp/>this<sp/>plottable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="14540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)</highlight></codeline>
<codeline lineno="14543"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14544"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref><sp/>=<sp/>*<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="14545"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14546"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="14548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref><sp/>=<sp/><ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="14549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14551"><highlight class="normal"></highlight></codeline>
<codeline lineno="14558"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" kindref="member">QCPGraph::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value)</highlight></codeline>
<codeline lineno="14559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14560"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="14562"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="14563"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14565"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14566"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="14567"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="14568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(newData.key,<sp/>newData);</highlight></codeline>
<codeline lineno="14569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14571"><highlight class="normal"></highlight></codeline>
<codeline lineno="14581"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1acba6296eadcb36b93267628b8dae3de5" kindref="member">QCPGraph::setDataValueError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;valueError)</highlight></codeline>
<codeline lineno="14582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14583"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="14585"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="14586"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>valueError.size());</highlight></codeline>
<codeline lineno="14587"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14589"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14590"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="14591"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="14592"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorMinus<sp/>=<sp/>valueError[i];</highlight></codeline>
<codeline lineno="14593"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorPlus<sp/>=<sp/>valueError[i];</highlight></codeline>
<codeline lineno="14594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/>newData);</highlight></codeline>
<codeline lineno="14595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14597"><highlight class="normal"></highlight></codeline>
<codeline lineno="14607"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1acba6296eadcb36b93267628b8dae3de5" kindref="member">QCPGraph::setDataValueError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;valueErrorMinus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;valueErrorPlus)</highlight></codeline>
<codeline lineno="14608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14609"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="14611"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="14612"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>valueErrorMinus.size());</highlight></codeline>
<codeline lineno="14613"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>valueErrorPlus.size());</highlight></codeline>
<codeline lineno="14614"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14616"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14617"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="14618"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="14619"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorMinus<sp/>=<sp/>valueErrorMinus[i];</highlight></codeline>
<codeline lineno="14620"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorPlus<sp/>=<sp/>valueErrorPlus[i];</highlight></codeline>
<codeline lineno="14621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/>newData);</highlight></codeline>
<codeline lineno="14622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14624"><highlight class="normal"></highlight></codeline>
<codeline lineno="14634"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" kindref="member">QCPGraph::setDataKeyError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keyError)</highlight></codeline>
<codeline lineno="14635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14636"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="14638"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="14639"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>keyError.size());</highlight></codeline>
<codeline lineno="14640"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14642"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14643"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="14644"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="14645"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorMinus<sp/>=<sp/>keyError[i];</highlight></codeline>
<codeline lineno="14646"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorPlus<sp/>=<sp/>keyError[i];</highlight></codeline>
<codeline lineno="14647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/>newData);</highlight></codeline>
<codeline lineno="14648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14650"><highlight class="normal"></highlight></codeline>
<codeline lineno="14660"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" kindref="member">QCPGraph::setDataKeyError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keyErrorMinus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keyErrorPlus)</highlight></codeline>
<codeline lineno="14661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14662"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="14664"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="14665"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>keyErrorMinus.size());</highlight></codeline>
<codeline lineno="14666"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>keyErrorPlus.size());</highlight></codeline>
<codeline lineno="14667"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14669"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14670"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="14671"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="14672"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorMinus<sp/>=<sp/>keyErrorMinus[i];</highlight></codeline>
<codeline lineno="14673"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorPlus<sp/>=<sp/>keyErrorPlus[i];</highlight></codeline>
<codeline lineno="14674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/>newData);</highlight></codeline>
<codeline lineno="14675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14677"><highlight class="normal"></highlight></codeline>
<codeline lineno="14687"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a873fe46bdb20be5710428e474ade8908" kindref="member">QCPGraph::setDataBothError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keyError,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;valueError)</highlight></codeline>
<codeline lineno="14688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14689"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="14691"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="14692"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>valueError.size());</highlight></codeline>
<codeline lineno="14693"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>keyError.size());</highlight></codeline>
<codeline lineno="14694"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14696"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14697"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="14698"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="14699"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorMinus<sp/>=<sp/>keyError[i];</highlight></codeline>
<codeline lineno="14700"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorPlus<sp/>=<sp/>keyError[i];</highlight></codeline>
<codeline lineno="14701"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorMinus<sp/>=<sp/>valueError[i];</highlight></codeline>
<codeline lineno="14702"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorPlus<sp/>=<sp/>valueError[i];</highlight></codeline>
<codeline lineno="14703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/>newData);</highlight></codeline>
<codeline lineno="14704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14706"><highlight class="normal"></highlight></codeline>
<codeline lineno="14716"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a873fe46bdb20be5710428e474ade8908" kindref="member">QCPGraph::setDataBothError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keyErrorMinus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keyErrorPlus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;valueErrorMinus,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;valueErrorPlus)</highlight></codeline>
<codeline lineno="14717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14718"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="14720"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="14721"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>valueErrorMinus.size());</highlight></codeline>
<codeline lineno="14722"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>valueErrorPlus.size());</highlight></codeline>
<codeline lineno="14723"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>keyErrorMinus.size());</highlight></codeline>
<codeline lineno="14724"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>keyErrorPlus.size());</highlight></codeline>
<codeline lineno="14725"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14727"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14728"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="14729"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="14730"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorMinus<sp/>=<sp/>keyErrorMinus[i];</highlight></codeline>
<codeline lineno="14731"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.keyErrorPlus<sp/>=<sp/>keyErrorPlus[i];</highlight></codeline>
<codeline lineno="14732"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorMinus<sp/>=<sp/>valueErrorMinus[i];</highlight></codeline>
<codeline lineno="14733"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.valueErrorPlus<sp/>=<sp/>valueErrorPlus[i];</highlight></codeline>
<codeline lineno="14734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/>newData);</highlight></codeline>
<codeline lineno="14735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14737"><highlight class="normal"></highlight></codeline>
<codeline lineno="14738"><highlight class="normal"></highlight></codeline>
<codeline lineno="14745"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" kindref="member">QCPGraph::setLineStyle</ref>(LineStyle<sp/>ls)</highlight></codeline>
<codeline lineno="14746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14747"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>=<sp/>ls;</highlight></codeline>
<codeline lineno="14748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14749"><highlight class="normal"></highlight></codeline>
<codeline lineno="14756"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" kindref="member">QCPGraph::setScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>&amp;style)</highlight></codeline>
<codeline lineno="14757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14758"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref><sp/>=<sp/>style;</highlight></codeline>
<codeline lineno="14759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14760"><highlight class="normal"></highlight></codeline>
<codeline lineno="14769"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">QCPGraph::setErrorType</ref>(ErrorType<sp/>errorType)</highlight></codeline>
<codeline lineno="14770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14771"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>=<sp/><ref refid="class_q_c_p_graph_1a250bcdf78abac87bc6d46ee6fd99a92d" kindref="member">errorType</ref>;</highlight></codeline>
<codeline lineno="14772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14773"><highlight class="normal"></highlight></codeline>
<codeline lineno="14778"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1abd4c7f81939e10776ea64603a704f22a" kindref="member">QCPGraph::setErrorPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="14779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14780"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1aa35681a24165c2831301091a87b662ce" kindref="member">mErrorPen</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="14781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14782"><highlight class="normal"></highlight></codeline>
<codeline lineno="14786"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a10f50c5495ce45ef559ec2066194a335" kindref="member">QCPGraph::setErrorBarSize</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="14787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14788"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a7b51c8d09510f9d195b5e765ccbcf05b" kindref="member">mErrorBarSize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="14789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14790"><highlight class="normal"></highlight></codeline>
<codeline lineno="14802"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ab1c1ee03d8dd94676a564e5e5f11aac2" kindref="member">QCPGraph::setErrorBarSkipSymbol</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="14803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14804"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" kindref="member">mErrorBarSkipSymbol</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="14805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14806"><highlight class="normal"></highlight></codeline>
<codeline lineno="14816"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a2d03156df1b64037a2e36cfa50351ca3" kindref="member">QCPGraph::setChannelFillGraph</ref>(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*targetGraph)</highlight></codeline>
<codeline lineno="14817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>setting<sp/>channel<sp/>target<sp/>to<sp/>this<sp/>graph<sp/>itself:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetGraph<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14820"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14821"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;targetGraph<sp/>is<sp/>this<sp/>graph<sp/>itself&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>setting<sp/>channel<sp/>target<sp/>to<sp/>a<sp/>graph<sp/>not<sp/>in<sp/>the<sp/>plot:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetGraph<sp/>&amp;&amp;<sp/>targetGraph-&gt;<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref><sp/>!=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="14827"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14828"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;targetGraph<sp/>not<sp/>in<sp/>same<sp/>plot&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14831"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14832"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="14833"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref><sp/>=<sp/>targetGraph;</highlight></codeline>
<codeline lineno="14834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14835"><highlight class="normal"></highlight></codeline>
<codeline lineno="14867"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ab468cd600160f327836aa0644291e64c" kindref="member">QCPGraph::setAdaptiveSampling</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="14868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14869"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1aa951e78aeba714cf443be6da2e52502e" kindref="member">mAdaptiveSampling</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="14870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14871"><highlight class="normal"></highlight></codeline>
<codeline lineno="14880"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">QCPGraph::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref><sp/>&amp;dataMap)</highlight></codeline>
<codeline lineno="14881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14882"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;unite(dataMap);</highlight></codeline>
<codeline lineno="14883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14884"><highlight class="normal"></highlight></codeline>
<codeline lineno="14893"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">QCPGraph::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="14894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14895"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(data.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="14896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14897"><highlight class="normal"></highlight></codeline>
<codeline lineno="14906"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">QCPGraph::addData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="14907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14908"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14909"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="14910"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" kindref="member">value</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="14911"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref>,<sp/>newData);</highlight></codeline>
<codeline lineno="14912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14913"><highlight class="normal"></highlight></codeline>
<codeline lineno="14922"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">QCPGraph::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values)</highlight></codeline>
<codeline lineno="14923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>qMin(keys.size(),<sp/>values.size());</highlight></codeline>
<codeline lineno="14925"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="14926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="14927"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14928"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref><sp/>=<sp/>keys[i];</highlight></codeline>
<codeline lineno="14929"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>values[i];</highlight></codeline>
<codeline lineno="14930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;insertMulti(newData.key,<sp/>newData);</highlight></codeline>
<codeline lineno="14931"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14933"><highlight class="normal"></highlight></codeline>
<codeline lineno="14938"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a9fe0b3e54e8c7b61319bd03337e21e99" kindref="member">QCPGraph::removeDataBefore</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="14939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14940"><highlight class="normal"><sp/><sp/>QCPDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="14941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;end()<sp/>&amp;&amp;<sp/>it.key()<sp/>&lt;<sp/>key)</highlight></codeline>
<codeline lineno="14942"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="14943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14944"><highlight class="normal"></highlight></codeline>
<codeline lineno="14949"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ae42d645ef617cfc75fc0df58e62c522a" kindref="member">QCPGraph::removeDataAfter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="14950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14952"><highlight class="normal"><sp/><sp/>QCPDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;upperBound(key);</highlight></codeline>
<codeline lineno="14953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;end())</highlight></codeline>
<codeline lineno="14954"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="14955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14956"><highlight class="normal"></highlight></codeline>
<codeline lineno="14964"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">QCPGraph::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toKey)</highlight></codeline>
<codeline lineno="14965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fromKey<sp/>&gt;=<sp/>toKey<sp/>||<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14967"><highlight class="normal"><sp/><sp/>QCPDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;upperBound(fromKey);</highlight></codeline>
<codeline lineno="14968"><highlight class="normal"><sp/><sp/>QCPDataMap::iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;upperBound(toKey);</highlight></codeline>
<codeline lineno="14969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="14970"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="14971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14972"><highlight class="normal"></highlight></codeline>
<codeline lineno="14981"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">QCPGraph::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="14982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14983"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;remove(key);</highlight></codeline>
<codeline lineno="14984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14985"><highlight class="normal"></highlight></codeline>
<codeline lineno="14990"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" kindref="member">QCPGraph::clearData</ref>()</highlight></codeline>
<codeline lineno="14991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14992"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="14993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14994"><highlight class="normal"></highlight></codeline>
<codeline lineno="14995"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14996"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1abc9ff375aabcf2d21cca33d6baf85772" kindref="member">QCPGraph::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="14997"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14998"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="14999"><highlight class="normal"><sp/><sp/>if<sp/>((onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)<sp/>||<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="15000"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="15001"><highlight class="normal"><sp/><sp/>if<sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="15002"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;rect().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="15004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1af93762a12a481a7edb4b3dd9e330dff1" kindref="member">pointDistance</ref>(pos);</highlight></codeline>
<codeline lineno="15005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15008"><highlight class="normal"></highlight></codeline>
<codeline lineno="15016"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1aa35b75b9032800d783df749c8a004ee9" kindref="member">QCPGraph::rescaleAxes</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeErrorBars)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15017"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15018"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a2108a729046b0ab6e0516afb249dab13" kindref="member">rescaleKeyAxis</ref>(onlyEnlarge,<sp/>includeErrorBars);</highlight></codeline>
<codeline lineno="15019"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a2ba0e1df416486d7e74299ef8cf68bba" kindref="member">rescaleValueAxis</ref>(onlyEnlarge,<sp/>includeErrorBars);</highlight></codeline>
<codeline lineno="15020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15021"><highlight class="normal"></highlight></codeline>
<codeline lineno="15029"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a2108a729046b0ab6e0516afb249dab13" kindref="member">QCPGraph::rescaleKeyAxis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeErrorBars)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15030"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15031"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>code<sp/>is<sp/>a<sp/>copy<sp/>of<sp/>QCPAbstractPlottable::rescaleKeyAxis<sp/>with<sp/>the<sp/>only<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>getKeyRange<sp/>is<sp/>passed<sp/>the<sp/>includeErrorBars<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15034"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15035"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15037"><highlight class="normal"></highlight></codeline>
<codeline lineno="15038"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref><sp/>signDomain<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>;</highlight></codeline>
<codeline lineno="15039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="15040"><highlight class="normal"><sp/><sp/><sp/><sp/>signDomain<sp/>=<sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref>);</highlight></codeline>
<codeline lineno="15041"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundRange;</highlight></codeline>
<codeline lineno="15043"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange<sp/>=<sp/><ref refid="class_q_c_p_graph_1afc246ce6201ff564ac440efaec52ab11" kindref="member">getKeyRange</ref>(foundRange,<sp/>signDomain,<sp/>includeErrorBars);</highlight></codeline>
<codeline lineno="15044"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundRange)</highlight></codeline>
<codeline lineno="15046"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onlyEnlarge)</highlight></codeline>
<codeline lineno="15048"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)</highlight></codeline>
<codeline lineno="15050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="15051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="15052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="15053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15054"><highlight class="normal"><sp/><sp/><sp/><sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(newRange);</highlight></codeline>
<codeline lineno="15055"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15057"><highlight class="normal"></highlight></codeline>
<codeline lineno="15065"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a2ba0e1df416486d7e74299ef8cf68bba" kindref="member">QCPGraph::rescaleValueAxis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyEnlarge,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeErrorBars)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15066"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15067"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>code<sp/>is<sp/>a<sp/>copy<sp/>of<sp/>QCPAbstractPlottable::rescaleValueAxis<sp/>with<sp/>the<sp/>only<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15068"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>that<sp/>getValueRange<sp/>is<sp/>passed<sp/>the<sp/>includeErrorBars<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15070"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15071"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15073"><highlight class="normal"></highlight></codeline>
<codeline lineno="15074"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref><sp/>signDomain<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>;</highlight></codeline>
<codeline lineno="15075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="15076"><highlight class="normal"><sp/><sp/><sp/><sp/>signDomain<sp/>=<sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>:<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref>);</highlight></codeline>
<codeline lineno="15077"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundRange;</highlight></codeline>
<codeline lineno="15079"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>newRange<sp/>=<sp/><ref refid="class_q_c_p_graph_1a856e90b8ab6b31c344b14a863ab9e5d2" kindref="member">getValueRange</ref>(foundRange,<sp/>signDomain,<sp/>includeErrorBars);</highlight></codeline>
<codeline lineno="15080"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15081"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundRange)</highlight></codeline>
<codeline lineno="15082"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onlyEnlarge)</highlight></codeline>
<codeline lineno="15084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)</highlight></codeline>
<codeline lineno="15086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="15087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="15088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="15089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15090"><highlight class="normal"><sp/><sp/><sp/><sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">setRange</ref>(newRange);</highlight></codeline>
<codeline lineno="15091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15093"><highlight class="normal"></highlight></codeline>
<codeline lineno="15094"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15095"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" kindref="member">QCPGraph::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="15096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().size()<sp/>&lt;=<sp/>0<sp/>||<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1aa3861281108d0adbeb291c820ea3925c" kindref="member">isNone</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15100"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>line<sp/>and<sp/>(if<sp/>necessary)<sp/>point<sp/>vectors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15102"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>*lineData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;;</highlight></codeline>
<codeline lineno="15103"><highlight class="normal"><sp/><sp/>QVector&lt;QCPData&gt;<sp/>*scatterData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1aa3861281108d0adbeb291c820ea3925c" kindref="member">isNone</ref>())</highlight></codeline>
<codeline lineno="15105"><highlight class="normal"><sp/><sp/><sp/><sp/>scatterData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QVector&lt;QCPData&gt;;</highlight></codeline>
<codeline lineno="15106"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>vectors<sp/>with<sp/>data<sp/>appropriate<sp/>to<sp/>plot<sp/>style:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15108"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a466c661e015188971c862031af946693" kindref="member">getPlotData</ref>(lineData,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15109"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>data<sp/>validity<sp/>if<sp/>flag<sp/>set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCUSTOMPLOT_CHECK_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15112"><highlight class="normal"><sp/><sp/>QCPDataMap::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="15113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd();<sp/>++it)</highlight></codeline>
<codeline lineno="15114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(it.value().key,<sp/>it.value().value)<sp/>||</highlight></codeline>
<codeline lineno="15116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(it.value().keyErrorPlus,<sp/>it.value().keyErrorMinus)<sp/>||</highlight></codeline>
<codeline lineno="15117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(it.value().valueErrorPlus,<sp/>it.value().valueErrorPlus))</highlight></codeline>
<codeline lineno="15118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>point<sp/>at&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it.key()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Plottable<sp/>name:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="15119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15121"><highlight class="normal"></highlight></codeline>
<codeline lineno="15122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>fill<sp/>of<sp/>graph:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15123"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1ad6d07926e6d6b7cfa70258780d47b7a0" kindref="member">drawFill</ref>(painter,<sp/>lineData);</highlight></codeline>
<codeline lineno="15124"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>line:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" kindref="member">lsImpulse</ref>)</highlight></codeline>
<codeline lineno="15127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1abc01180629621f1e47e94559227d3d8c" kindref="member">drawImpulsePlot</ref>(painter,<sp/>lineData);</highlight></codeline>
<codeline lineno="15128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>!=<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref>)</highlight></codeline>
<codeline lineno="15129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1acebc22c3385829b19a87e6281fe6ade2" kindref="member">drawLinePlot</ref>(painter,<sp/>lineData);<sp/></highlight><highlight class="comment">//<sp/>also<sp/>step<sp/>plots<sp/>can<sp/>be<sp/>drawn<sp/>as<sp/>a<sp/>line<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15130"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>scatters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scatterData)</highlight></codeline>
<codeline lineno="15133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a6bdc385b122ce06134d4196373ae2250" kindref="member">drawScatterPlot</ref>(painter,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15134"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>allocated<sp/>line<sp/>and<sp/>point<sp/>vectors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lineData;</highlight></codeline>
<codeline lineno="15137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scatterData)</highlight></codeline>
<codeline lineno="15138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scatterData;</highlight></codeline>
<codeline lineno="15139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15140"><highlight class="normal"></highlight></codeline>
<codeline lineno="15141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a32115df0e940cf8ca7b687873c2d02ee" kindref="member">QCPGraph::drawLegendIcon</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15143"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>fill:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush)</highlight></codeline>
<codeline lineno="15146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ac08a480155895e674dbfe5a5670e0ff3" kindref="member">applyFillAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15148"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;fillRect(QRectF(rect.left(),<sp/>rect.top()+rect.height()/2.0,<sp/>rect.width(),<sp/>rect.height()/3.0),<sp/><ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>);</highlight></codeline>
<codeline lineno="15149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>line<sp/>vertically<sp/>centered:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>!=<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref>)</highlight></codeline>
<codeline lineno="15152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15154"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="15155"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.left(),<sp/>rect.top()+rect.height()/2.0,<sp/>rect.right()+5,<sp/>rect.top()+rect.height()/2.0));<sp/></highlight><highlight class="comment">//<sp/>+5<sp/>on<sp/>x2<sp/>else<sp/>last<sp/>segment<sp/>is<sp/>missing<sp/>from<sp/>dashed/dotted<sp/>pens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>scatter<sp/>symbol:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1aa3861281108d0adbeb291c820ea3925c" kindref="member">isNone</ref>())</highlight></codeline>
<codeline lineno="15159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a753272ee225a62827e90c3e1e78de4b1" kindref="member">applyScattersAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>scatter<sp/>pixmap<sp/>if<sp/>it&apos;s<sp/>too<sp/>large<sp/>to<sp/>fit<sp/>in<sp/>legend<sp/>icon<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a4462a25ef17769631f4e0aa81dadca4b" kindref="member">shape</ref>()<sp/>==<sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" kindref="member">QCPScatterStyle::ssPixmap</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a9bab44cc41fcd585621a4b3e0e48231b" kindref="member">pixmap</ref>().size().width()<sp/>&gt;<sp/>rect.width()<sp/>||<sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a9bab44cc41fcd585621a4b3e0e48231b" kindref="member">pixmap</ref>().size().height()<sp/>&gt;<sp/>rect.height()))</highlight></codeline>
<codeline lineno="15163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>scaledStyle(<ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>);</highlight></codeline>
<codeline lineno="15165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledStyle.setPixmap(scaledStyle.pixmap().scaled(rect.size().toSize(),<sp/>Qt::KeepAspectRatio,<sp/>Qt::SmoothTransformation));</highlight></codeline>
<codeline lineno="15166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledStyle.applyTo(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="15167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledStyle.drawShape(painter,<sp/>QRectF(rect).center());</highlight></codeline>
<codeline lineno="15168"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a81817dfd404635f211e6ff2a04657d36" kindref="member">applyTo</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="15171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">drawShape</ref>(painter,<sp/>QRectF(rect).center());</highlight></codeline>
<codeline lineno="15172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15175"><highlight class="normal"></highlight></codeline>
<codeline lineno="15194"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a466c661e015188971c862031af946693" kindref="member">QCPGraph::getPlotData</ref>(QVector&lt;QPointF&gt;<sp/>*lineData,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15195"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref>)</highlight></codeline>
<codeline lineno="15197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref>:<sp/><ref refid="class_q_c_p_graph_1a45c4214b59ea11aa6d8d112bdc3b0e03" kindref="member">getScatterPlotData</ref>(scatterData);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" kindref="member">lsLine</ref>:<sp/><ref refid="class_q_c_p_graph_1ae3d82ffd0c9a883482aabf47b0e6b5ee" kindref="member">getLinePlotData</ref>(lineData,<sp/>scatterData);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" kindref="member">lsStepLeft</ref>:<sp/><ref refid="class_q_c_p_graph_1a609cf4a78045b4d2a679bdff7623847e" kindref="member">getStepLeftPlotData</ref>(lineData,<sp/>scatterData);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" kindref="member">lsStepRight</ref>:<sp/><ref refid="class_q_c_p_graph_1a3b9b8c8dc7a6fd9be6e253c25ee31809" kindref="member">getStepRightPlotData</ref>(lineData,<sp/>scatterData);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" kindref="member">lsStepCenter</ref>:<sp/><ref refid="class_q_c_p_graph_1ad3713e7d8eb85a0afc34a81a5db5cd27" kindref="member">getStepCenterPlotData</ref>(lineData,<sp/>scatterData);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" kindref="member">lsImpulse</ref>:<sp/><ref refid="class_q_c_p_graph_1a1ca2b0762505767f116892609fb02062" kindref="member">getImpulsePlotData</ref>(lineData,<sp/>scatterData);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15206"><highlight class="normal"></highlight></codeline>
<codeline lineno="15218"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a45c4214b59ea11aa6d8d112bdc3b0e03" kindref="member">QCPGraph::getScatterPlotData</ref>(QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15220"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1ab420b46ba638dc3252439fe16687b244" kindref="member">getPreparedData</ref>(0,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15222"><highlight class="normal"></highlight></codeline>
<codeline lineno="15234"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ae3d82ffd0c9a883482aabf47b0e6b5ee" kindref="member">QCPGraph::getLinePlotData</ref>(QVector&lt;QPointF&gt;<sp/>*linePixelData,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15235"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15236"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15237"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!linePixelData)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>passed<sp/>as<sp/>linePixelData&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15240"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15241"><highlight class="normal"><sp/><sp/>QVector&lt;QCPData&gt;<sp/>lineData;</highlight></codeline>
<codeline lineno="15242"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1ab420b46ba638dc3252439fe16687b244" kindref="member">getPreparedData</ref>(&amp;lineData,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15243"><highlight class="normal"><sp/><sp/>linePixelData-&gt;reserve(lineData.size()+2);<sp/></highlight><highlight class="comment">//<sp/>added<sp/>2<sp/>to<sp/>reserve<sp/>memory<sp/>for<sp/>lower/upper<sp/>fill<sp/>base<sp/>points<sp/>that<sp/>might<sp/>be<sp/>needed<sp/>for<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15244"><highlight class="normal"><sp/><sp/>linePixelData-&gt;resize(lineData.size());</highlight></codeline>
<codeline lineno="15245"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transform<sp/>lineData<sp/>points<sp/>to<sp/>pixels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15248"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i].setX(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value));</highlight></codeline>
<codeline lineno="15252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i].setY(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key));</highlight></codeline>
<codeline lineno="15253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15254"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>key<sp/>axis<sp/>is<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i].setX(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key));</highlight></codeline>
<codeline lineno="15259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i].setY(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value));</highlight></codeline>
<codeline lineno="15260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15263"><highlight class="normal"></highlight></codeline>
<codeline lineno="15275"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a609cf4a78045b4d2a679bdff7623847e" kindref="member">QCPGraph::getStepLeftPlotData</ref>(QVector&lt;QPointF&gt;<sp/>*linePixelData,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15276"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15277"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15278"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!linePixelData)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>passed<sp/>as<sp/>lineData&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15282"><highlight class="normal"><sp/><sp/>QVector&lt;QCPData&gt;<sp/>lineData;</highlight></codeline>
<codeline lineno="15283"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1ab420b46ba638dc3252439fe16687b244" kindref="member">getPreparedData</ref>(&amp;lineData,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15284"><highlight class="normal"><sp/><sp/>linePixelData-&gt;reserve(lineData.size()*2+2);<sp/></highlight><highlight class="comment">//<sp/>added<sp/>2<sp/>to<sp/>reserve<sp/>memory<sp/>for<sp/>lower/upper<sp/>fill<sp/>base<sp/>points<sp/>that<sp/>might<sp/>be<sp/>needed<sp/>for<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15285"><highlight class="normal"><sp/><sp/>linePixelData-&gt;resize(lineData.size()*2);</highlight></codeline>
<codeline lineno="15286"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>steps<sp/>from<sp/>lineData<sp/>and<sp/>transform<sp/>to<sp/>pixel<sp/>coordinates:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15289"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().value);</highlight></codeline>
<codeline lineno="15291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="15292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(lastValue);</highlight></codeline>
<codeline lineno="15296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(key);</highlight></codeline>
<codeline lineno="15297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value);</highlight></codeline>
<codeline lineno="15298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setX(lastValue);</highlight></codeline>
<codeline lineno="15299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setY(key);</highlight></codeline>
<codeline lineno="15300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15301"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>key<sp/>axis<sp/>is<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().value);</highlight></codeline>
<codeline lineno="15304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="15305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(key);</highlight></codeline>
<codeline lineno="15309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(lastValue);</highlight></codeline>
<codeline lineno="15310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value);</highlight></codeline>
<codeline lineno="15311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setX(key);</highlight></codeline>
<codeline lineno="15312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setY(lastValue);</highlight></codeline>
<codeline lineno="15313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15316"><highlight class="normal"></highlight></codeline>
<codeline lineno="15328"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a3b9b8c8dc7a6fd9be6e253c25ee31809" kindref="member">QCPGraph::getStepRightPlotData</ref>(QVector&lt;QPointF&gt;<sp/>*linePixelData,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15329"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15330"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15331"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!linePixelData)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>passed<sp/>as<sp/>lineData&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15334"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15335"><highlight class="normal"><sp/><sp/>QVector&lt;QCPData&gt;<sp/>lineData;</highlight></codeline>
<codeline lineno="15336"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1ab420b46ba638dc3252439fe16687b244" kindref="member">getPreparedData</ref>(&amp;lineData,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15337"><highlight class="normal"><sp/><sp/>linePixelData-&gt;reserve(lineData.size()*2+2);<sp/></highlight><highlight class="comment">//<sp/>added<sp/>2<sp/>to<sp/>reserve<sp/>memory<sp/>for<sp/>lower/upper<sp/>fill<sp/>base<sp/>points<sp/>that<sp/>might<sp/>be<sp/>needed<sp/>for<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15338"><highlight class="normal"><sp/><sp/>linePixelData-&gt;resize(lineData.size()*2);</highlight></codeline>
<codeline lineno="15339"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>steps<sp/>from<sp/>lineData<sp/>and<sp/>transform<sp/>to<sp/>pixel<sp/>coordinates:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15342"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().key);</highlight></codeline>
<codeline lineno="15344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="15345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value);</highlight></codeline>
<codeline lineno="15348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(value);</highlight></codeline>
<codeline lineno="15349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(lastKey);</highlight></codeline>
<codeline lineno="15350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setX(value);</highlight></codeline>
<codeline lineno="15352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setY(lastKey);</highlight></codeline>
<codeline lineno="15353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15354"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>key<sp/>axis<sp/>is<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15355"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().key);</highlight></codeline>
<codeline lineno="15357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="15358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value);</highlight></codeline>
<codeline lineno="15361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(lastKey);</highlight></codeline>
<codeline lineno="15362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(value);</highlight></codeline>
<codeline lineno="15363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setX(lastKey);</highlight></codeline>
<codeline lineno="15365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setY(value);</highlight></codeline>
<codeline lineno="15366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15369"><highlight class="normal"></highlight></codeline>
<codeline lineno="15381"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad3713e7d8eb85a0afc34a81a5db5cd27" kindref="member">QCPGraph::getStepCenterPlotData</ref>(QVector&lt;QPointF&gt;<sp/>*linePixelData,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15382"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15383"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15384"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!linePixelData)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>passed<sp/>as<sp/>lineData&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15387"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15388"><highlight class="normal"><sp/><sp/>QVector&lt;QCPData&gt;<sp/>lineData;</highlight></codeline>
<codeline lineno="15389"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1ab420b46ba638dc3252439fe16687b244" kindref="member">getPreparedData</ref>(&amp;lineData,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15390"><highlight class="normal"><sp/><sp/>linePixelData-&gt;reserve(lineData.size()*2+2);<sp/></highlight><highlight class="comment">//<sp/>added<sp/>2<sp/>to<sp/>reserve<sp/>memory<sp/>for<sp/>lower/upper<sp/>fill<sp/>base<sp/>points<sp/>that<sp/>might<sp/>be<sp/>needed<sp/>for<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15391"><highlight class="normal"><sp/><sp/>linePixelData-&gt;resize(lineData.size()*2);</highlight></codeline>
<codeline lineno="15392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>steps<sp/>from<sp/>lineData<sp/>and<sp/>transform<sp/>to<sp/>pixel<sp/>coordinates:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().key);</highlight></codeline>
<codeline lineno="15396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().value);</highlight></codeline>
<codeline lineno="15397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="15398"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[0].setX(lastValue);</highlight></codeline>
<codeline lineno="15399"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[0].setY(lastKey);</highlight></codeline>
<codeline lineno="15400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key)+lastKey)*0.5;</highlight></codeline>
<codeline lineno="15403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2-1].setX(lastValue);</highlight></codeline>
<codeline lineno="15404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2-1].setY(key);</highlight></codeline>
<codeline lineno="15405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value);</highlight></codeline>
<codeline lineno="15406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(lastValue);</highlight></codeline>
<codeline lineno="15408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(key);</highlight></codeline>
<codeline lineno="15409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15410"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[lineData.size()*2-1].setX(lastValue);</highlight></codeline>
<codeline lineno="15411"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[lineData.size()*2-1].setY(lastKey);</highlight></codeline>
<codeline lineno="15412"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>key<sp/>axis<sp/>is<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15413"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().key);</highlight></codeline>
<codeline lineno="15415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.first().value);</highlight></codeline>
<codeline lineno="15416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="15417"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[0].setX(lastKey);</highlight></codeline>
<codeline lineno="15418"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[0].setY(lastValue);</highlight></codeline>
<codeline lineno="15419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key)+lastKey)*0.5;</highlight></codeline>
<codeline lineno="15422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2-1].setX(key);</highlight></codeline>
<codeline lineno="15423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2-1].setY(lastValue);</highlight></codeline>
<codeline lineno="15424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastValue<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value);</highlight></codeline>
<codeline lineno="15425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(key);</highlight></codeline>
<codeline lineno="15427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(lastValue);</highlight></codeline>
<codeline lineno="15428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15429"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[lineData.size()*2-1].setX(lastKey);</highlight></codeline>
<codeline lineno="15430"><highlight class="normal"><sp/><sp/><sp/><sp/>(*linePixelData)[lineData.size()*2-1].setY(lastValue);</highlight></codeline>
<codeline lineno="15431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15432"><highlight class="normal"></highlight></codeline>
<codeline lineno="15433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15434"><highlight class="normal"></highlight></codeline>
<codeline lineno="15446"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a1ca2b0762505767f116892609fb02062" kindref="member">QCPGraph::getImpulsePlotData</ref>(QVector&lt;QPointF&gt;<sp/>*linePixelData,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15447"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15448"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15449"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!linePixelData)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>pointer<sp/>passed<sp/>as<sp/>linePixelData&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15452"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15453"><highlight class="normal"><sp/><sp/>QVector&lt;QCPData&gt;<sp/>lineData;</highlight></codeline>
<codeline lineno="15454"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1ab420b46ba638dc3252439fe16687b244" kindref="member">getPreparedData</ref>(&amp;lineData,<sp/>scatterData);</highlight></codeline>
<codeline lineno="15455"><highlight class="normal"><sp/><sp/>linePixelData-&gt;resize(lineData.size()*2);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>reserve<sp/>2<sp/>extra<sp/>points<sp/>because<sp/>impulse<sp/>plot<sp/>has<sp/>no<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15456"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transform<sp/>lineData<sp/>points<sp/>to<sp/>pixels:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15459"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zeroPointX<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0);</highlight></codeline>
<codeline lineno="15461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="15462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(zeroPointX);</highlight></codeline>
<codeline lineno="15466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(key);</highlight></codeline>
<codeline lineno="15467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setX(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value));</highlight></codeline>
<codeline lineno="15468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setY(key);</highlight></codeline>
<codeline lineno="15469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15470"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>key<sp/>axis<sp/>is<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15471"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zeroPointY<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0);</highlight></codeline>
<codeline lineno="15473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="15474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData.size();<sp/>++i)</highlight></codeline>
<codeline lineno="15475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).key);</highlight></codeline>
<codeline lineno="15477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setX(key);</highlight></codeline>
<codeline lineno="15478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+0].setY(zeroPointY);</highlight></codeline>
<codeline lineno="15479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setX(key);</highlight></codeline>
<codeline lineno="15480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*linePixelData)[i*2+1].setY(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lineData.at(i).value));</highlight></codeline>
<codeline lineno="15481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15484"><highlight class="normal"></highlight></codeline>
<codeline lineno="15498"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad6d07926e6d6b7cfa70258780d47b7a0" kindref="member">QCPGraph::drawFill</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>QVector&lt;QPointF&gt;<sp/>*lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15499"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" kindref="member">lsImpulse</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>doesn&apos;t<sp/>make<sp/>sense<sp/>for<sp/>impulse<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>().style()<sp/>==<sp/>Qt::NoBrush<sp/>||<sp/><ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>().color().alpha()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15502"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15503"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ac08a480155895e674dbfe5a5670e0ff3" kindref="member">applyFillAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref>)</highlight></codeline>
<codeline lineno="15505"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>base<sp/>fill<sp/>under<sp/>graph,<sp/>fill<sp/>goes<sp/>all<sp/>the<sp/>way<sp/>to<sp/>the<sp/>zero-value-line:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a5fa7884620d7c54b81dfbd255d97b636" kindref="member">addFillBasePoints</ref>(lineData);</highlight></codeline>
<codeline lineno="15508"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(Qt::NoPen);</highlight></codeline>
<codeline lineno="15509"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="15510"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPolygon(QPolygonF(*lineData));</highlight></codeline>
<codeline lineno="15511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1ad31b49a90e91e538fd9caf011c913a68" kindref="member">removeFillBasePoints</ref>(lineData);</highlight></codeline>
<codeline lineno="15512"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15513"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>channel<sp/>fill<sp/>between<sp/>this<sp/>graph<sp/>and<sp/>mChannelFillGraph:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15515"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(Qt::NoPen);</highlight></codeline>
<codeline lineno="15516"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="15517"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPolygon(<ref refid="class_q_c_p_graph_1a0374b7268e35cab9802a6be2b5d726d7" kindref="member">getChannelFillPolygon</ref>(lineData));</highlight></codeline>
<codeline lineno="15518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15520"><highlight class="normal"></highlight></codeline>
<codeline lineno="15530"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a6bdc385b122ce06134d4196373ae2250" kindref="member">QCPGraph::drawScatterPlot</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15531"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15532"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15533"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15535"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15536"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>error<sp/>bars:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>!=<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" kindref="member">etNone</ref>)</highlight></codeline>
<codeline lineno="15538"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1af687bfe6160255960558eb71f1f81e73" kindref="member">applyErrorBarsAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15540"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_graph_1aa35681a24165c2831301091a87b662ce" kindref="member">mErrorPen</ref>);</highlight></codeline>
<codeline lineno="15541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;scatterData-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="15544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a4df6807066ce877705e999773e7ffbc4" kindref="member">drawError</ref>(painter,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).value),<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).key),<sp/>scatterData-&gt;at(i));</highlight></codeline>
<codeline lineno="15545"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;scatterData-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="15548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a4df6807066ce877705e999773e7ffbc4" kindref="member">drawError</ref>(painter,<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).key),<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).value),<sp/>scatterData-&gt;at(i));</highlight></codeline>
<codeline lineno="15549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15551"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>scatter<sp/>point<sp/>symbols:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15553"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a753272ee225a62827e90c3e1e78de4b1" kindref="member">applyScattersAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15554"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a81817dfd404635f211e6ff2a04657d36" kindref="member">applyTo</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="15555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15556"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;scatterData-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="15558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(scatterData-&gt;at(i).value))</highlight></codeline>
<codeline lineno="15559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">drawShape</ref>(painter,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).value),<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).key));</highlight></codeline>
<codeline lineno="15560"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15561"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;scatterData-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="15563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(scatterData-&gt;at(i).value))</highlight></codeline>
<codeline lineno="15564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">drawShape</ref>(painter,<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).key),<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(scatterData-&gt;at(i).value));</highlight></codeline>
<codeline lineno="15565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15567"><highlight class="normal"></highlight></codeline>
<codeline lineno="15577"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1acebc22c3385829b19a87e6281fe6ade2" kindref="member">QCPGraph::drawLinePlot</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>QVector&lt;QPointF&gt;<sp/>*lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15578"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>line<sp/>of<sp/>graph:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().style()<sp/>!=<sp/>Qt::NoPen<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15581"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15583"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="15584"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="15585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Draws<sp/>polyline<sp/>in<sp/>batches,<sp/>currently<sp/>not<sp/>used:</highlight></codeline>
<codeline lineno="15587"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15588"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(p<sp/>&lt;<sp/>lineData-&gt;size())</highlight></codeline>
<codeline lineno="15589"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>batch<sp/>=<sp/>qMin(25,<sp/>lineData-&gt;size()-p);</highlight></codeline>
<codeline lineno="15591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(p<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++batch;</highlight></codeline>
<codeline lineno="15594"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--p;<sp/>//<sp/>to<sp/>draw<sp/>the<sp/>connection<sp/>lines<sp/>between<sp/>two<sp/>batches</highlight></codeline>
<codeline lineno="15595"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(lineData-&gt;constData()+p,<sp/>batch);</highlight></codeline>
<codeline lineno="15597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>batch;</highlight></codeline>
<codeline lineno="15598"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15599"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>drawing<sp/>solid<sp/>line<sp/>and<sp/>not<sp/>in<sp/>PDF,<sp/>use<sp/>much<sp/>faster<sp/>line<sp/>drawing<sp/>instead<sp/>of<sp/>polyline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a130b55e205697a5288081e9fc11e443e" kindref="member">plottingHints</ref>().testFlag(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" kindref="member">QCP::phFastPolylines</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="15603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;pen().style()<sp/>==<sp/>Qt::SolidLine<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="15604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!painter-&gt;<ref refid="class_q_c_p_painter_1a99b89eaf5363faaa1e1e6162856f436c" kindref="member">modes</ref>().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">QCPPainter::pmVectorized</ref>)&amp;&amp;</highlight></codeline>
<codeline lineno="15605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!painter-&gt;<ref refid="class_q_c_p_painter_1a99b89eaf5363faaa1e1e6162856f436c" kindref="member">modes</ref>().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">QCPPainter::pmNoCaching</ref>))</highlight></codeline>
<codeline lineno="15606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDataSize<sp/>=<sp/>lineData-&gt;size();</highlight></codeline>
<codeline lineno="15609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>lineDataSize)</highlight></codeline>
<codeline lineno="15610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(lineData-&gt;at(i).y())<sp/>&amp;&amp;<sp/>!qIsNaN(lineData-&gt;at(i).x()))<sp/></highlight><highlight class="comment">//<sp/>NaNs<sp/>create<sp/>a<sp/>gap<sp/>in<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(lineData-&gt;at(i-1),<sp/>lineData-&gt;at(i));</highlight></codeline>
<codeline lineno="15613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="15615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="15616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15617"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDataSize<sp/>=<sp/>lineData-&gt;size();</highlight></codeline>
<codeline lineno="15622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>lineDataSize)</highlight></codeline>
<codeline lineno="15623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qIsNaN(lineData-&gt;at(i).y())<sp/>||<sp/>qIsNaN(lineData-&gt;at(i).x()))<sp/></highlight><highlight class="comment">//<sp/>NaNs<sp/>create<sp/>a<sp/>gap<sp/>in<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(lineData-&gt;constData()+segmentStart,<sp/>i-segmentStart);<sp/></highlight><highlight class="comment">//<sp/>i,<sp/>because<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>include<sp/>the<sp/>current<sp/>NaN<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentStart<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="15628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="15630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>last<sp/>segment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(lineData-&gt;constData()+segmentStart,<sp/>lineDataSize-segmentStart);<sp/></highlight><highlight class="comment">//<sp/>lineDataSize,<sp/>because<sp/>we<sp/>do<sp/>want<sp/>to<sp/>include<sp/>the<sp/>last<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15636"><highlight class="normal"></highlight></codeline>
<codeline lineno="15644"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1abc01180629621f1e47e94559227d3d8c" kindref="member">QCPGraph::drawImpulsePlot</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>QVector&lt;QPointF&gt;<sp/>*lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15645"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>impulses:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().style()<sp/>!=<sp/>Qt::NoPen<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15648"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="15650"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>pen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>();</highlight></codeline>
<codeline lineno="15651"><highlight class="normal"><sp/><sp/><sp/><sp/>pen.setCapStyle(Qt::FlatCap);<sp/></highlight><highlight class="comment">//<sp/>so<sp/>impulse<sp/>line<sp/>doesn&apos;t<sp/>reach<sp/>beyond<sp/>zero-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15652"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(pen);</highlight></codeline>
<codeline lineno="15653"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="15654"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawLines(*lineData);</highlight></codeline>
<codeline lineno="15655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15657"><highlight class="normal"></highlight></codeline>
<codeline lineno="15670"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ab420b46ba638dc3252439fe16687b244" kindref="member">QCPGraph::getPreparedData</ref>(QVector&lt;QCPData&gt;<sp/>*lineData,<sp/>QVector&lt;QCPData&gt;<sp/>*scatterData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15671"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15672"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15673"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>data<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15676"><highlight class="normal"><sp/><sp/>QCPDataMap::const_iterator<sp/>lower,<sp/>upper;<sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>upper<sp/>is<sp/>the<sp/>actual<sp/>upper<sp/>point,<sp/>and<sp/>not<sp/>1<sp/>step<sp/>after<sp/>the<sp/>upper<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15677"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a6a317cb14a83dae0841c7041a63d6d9d" kindref="member">getVisibleDataBounds</ref>(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="15678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>==<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd()<sp/>||<sp/>upper<sp/>==<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="15679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15680"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>points<sp/>in<sp/>visible<sp/>range,<sp/>taking<sp/>into<sp/>account<sp/>that<sp/>we<sp/>only<sp/>need<sp/>to<sp/>count<sp/>to<sp/>the<sp/>limit<sp/>maxCount<sp/>if<sp/>using<sp/>adaptive<sp/>sampling:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxCount<sp/>=<sp/>std::numeric_limits&lt;int&gt;::max();</highlight></codeline>
<codeline lineno="15683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1aa951e78aeba714cf443be6da2e52502e" kindref="member">mAdaptiveSampling</ref>)</highlight></codeline>
<codeline lineno="15684"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyPixelSpan<sp/>=<sp/>qAbs(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lower.key())-keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(upper.key()));</highlight></codeline>
<codeline lineno="15686"><highlight class="normal"><sp/><sp/><sp/><sp/>maxCount<sp/>=<sp/>2*keyPixelSpan+2;</highlight></codeline>
<codeline lineno="15687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataCount<sp/>=<sp/><ref refid="class_q_c_p_graph_1a13f6a3aa60227e03ab1f7aa8eec6589f" kindref="member">countDataInBounds</ref>(lower,<sp/>upper,<sp/>maxCount);</highlight></codeline>
<codeline lineno="15689"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1aa951e78aeba714cf443be6da2e52502e" kindref="member">mAdaptiveSampling</ref><sp/>&amp;&amp;<sp/>dataCount<sp/>&gt;=<sp/>maxCount)<sp/></highlight><highlight class="comment">//<sp/>use<sp/>adaptive<sp/>sampling<sp/>only<sp/>if<sp/>there<sp/>are<sp/>at<sp/>least<sp/>two<sp/>points<sp/>per<sp/>pixel<sp/>on<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15691"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineData)</highlight></codeline>
<codeline lineno="15693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="15695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>upperEnd<sp/>=<sp/>upper+1;</highlight></codeline>
<codeline lineno="15696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>currentIntervalFirstPoint<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reversedFactor<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()<sp/>!=<sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()==Qt::Vertical)<sp/>?<sp/>-1<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>used<sp/>to<sp/>calculate<sp/>keyEpsilon<sp/>pixel<sp/>into<sp/>the<sp/>correct<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reversedRound<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()<sp/>!=<sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()==Qt::Vertical)<sp/>?<sp/>1<sp/>:<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>used<sp/>to<sp/>switch<sp/>between<sp/>floor<sp/>(normal)<sp/>and<sp/>ceil<sp/>(reversed)<sp/>rounding<sp/>of<sp/>currentIntervalStartKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentIntervalStartKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lower.key())+reversedRound));</highlight></codeline>
<codeline lineno="15702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastIntervalEndKey<sp/>=<sp/>currentIntervalStartKey;</highlight></codeline>
<codeline lineno="15703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyEpsilon<sp/>=<sp/>qAbs(currentIntervalStartKey-keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(currentIntervalStartKey)+1.0*reversedFactor));<sp/></highlight><highlight class="comment">//<sp/>interval<sp/>of<sp/>one<sp/>pixel<sp/>on<sp/>screen<sp/>when<sp/>mapped<sp/>to<sp/>plot<sp/>key<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keyEpsilonVariable<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>;<sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>whether<sp/>keyEpsilon<sp/>needs<sp/>to<sp/>be<sp/>updated<sp/>after<sp/>every<sp/>interval<sp/>(for<sp/>log<sp/>axes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intervalDataCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>iterator<sp/>to<sp/>second<sp/>data<sp/>point<sp/>because<sp/>adaptive<sp/>sampling<sp/>works<sp/>in<sp/>1<sp/>point<sp/>retrospect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>upperEnd)</highlight></codeline>
<codeline lineno="15708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.key()<sp/>&lt;<sp/>currentIntervalStartKey+keyEpsilon)<sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>is<sp/>still<sp/>within<sp/>same<sp/>pixel,<sp/>so<sp/>skip<sp/>it<sp/>and<sp/>expand<sp/>value<sp/>span<sp/>of<sp/>this<sp/>cluster<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().value<sp/>&lt;<sp/>minValue)</highlight></codeline>
<codeline lineno="15712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().value<sp/>&gt;<sp/>maxValue)</highlight></codeline>
<codeline lineno="15714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++intervalDataCount;</highlight></codeline>
<codeline lineno="15716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>new<sp/>pixel<sp/>interval<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intervalDataCount<sp/>&gt;=<sp/>2)<sp/></highlight><highlight class="comment">//<sp/>last<sp/>pixel<sp/>had<sp/>multiple<sp/>data<sp/>points,<sp/>consolidate<sp/>them<sp/>to<sp/>a<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastIntervalEndKey<sp/>&lt;<sp/>currentIntervalStartKey-keyEpsilon)<sp/></highlight><highlight class="comment">//<sp/>last<sp/>point<sp/>is<sp/>further<sp/>away,<sp/>so<sp/>first<sp/>point<sp/>of<sp/>this<sp/>cluster<sp/>must<sp/>be<sp/>at<sp/>a<sp/>real<sp/>data<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalStartKey+keyEpsilon*0.2,<sp/>currentIntervalFirstPoint.value().value));</highlight></codeline>
<codeline lineno="15722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalStartKey+keyEpsilon*0.25,<sp/>minValue));</highlight></codeline>
<codeline lineno="15723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalStartKey+keyEpsilon*0.75,<sp/>maxValue));</highlight></codeline>
<codeline lineno="15724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.key()<sp/>&gt;<sp/>currentIntervalStartKey+keyEpsilon*2)<sp/></highlight><highlight class="comment">//<sp/>new<sp/>pixel<sp/>started<sp/>further<sp/>away<sp/>from<sp/>previous<sp/>cluster,<sp/>so<sp/>make<sp/>sure<sp/>the<sp/>last<sp/>point<sp/>of<sp/>the<sp/>cluster<sp/>is<sp/>at<sp/>a<sp/>real<sp/>data<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalStartKey+keyEpsilon*0.8,<sp/>(it-1).value().value));</highlight></codeline>
<codeline lineno="15726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalFirstPoint.key(),<sp/>currentIntervalFirstPoint.value().value));</highlight></codeline>
<codeline lineno="15728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastIntervalEndKey<sp/>=<sp/>(it-1).value().key;</highlight></codeline>
<codeline lineno="15729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentIntervalFirstPoint<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentIntervalStartKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.key())+reversedRound));</highlight></codeline>
<codeline lineno="15733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyEpsilonVariable)</highlight></codeline>
<codeline lineno="15734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyEpsilon<sp/>=<sp/>qAbs(currentIntervalStartKey-keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(currentIntervalStartKey)+1.0*reversedFactor));</highlight></codeline>
<codeline lineno="15735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intervalDataCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="15738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>last<sp/>interval:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intervalDataCount<sp/>&gt;=<sp/>2)<sp/></highlight><highlight class="comment">//<sp/>last<sp/>pixel<sp/>had<sp/>multiple<sp/>data<sp/>points,<sp/>consolidate<sp/>them<sp/>to<sp/>a<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastIntervalEndKey<sp/>&lt;<sp/>currentIntervalStartKey-keyEpsilon)<sp/></highlight><highlight class="comment">//<sp/>last<sp/>point<sp/>wasn&apos;t<sp/>a<sp/>cluster,<sp/>so<sp/>first<sp/>point<sp/>of<sp/>this<sp/>cluster<sp/>must<sp/>be<sp/>at<sp/>a<sp/>real<sp/>data<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalStartKey+keyEpsilon*0.2,<sp/>currentIntervalFirstPoint.value().value));</highlight></codeline>
<codeline lineno="15744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalStartKey+keyEpsilon*0.25,<sp/>minValue));</highlight></codeline>
<codeline lineno="15745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalStartKey+keyEpsilon*0.75,<sp/>maxValue));</highlight></codeline>
<codeline lineno="15746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_data" kindref="compound">QCPData</ref>(currentIntervalFirstPoint.key(),<sp/>currentIntervalFirstPoint.value().value));</highlight></codeline>
<codeline lineno="15748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scatterData)</highlight></codeline>
<codeline lineno="15751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMaxRange<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>;</highlight></codeline>
<codeline lineno="15753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMinRange<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="15754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="15755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>upperEnd<sp/>=<sp/>upper+1;</highlight></codeline>
<codeline lineno="15756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>minValueIt<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>maxValueIt<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>currentIntervalStart<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reversedFactor<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()<sp/>?<sp/>-1<sp/>:<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>used<sp/>to<sp/>calculate<sp/>keyEpsilon<sp/>pixel<sp/>into<sp/>the<sp/>correct<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reversedRound<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()<sp/>?<sp/>1<sp/>:<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>is<sp/>used<sp/>to<sp/>switch<sp/>between<sp/>floor<sp/>(normal)<sp/>and<sp/>ceil<sp/>(reversed)<sp/>rounding<sp/>of<sp/>currentIntervalStartKey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentIntervalStartKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(lower.key())+reversedRound));</highlight></codeline>
<codeline lineno="15764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyEpsilon<sp/>=<sp/>qAbs(currentIntervalStartKey-keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(currentIntervalStartKey)+1.0*reversedFactor));<sp/></highlight><highlight class="comment">//<sp/>interval<sp/>of<sp/>one<sp/>pixel<sp/>on<sp/>screen<sp/>when<sp/>mapped<sp/>to<sp/>plot<sp/>key<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keyEpsilonVariable<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>;<sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>whether<sp/>keyEpsilon<sp/>needs<sp/>to<sp/>be<sp/>updated<sp/>after<sp/>every<sp/>interval<sp/>(for<sp/>log<sp/>axes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intervalDataCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;<sp/></highlight><highlight class="comment">//<sp/>advance<sp/>iterator<sp/>to<sp/>second<sp/>data<sp/>point<sp/>because<sp/>adaptive<sp/>sampling<sp/>works<sp/>in<sp/>1<sp/>point<sp/>retrospect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>upperEnd)</highlight></codeline>
<codeline lineno="15769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.key()<sp/>&lt;<sp/>currentIntervalStartKey+keyEpsilon)<sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>is<sp/>still<sp/>within<sp/>same<sp/>pixel,<sp/>so<sp/>skip<sp/>it<sp/>and<sp/>expand<sp/>value<sp/>span<sp/>of<sp/>this<sp/>pixel<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().value<sp/>&lt;<sp/>minValue<sp/>&amp;&amp;<sp/>it.value().value<sp/>&gt;<sp/>valueMinRange<sp/>&amp;&amp;<sp/>it.value().value<sp/>&lt;<sp/>valueMaxRange)</highlight></codeline>
<codeline lineno="15773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValueIt<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().value<sp/>&gt;<sp/>maxValue<sp/>&amp;&amp;<sp/>it.value().value<sp/>&gt;<sp/>valueMinRange<sp/>&amp;&amp;<sp/>it.value().value<sp/>&lt;<sp/>valueMaxRange)</highlight></codeline>
<codeline lineno="15777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValueIt<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++intervalDataCount;</highlight></codeline>
<codeline lineno="15782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>new<sp/>pixel<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intervalDataCount<sp/>&gt;=<sp/>2)<sp/></highlight><highlight class="comment">//<sp/>last<sp/>pixel<sp/>had<sp/>multiple<sp/>data<sp/>points,<sp/>consolidate<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>value<sp/>pixel<sp/>span<sp/>and<sp/>add<sp/>as<sp/>many<sp/>points<sp/>in<sp/>interval<sp/>to<sp/>maintain<sp/>certain<sp/>vertical<sp/>data<sp/>density<sp/>(this<sp/>is<sp/>specific<sp/>to<sp/>scatter<sp/>plot):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valuePixelSpan<sp/>=<sp/>qAbs(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(minValue)-valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(maxValue));</highlight></codeline>
<codeline lineno="15788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataModulo<sp/>=<sp/>qMax(1,<sp/>qRound(intervalDataCount/(valuePixelSpan/4.0)));<sp/></highlight><highlight class="comment">//<sp/>approximately<sp/>every<sp/>4<sp/>value<sp/>pixels<sp/>one<sp/>data<sp/>point<sp/>on<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>intervalIt<sp/>=<sp/>currentIntervalStart;</highlight></codeline>
<codeline lineno="15790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(intervalIt<sp/>!=<sp/>it)</highlight></codeline>
<codeline lineno="15792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>%<sp/>dataModulo<sp/>==<sp/>0<sp/>||<sp/>intervalIt<sp/>==<sp/>minValueIt<sp/>||<sp/>intervalIt<sp/>==<sp/>maxValueIt)<sp/>&amp;&amp;<sp/>intervalIt.value().value<sp/>&gt;<sp/>valueMinRange<sp/>&amp;&amp;<sp/>intervalIt.value().value<sp/>&lt;<sp/>valueMaxRange)</highlight></codeline>
<codeline lineno="15794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scatterData-&gt;append(intervalIt.value());</highlight></codeline>
<codeline lineno="15795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="15796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++intervalIt;</highlight></codeline>
<codeline lineno="15797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentIntervalStart.value().value<sp/>&gt;<sp/>valueMinRange<sp/>&amp;&amp;<sp/>currentIntervalStart.value().value<sp/>&lt;<sp/>valueMaxRange)</highlight></codeline>
<codeline lineno="15799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scatterData-&gt;append(currentIntervalStart.value());</highlight></codeline>
<codeline lineno="15800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValue<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="15802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentIntervalStart<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="15803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentIntervalStartKey<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.key())+reversedRound));</highlight></codeline>
<codeline lineno="15804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyEpsilonVariable)</highlight></codeline>
<codeline lineno="15805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyEpsilon<sp/>=<sp/>qAbs(currentIntervalStartKey-keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(currentIntervalStartKey)+1.0*reversedFactor));</highlight></codeline>
<codeline lineno="15806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intervalDataCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="15809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>last<sp/>interval:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intervalDataCount<sp/>&gt;=<sp/>2)<sp/></highlight><highlight class="comment">//<sp/>last<sp/>pixel<sp/>had<sp/>multiple<sp/>data<sp/>points,<sp/>consolidate<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>value<sp/>pixel<sp/>span<sp/>and<sp/>add<sp/>as<sp/>many<sp/>points<sp/>in<sp/>interval<sp/>to<sp/>maintain<sp/>certain<sp/>vertical<sp/>data<sp/>density<sp/>(this<sp/>is<sp/>specific<sp/>to<sp/>scatter<sp/>plot):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valuePixelSpan<sp/>=<sp/>qAbs(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(minValue)-valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(maxValue));</highlight></codeline>
<codeline lineno="15815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataModulo<sp/>=<sp/>qMax(1,<sp/>qRound(intervalDataCount/(valuePixelSpan/4.0)));<sp/></highlight><highlight class="comment">//<sp/>approximately<sp/>every<sp/>4<sp/>value<sp/>pixels<sp/>one<sp/>data<sp/>point<sp/>on<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>intervalIt<sp/>=<sp/>currentIntervalStart;</highlight></codeline>
<codeline lineno="15817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(intervalIt<sp/>!=<sp/>it)</highlight></codeline>
<codeline lineno="15819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c<sp/>%<sp/>dataModulo<sp/>==<sp/>0<sp/>||<sp/>intervalIt<sp/>==<sp/>minValueIt<sp/>||<sp/>intervalIt<sp/>==<sp/>maxValueIt)<sp/>&amp;&amp;<sp/>intervalIt.value().value<sp/>&gt;<sp/>valueMinRange<sp/>&amp;&amp;<sp/>intervalIt.value().value<sp/>&lt;<sp/>valueMaxRange)</highlight></codeline>
<codeline lineno="15821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scatterData-&gt;append(intervalIt.value());</highlight></codeline>
<codeline lineno="15822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="15823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++intervalIt;</highlight></codeline>
<codeline lineno="15824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentIntervalStart.value().value<sp/>&gt;<sp/>valueMinRange<sp/>&amp;&amp;<sp/>currentIntervalStart.value().value<sp/>&lt;<sp/>valueMaxRange)</highlight></codeline>
<codeline lineno="15826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scatterData-&gt;append(currentIntervalStart.value());</highlight></codeline>
<codeline lineno="15827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15828"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>adaptive<sp/>sampling<sp/>algorithm,<sp/>transfer<sp/>points<sp/>one-to-one<sp/>from<sp/>the<sp/>map<sp/>into<sp/>the<sp/>output<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15829"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15830"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;QCPData&gt;<sp/>*dataVector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineData)</highlight></codeline>
<codeline lineno="15832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dataVector<sp/>=<sp/>lineData;</highlight></codeline>
<codeline lineno="15833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scatterData)</highlight></codeline>
<codeline lineno="15834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dataVector<sp/>=<sp/>scatterData;</highlight></codeline>
<codeline lineno="15835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataVector)</highlight></codeline>
<codeline lineno="15836"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="15838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>upperEnd<sp/>=<sp/>upper+1;</highlight></codeline>
<codeline lineno="15839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dataVector-&gt;reserve(dataCount+2);<sp/></highlight><highlight class="comment">//<sp/>+2<sp/>for<sp/>possible<sp/>fill<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>upperEnd)</highlight></codeline>
<codeline lineno="15841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataVector-&gt;append(it.value());</highlight></codeline>
<codeline lineno="15843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="15844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineData<sp/>&amp;&amp;<sp/>scatterData)</highlight></codeline>
<codeline lineno="15847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*scatterData<sp/>=<sp/>*dataVector;</highlight></codeline>
<codeline lineno="15848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15850"><highlight class="normal"></highlight></codeline>
<codeline lineno="15858"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a4df6807066ce877705e999773e7ffbc4" kindref="member">QCPGraph::drawError</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_data" kindref="compound">QCPData</ref><sp/>&amp;data)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15859"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qIsNaN(data.<ref refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" kindref="member">value</ref>))</highlight></codeline>
<codeline lineno="15861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15862"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="15863"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="15864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15865"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/>b;<sp/></highlight><highlight class="comment">//<sp/>positions<sp/>of<sp/>error<sp/>bar<sp/>bounds<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>barWidthHalf<sp/>=<sp/><ref refid="class_q_c_p_graph_1a7b51c8d09510f9d195b5e765ccbcf05b" kindref="member">mErrorBarSize</ref>*0.5;</highlight></codeline>
<codeline lineno="15868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>skipSymbolMargin<sp/>=<sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a1973ee650368f1c5f55507b78473f634" kindref="member">size</ref>();<sp/></highlight><highlight class="comment">//<sp/>pixels<sp/>left<sp/>blank<sp/>per<sp/>side,<sp/>when<sp/>mErrorBarSkipSymbol<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15869"><highlight class="normal"></highlight></codeline>
<codeline lineno="15870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="15871"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>key<sp/>error<sp/>vertically<sp/>and<sp/>value<sp/>error<sp/>horizontally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" kindref="member">etKey</ref><sp/>||<sp/><ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" kindref="member">etBoth</ref>)</highlight></codeline>
<codeline lineno="15874"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref>-data.<ref refid="class_q_c_p_data_1af107d650b8ee5c3b2961ecddcfb1bccb" kindref="member">keyErrorMinus</ref>);</highlight></codeline>
<codeline lineno="15876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref>+data.<ref refid="class_q_c_p_data_1ae468c3808107c2fd23052481156ab5b5" kindref="member">keyErrorPlus</ref>);</highlight></codeline>
<codeline lineno="15877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())</highlight></codeline>
<codeline lineno="15878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(a,b);</highlight></codeline>
<codeline lineno="15879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>spine:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" kindref="member">mErrorBarSkipSymbol</ref>)</highlight></codeline>
<codeline lineno="15881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-y<sp/>&gt;<sp/>skipSymbolMargin)<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>spine<sp/>if<sp/>error<sp/>is<sp/>so<sp/>small<sp/>it&apos;s<sp/>within<sp/>skipSymbolmargin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/>a,<sp/>x,<sp/>y+skipSymbolMargin));</highlight></codeline>
<codeline lineno="15884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y-b<sp/>&gt;<sp/>skipSymbolMargin)</highlight></codeline>
<codeline lineno="15885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/>y-skipSymbolMargin,<sp/>x,<sp/>b));</highlight></codeline>
<codeline lineno="15886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/>a,<sp/>x,<sp/>b));</highlight></codeline>
<codeline lineno="15888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>handles:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-barWidthHalf,<sp/>a,<sp/>x+barWidthHalf,<sp/>a));</highlight></codeline>
<codeline lineno="15890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-barWidthHalf,<sp/>b,<sp/>x+barWidthHalf,<sp/>b));</highlight></codeline>
<codeline lineno="15891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" kindref="member">etValue</ref><sp/>||<sp/><ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" kindref="member">etBoth</ref>)</highlight></codeline>
<codeline lineno="15893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" kindref="member">value</ref>-data.<ref refid="class_q_c_p_data_1a51d8f42bf4d49a1f263531e70cadd6a3" kindref="member">valueErrorMinus</ref>);</highlight></codeline>
<codeline lineno="15895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" kindref="member">value</ref>+data.<ref refid="class_q_c_p_data_1ad26912552d03485ea20d91dcad16aa8f" kindref="member">valueErrorPlus</ref>);</highlight></codeline>
<codeline lineno="15896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())</highlight></codeline>
<codeline lineno="15897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(a,b);</highlight></codeline>
<codeline lineno="15898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>spine:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" kindref="member">mErrorBarSkipSymbol</ref>)</highlight></codeline>
<codeline lineno="15900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x-a<sp/>&gt;<sp/>skipSymbolMargin)<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>spine<sp/>if<sp/>error<sp/>is<sp/>so<sp/>small<sp/>it&apos;s<sp/>within<sp/>skipSymbolmargin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(a,<sp/>y,<sp/>x-skipSymbolMargin,<sp/>y));</highlight></codeline>
<codeline lineno="15903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-x<sp/>&gt;<sp/>skipSymbolMargin)</highlight></codeline>
<codeline lineno="15904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x+skipSymbolMargin,<sp/>y,<sp/>b,<sp/>y));</highlight></codeline>
<codeline lineno="15905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(a,<sp/>y,<sp/>b,<sp/>y));</highlight></codeline>
<codeline lineno="15907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>handles:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(a,<sp/>y-barWidthHalf,<sp/>a,<sp/>y+barWidthHalf));</highlight></codeline>
<codeline lineno="15909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(b,<sp/>y-barWidthHalf,<sp/>b,<sp/>y+barWidthHalf));</highlight></codeline>
<codeline lineno="15910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15911"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mKeyAxis-&gt;orientation()<sp/>is<sp/>Qt::Horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15912"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>value<sp/>error<sp/>vertically<sp/>and<sp/>key<sp/>error<sp/>horizontally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" kindref="member">etKey</ref><sp/>||<sp/><ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" kindref="member">etBoth</ref>)</highlight></codeline>
<codeline lineno="15915"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref>-data.<ref refid="class_q_c_p_data_1af107d650b8ee5c3b2961ecddcfb1bccb" kindref="member">keyErrorMinus</ref>);</highlight></codeline>
<codeline lineno="15917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" kindref="member">key</ref>+data.<ref refid="class_q_c_p_data_1ae468c3808107c2fd23052481156ab5b5" kindref="member">keyErrorPlus</ref>);</highlight></codeline>
<codeline lineno="15918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())</highlight></codeline>
<codeline lineno="15919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(a,b);</highlight></codeline>
<codeline lineno="15920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>spine:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" kindref="member">mErrorBarSkipSymbol</ref>)</highlight></codeline>
<codeline lineno="15922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x-a<sp/>&gt;<sp/>skipSymbolMargin)<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>spine<sp/>if<sp/>error<sp/>is<sp/>so<sp/>small<sp/>it&apos;s<sp/>within<sp/>skipSymbolmargin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(a,<sp/>y,<sp/>x-skipSymbolMargin,<sp/>y));</highlight></codeline>
<codeline lineno="15925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-x<sp/>&gt;<sp/>skipSymbolMargin)</highlight></codeline>
<codeline lineno="15926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x+skipSymbolMargin,<sp/>y,<sp/>b,<sp/>y));</highlight></codeline>
<codeline lineno="15927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(a,<sp/>y,<sp/>b,<sp/>y));</highlight></codeline>
<codeline lineno="15929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>handles:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(a,<sp/>y-barWidthHalf,<sp/>a,<sp/>y+barWidthHalf));</highlight></codeline>
<codeline lineno="15931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(b,<sp/>y-barWidthHalf,<sp/>b,<sp/>y+barWidthHalf));</highlight></codeline>
<codeline lineno="15932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" kindref="member">etValue</ref><sp/>||<sp/><ref refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" kindref="member">mErrorType</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" kindref="member">etBoth</ref>)</highlight></codeline>
<codeline lineno="15934"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" kindref="member">value</ref>-data.<ref refid="class_q_c_p_data_1a51d8f42bf4d49a1f263531e70cadd6a3" kindref="member">valueErrorMinus</ref>);</highlight></codeline>
<codeline lineno="15936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(data.<ref refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" kindref="member">value</ref>+data.<ref refid="class_q_c_p_data_1ad26912552d03485ea20d91dcad16aa8f" kindref="member">valueErrorPlus</ref>);</highlight></codeline>
<codeline lineno="15937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())</highlight></codeline>
<codeline lineno="15938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(a,b);</highlight></codeline>
<codeline lineno="15939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>spine:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" kindref="member">mErrorBarSkipSymbol</ref>)</highlight></codeline>
<codeline lineno="15941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a-y<sp/>&gt;<sp/>skipSymbolMargin)<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>spine<sp/>if<sp/>error<sp/>is<sp/>so<sp/>small<sp/>it&apos;s<sp/>within<sp/>skipSymbolmargin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/>a,<sp/>x,<sp/>y+skipSymbolMargin));</highlight></codeline>
<codeline lineno="15944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y-b<sp/>&gt;<sp/>skipSymbolMargin)</highlight></codeline>
<codeline lineno="15945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/>y-skipSymbolMargin,<sp/>x,<sp/>b));</highlight></codeline>
<codeline lineno="15946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x,<sp/>a,<sp/>x,<sp/>b));</highlight></codeline>
<codeline lineno="15948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>handles:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-barWidthHalf,<sp/>a,<sp/>x+barWidthHalf,<sp/>a));</highlight></codeline>
<codeline lineno="15950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(x-barWidthHalf,<sp/>b,<sp/>x+barWidthHalf,<sp/>b));</highlight></codeline>
<codeline lineno="15951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15954"><highlight class="normal"></highlight></codeline>
<codeline lineno="15969"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a6a317cb14a83dae0841c7041a63d6d9d" kindref="member">QCPGraph::getVisibleDataBounds</ref>(QCPDataMap::const_iterator<sp/>&amp;lower,<sp/>QCPDataMap::const_iterator<sp/>&amp;upper)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="15970"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="15973"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15974"><highlight class="normal"><sp/><sp/><sp/><sp/>lower<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd();</highlight></codeline>
<codeline lineno="15975"><highlight class="normal"><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd();</highlight></codeline>
<codeline lineno="15976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15978"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>data<sp/>range<sp/>as<sp/>QMap<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15980"><highlight class="normal"><sp/><sp/>QCPDataMap::const_iterator<sp/>lbound<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;lowerBound(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().lower);</highlight></codeline>
<codeline lineno="15981"><highlight class="normal"><sp/><sp/>QCPDataMap::const_iterator<sp/>ubound<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;upperBound(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().upper);</highlight></codeline>
<codeline lineno="15982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lowoutlier<sp/>=<sp/>lbound<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();<sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>whether<sp/>there<sp/>exist<sp/>points<sp/>below<sp/>axis<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>highoutlier<sp/>=<sp/>ubound<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd();<sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>whether<sp/>there<sp/>exist<sp/>points<sp/>above<sp/>axis<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15984"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15985"><highlight class="normal"><sp/><sp/>lower<sp/>=<sp/>(lowoutlier<sp/>?<sp/>lbound-1<sp/>:<sp/>lbound);<sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>range<sp/>that<sp/>will<sp/>be<sp/>actually<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15986"><highlight class="normal"><sp/><sp/>upper<sp/>=<sp/>(highoutlier<sp/>?<sp/>ubound<sp/>:<sp/>ubound-1);<sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>range<sp/>that<sp/>will<sp/>be<sp/>actually<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15988"><highlight class="normal"></highlight></codeline>
<codeline lineno="15999"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a13f6a3aa60227e03ab1f7aa8eec6589f" kindref="member">QCPGraph::countDataInBounds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPDataMap::const_iterator<sp/>&amp;lower,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPDataMap::const_iterator<sp/>&amp;upper,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxCount)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16000"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper<sp/>==<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd()<sp/>&amp;&amp;<sp/>lower<sp/>==<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="16002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="16003"><highlight class="normal"><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="16004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="16005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>upper<sp/>&amp;&amp;<sp/>count<sp/>&lt;<sp/>maxCount)</highlight></codeline>
<codeline lineno="16006"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16007"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="16008"><highlight class="normal"><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="16009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="16011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16012"><highlight class="normal"></highlight></codeline>
<codeline lineno="16028"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a5fa7884620d7c54b81dfbd255d97b636" kindref="member">QCPGraph::addFillBasePoints</ref>(QVector&lt;QPointF&gt;<sp/>*lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16029"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="16031"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>points<sp/>that<sp/>close<sp/>the<sp/>polygon<sp/>fill<sp/>at<sp/>the<sp/>key<sp/>axis:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="16034"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16035"><highlight class="normal"><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_graph_1a363d066c179e0f46cc93c12bafb0bfba" kindref="member">upperFillBasePoint</ref>(lineData-&gt;last().y());</highlight></codeline>
<codeline lineno="16036"><highlight class="normal"><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_graph_1a41f982e8ceaefe6a53eb7432f26d64b6" kindref="member">lowerFillBasePoint</ref>(lineData-&gt;first().y());</highlight></codeline>
<codeline lineno="16037"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16038"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16039"><highlight class="normal"><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_graph_1a363d066c179e0f46cc93c12bafb0bfba" kindref="member">upperFillBasePoint</ref>(lineData-&gt;last().x());</highlight></codeline>
<codeline lineno="16040"><highlight class="normal"><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_graph_1a41f982e8ceaefe6a53eb7432f26d64b6" kindref="member">lowerFillBasePoint</ref>(lineData-&gt;first().x());</highlight></codeline>
<codeline lineno="16041"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16043"><highlight class="normal"></highlight></codeline>
<codeline lineno="16050"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1ad31b49a90e91e538fd9caf011c913a68" kindref="member">QCPGraph::removeFillBasePoints</ref>(QVector&lt;QPointF&gt;<sp/>*lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16051"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16052"><highlight class="normal"><sp/><sp/>lineData-&gt;remove(lineData-&gt;size()-2,<sp/>2);</highlight></codeline>
<codeline lineno="16053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16054"><highlight class="normal"></highlight></codeline>
<codeline lineno="16069"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_graph_1a41f982e8ceaefe6a53eb7432f26d64b6" kindref="member">QCPGraph::lowerFillBasePoint</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerKey)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16070"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16071"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="16072"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="16073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();<sp/>}</highlight></codeline>
<codeline lineno="16074"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16075"><highlight class="normal"><sp/><sp/>QPointF<sp/>point;</highlight></codeline>
<codeline lineno="16076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">QCPAxis::stLinear</ref>)</highlight></codeline>
<codeline lineno="16077"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>)</highlight></codeline>
<codeline lineno="16079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(lowerKey);</highlight></codeline>
<codeline lineno="16082"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="16083"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(lowerKey);</highlight></codeline>
<codeline lineno="16086"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)</highlight></codeline>
<codeline lineno="16087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(lowerKey);</highlight></codeline>
<codeline lineno="16089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16090"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>)</highlight></codeline>
<codeline lineno="16091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(lowerKey);</highlight></codeline>
<codeline lineno="16093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16095"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>valueAxis-&gt;mScaleType<sp/>==<sp/>QCPAxis::stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16096"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>logarithmic<sp/>scaling<sp/>we<sp/>can&apos;t<sp/>just<sp/>draw<sp/>to<sp/>value<sp/>zero<sp/>so<sp/>we<sp/>just<sp/>fill<sp/>all<sp/>the<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>axis<sp/>which<sp/>is<sp/>in<sp/>the<sp/>direction<sp/>towards<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="16100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>!valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())<sp/>||</highlight></codeline>
<codeline lineno="16102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>range<sp/>is<sp/>negative,<sp/>zero<sp/>is<sp/>on<sp/>opposite<sp/>side<sp/>of<sp/>key<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a6d0f989fc552aa2b563cf82f8fc81e61" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="16104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="16106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(lowerKey);</highlight></codeline>
<codeline lineno="16107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>||<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>)</highlight></codeline>
<codeline lineno="16108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(lowerKey);</highlight></codeline>
<codeline lineno="16110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>!valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())<sp/>||</highlight></codeline>
<codeline lineno="16111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>range<sp/>is<sp/>negative,<sp/>zero<sp/>is<sp/>on<sp/>opposite<sp/>side<sp/>of<sp/>key<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1ac45aef1eb75cea46b241b6303028a607" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="16113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="16115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point;</highlight></codeline>
<codeline lineno="16118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16119"><highlight class="normal"></highlight></codeline>
<codeline lineno="16134"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_graph_1a363d066c179e0f46cc93c12bafb0bfba" kindref="member">QCPGraph::upperFillBasePoint</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperKey)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16135"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16136"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="16137"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="16138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();<sp/>}</highlight></codeline>
<codeline lineno="16139"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16140"><highlight class="normal"><sp/><sp/>QPointF<sp/>point;</highlight></codeline>
<codeline lineno="16141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a8563e13407bc0616da7f7c84e02de170" kindref="member">scaleType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" kindref="member">QCPAxis::stLinear</ref>)</highlight></codeline>
<codeline lineno="16142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" kindref="member">QCPAxis::atLeft</ref>)</highlight></codeline>
<codeline lineno="16144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(upperKey);</highlight></codeline>
<codeline lineno="16147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" kindref="member">QCPAxis::atRight</ref>)</highlight></codeline>
<codeline lineno="16148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(upperKey);</highlight></codeline>
<codeline lineno="16151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref>)</highlight></codeline>
<codeline lineno="16152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(upperKey);</highlight></codeline>
<codeline lineno="16154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>)</highlight></codeline>
<codeline lineno="16156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(upperKey);</highlight></codeline>
<codeline lineno="16158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(0));</highlight></codeline>
<codeline lineno="16159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16160"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>valueAxis-&gt;mScaleType<sp/>==<sp/>QCPAxis::stLogarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>logarithmic<sp/>scaling<sp/>we<sp/>can&apos;t<sp/>just<sp/>draw<sp/>to<sp/>value<sp/>0<sp/>so<sp/>we<sp/>just<sp/>fill<sp/>all<sp/>the<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>axis<sp/>which<sp/>is<sp/>in<sp/>the<sp/>direction<sp/>towards<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical)</highlight></codeline>
<codeline lineno="16165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>!valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())<sp/>||</highlight></codeline>
<codeline lineno="16167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>range<sp/>is<sp/>negative,<sp/>zero<sp/>is<sp/>on<sp/>opposite<sp/>side<sp/>of<sp/>key<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a6d0f989fc552aa2b563cf82f8fc81e61" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="16169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a55b3ecf72a3a65b053f7651b88db458d" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="16171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(upperKey);</highlight></codeline>
<codeline lineno="16172"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" kindref="member">QCPAxis::atTop</ref><sp/>||<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a593c37bf6aa4990326dc09e24f45db7f" kindref="member">axisType</ref>()<sp/>==<sp/><ref refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" kindref="member">QCPAxis::atBottom</ref>)</highlight></codeline>
<codeline lineno="16173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>point.setX(upperKey);</highlight></codeline>
<codeline lineno="16175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>!valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>())<sp/>||</highlight></codeline>
<codeline lineno="16176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()))<sp/></highlight><highlight class="comment">//<sp/>if<sp/>range<sp/>is<sp/>negative,<sp/>zero<sp/>is<sp/>on<sp/>opposite<sp/>side<sp/>of<sp/>key<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1ac45aef1eb75cea46b241b6303028a607" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="16178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point.setY(keyAxis-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1af2b5982ebe7e6f781b9bf1cc371a60d8" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="16180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point;</highlight></codeline>
<codeline lineno="16183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16184"><highlight class="normal"></highlight></codeline>
<codeline lineno="16194"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPolygonF<sp/><ref refid="class_q_c_p_graph_1a0374b7268e35cab9802a6be2b5d726d7" kindref="member">QCPGraph::getChannelFillPolygon</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>*lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16195"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref>)</highlight></codeline>
<codeline lineno="16197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();</highlight></codeline>
<codeline lineno="16198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16199"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="16200"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="16201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/>}</highlight></codeline>
<codeline lineno="16202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref>.data()-&gt;mKeyAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;channel<sp/>fill<sp/>target<sp/>key<sp/>axis<sp/>invalid&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/>}</highlight></codeline>
<codeline lineno="16203"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref>.data()-&gt;mKeyAxis.data()-&gt;orientation()<sp/>!=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>())</highlight></codeline>
<codeline lineno="16205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>have<sp/>same<sp/>axis<sp/>orientation,<sp/>can&apos;t<sp/>fill<sp/>that<sp/>(Note:<sp/>if<sp/>keyAxis<sp/>fits,<sp/>valueAxis<sp/>will<sp/>fit<sp/>too,<sp/>because<sp/>it&apos;s<sp/>always<sp/>orthogonal<sp/>to<sp/>keyAxis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16206"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineData-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();</highlight></codeline>
<codeline lineno="16208"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>otherData;</highlight></codeline>
<codeline lineno="16209"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" kindref="member">mChannelFillGraph</ref>.data()-&gt;getPlotData(&amp;otherData,<sp/>0);</highlight></codeline>
<codeline lineno="16210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherData.isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();</highlight></codeline>
<codeline lineno="16211"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>thisData;</highlight></codeline>
<codeline lineno="16212"><highlight class="normal"><sp/><sp/>thisData.reserve(lineData-&gt;size()+otherData.size());<sp/></highlight><highlight class="comment">//<sp/>because<sp/>we<sp/>will<sp/>join<sp/>both<sp/>vectors<sp/>at<sp/>end<sp/>of<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData-&gt;size();<sp/>++i)<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>the<sp/>vector&lt;&lt;(vector),<sp/><sp/>it<sp/>squeezes<sp/>internally,<sp/>which<sp/>ruins<sp/>the<sp/>performance<sp/>tuning<sp/>with<sp/>reserve()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16214"><highlight class="normal"><sp/><sp/><sp/><sp/>thisData<sp/>&lt;&lt;<sp/>lineData-&gt;at(i);</highlight></codeline>
<codeline lineno="16215"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>be<sp/>able<sp/>to<sp/>swap<sp/>them,<sp/>depending<sp/>which<sp/>data<sp/>range<sp/>needs<sp/>cropping:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16217"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>*staticData<sp/>=<sp/>&amp;thisData;</highlight></codeline>
<codeline lineno="16218"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>*croppedData<sp/>=<sp/>&amp;otherData;</highlight></codeline>
<codeline lineno="16219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>crop<sp/>both<sp/>vectors<sp/>to<sp/>ranges<sp/>in<sp/>which<sp/>the<sp/>keys<sp/>overlap<sp/>(which<sp/>coord<sp/>is<sp/>key,<sp/>depends<sp/>on<sp/>axisType):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="16222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>is<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>an<sp/>axis<sp/>range<sp/>is<sp/>reversed,<sp/>the<sp/>data<sp/>point<sp/>keys<sp/>will<sp/>be<sp/>descending.<sp/>Reverse<sp/>them,<sp/>since<sp/>following<sp/>algorithm<sp/>assumes<sp/>ascending<sp/>keys:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(staticData-&gt;first().x()<sp/>&gt;<sp/>staticData-&gt;last().x())</highlight></codeline>
<codeline lineno="16226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>staticData-&gt;size();</highlight></codeline>
<codeline lineno="16228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size/2;<sp/>++i)</highlight></codeline>
<codeline lineno="16229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap((*staticData)[i],<sp/>(*staticData)[size-1-i]);</highlight></codeline>
<codeline lineno="16230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;first().x()<sp/>&gt;<sp/>croppedData-&gt;last().x())</highlight></codeline>
<codeline lineno="16232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>croppedData-&gt;size();</highlight></codeline>
<codeline lineno="16234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size/2;<sp/>++i)</highlight></codeline>
<codeline lineno="16235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap((*croppedData)[i],<sp/>(*croppedData)[size-1-i]);</highlight></codeline>
<codeline lineno="16236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crop<sp/>lower<sp/>bound:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(staticData-&gt;first().x()<sp/>&lt;<sp/>croppedData-&gt;first().x())<sp/></highlight><highlight class="comment">//<sp/>other<sp/>one<sp/>must<sp/>be<sp/>cropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(staticData,<sp/>croppedData);</highlight></codeline>
<codeline lineno="16240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowBound<sp/>=<sp/><ref refid="class_q_c_p_graph_1a6f4e9461d5925be9228fc4760249a04f" kindref="member">findIndexBelowX</ref>(croppedData,<sp/>staticData-&gt;first().x());</highlight></codeline>
<codeline lineno="16241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lowBound<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>key<sp/>ranges<sp/>have<sp/>no<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16242"><highlight class="normal"><sp/><sp/><sp/><sp/>croppedData-&gt;remove(0,<sp/>lowBound);</highlight></codeline>
<codeline lineno="16243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>lowest<sp/>point<sp/>of<sp/>cropped<sp/>data<sp/>to<sp/>fit<sp/>exactly<sp/>key<sp/>position<sp/>of<sp/>first<sp/>static<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>via<sp/>linear<sp/>interpolation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;size()<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>need<sp/>at<sp/>least<sp/>two<sp/>points<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope;</highlight></codeline>
<codeline lineno="16247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;at(1).x()-croppedData-&gt;at(0).x()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="16248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>(croppedData-&gt;at(1).y()-croppedData-&gt;at(0).y())/(croppedData-&gt;at(1).x()-croppedData-&gt;at(0).x());</highlight></codeline>
<codeline lineno="16249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16251"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[0].setY(croppedData-&gt;at(0).y()+slope*(staticData-&gt;first().x()-croppedData-&gt;at(0).x()));</highlight></codeline>
<codeline lineno="16252"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[0].setX(staticData-&gt;first().x());</highlight></codeline>
<codeline lineno="16253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crop<sp/>upper<sp/>bound:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(staticData-&gt;last().x()<sp/>&gt;<sp/>croppedData-&gt;last().x())<sp/></highlight><highlight class="comment">//<sp/>other<sp/>one<sp/>must<sp/>be<sp/>cropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(staticData,<sp/>croppedData);</highlight></codeline>
<codeline lineno="16257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highBound<sp/>=<sp/><ref refid="class_q_c_p_graph_1abab2a75b5e63630432bdd1f3b57f07fa" kindref="member">findIndexAboveX</ref>(croppedData,<sp/>staticData-&gt;last().x());</highlight></codeline>
<codeline lineno="16258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(highBound<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>key<sp/>ranges<sp/>have<sp/>no<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16259"><highlight class="normal"><sp/><sp/><sp/><sp/>croppedData-&gt;remove(highBound+1,<sp/>croppedData-&gt;size()-(highBound+1));</highlight></codeline>
<codeline lineno="16260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>highest<sp/>point<sp/>of<sp/>cropped<sp/>data<sp/>to<sp/>fit<sp/>exactly<sp/>key<sp/>position<sp/>of<sp/>last<sp/>static<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>via<sp/>linear<sp/>interpolation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;size()<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>need<sp/>at<sp/>least<sp/>two<sp/>points<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>li<sp/>=<sp/>croppedData-&gt;size()-1;<sp/></highlight><highlight class="comment">//<sp/>last<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;at(li).x()-croppedData-&gt;at(li-1).x()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="16265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>(croppedData-&gt;at(li).y()-croppedData-&gt;at(li-1).y())/(croppedData-&gt;at(li).x()-croppedData-&gt;at(li-1).x());</highlight></codeline>
<codeline lineno="16266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16268"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[li].setY(croppedData-&gt;at(li-1).y()+slope*(staticData-&gt;last().x()-croppedData-&gt;at(li-1).x()));</highlight></codeline>
<codeline lineno="16269"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[li].setX(staticData-&gt;last().x());</highlight></codeline>
<codeline lineno="16270"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mKeyAxis-&gt;orientation()<sp/>==<sp/>Qt::Vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16271"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>is<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>similar<sp/>to<sp/>&quot;x<sp/>is<sp/>key&quot;<sp/>but<sp/>switched<sp/>x,y.<sp/>Further,<sp/>lower/upper<sp/>meaning<sp/>is<sp/>inverted<sp/>compared<sp/>to<sp/>x,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>in<sp/>pixel<sp/>coordinates,<sp/>y<sp/>increases<sp/>from<sp/>top<sp/>to<sp/>bottom,<sp/>not<sp/>bottom<sp/>to<sp/>top<sp/>like<sp/>data<sp/>coordinate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>an<sp/>axis<sp/>range<sp/>is<sp/>reversed,<sp/>the<sp/>data<sp/>point<sp/>keys<sp/>will<sp/>be<sp/>descending.<sp/>Reverse<sp/>them,<sp/>since<sp/>following<sp/>algorithm<sp/>assumes<sp/>ascending<sp/>keys:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(staticData-&gt;first().y()<sp/>&lt;<sp/>staticData-&gt;last().y())</highlight></codeline>
<codeline lineno="16277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>staticData-&gt;size();</highlight></codeline>
<codeline lineno="16279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size/2;<sp/>++i)</highlight></codeline>
<codeline lineno="16280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap((*staticData)[i],<sp/>(*staticData)[size-1-i]);</highlight></codeline>
<codeline lineno="16281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;first().y()<sp/>&lt;<sp/>croppedData-&gt;last().y())</highlight></codeline>
<codeline lineno="16283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>croppedData-&gt;size();</highlight></codeline>
<codeline lineno="16285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size/2;<sp/>++i)</highlight></codeline>
<codeline lineno="16286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap((*croppedData)[i],<sp/>(*croppedData)[size-1-i]);</highlight></codeline>
<codeline lineno="16287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crop<sp/>lower<sp/>bound:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(staticData-&gt;first().y()<sp/>&gt;<sp/>croppedData-&gt;first().y())<sp/></highlight><highlight class="comment">//<sp/>other<sp/>one<sp/>must<sp/>be<sp/>cropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(staticData,<sp/>croppedData);</highlight></codeline>
<codeline lineno="16291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowBound<sp/>=<sp/><ref refid="class_q_c_p_graph_1adf50243f1df203883a2187089734bfcb" kindref="member">findIndexAboveY</ref>(croppedData,<sp/>staticData-&gt;first().y());</highlight></codeline>
<codeline lineno="16292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lowBound<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>key<sp/>ranges<sp/>have<sp/>no<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16293"><highlight class="normal"><sp/><sp/><sp/><sp/>croppedData-&gt;remove(0,<sp/>lowBound);</highlight></codeline>
<codeline lineno="16294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>lowest<sp/>point<sp/>of<sp/>cropped<sp/>data<sp/>to<sp/>fit<sp/>exactly<sp/>key<sp/>position<sp/>of<sp/>first<sp/>static<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>via<sp/>linear<sp/>interpolation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;size()<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>need<sp/>at<sp/>least<sp/>two<sp/>points<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope;</highlight></codeline>
<codeline lineno="16298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;at(1).y()-croppedData-&gt;at(0).y()<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>division<sp/>by<sp/>zero<sp/>in<sp/>step<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>(croppedData-&gt;at(1).x()-croppedData-&gt;at(0).x())/(croppedData-&gt;at(1).y()-croppedData-&gt;at(0).y());</highlight></codeline>
<codeline lineno="16300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16302"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[0].setX(croppedData-&gt;at(0).x()+slope*(staticData-&gt;first().y()-croppedData-&gt;at(0).y()));</highlight></codeline>
<codeline lineno="16303"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[0].setY(staticData-&gt;first().y());</highlight></codeline>
<codeline lineno="16304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crop<sp/>upper<sp/>bound:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(staticData-&gt;last().y()<sp/>&lt;<sp/>croppedData-&gt;last().y())<sp/></highlight><highlight class="comment">//<sp/>other<sp/>one<sp/>must<sp/>be<sp/>cropped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(staticData,<sp/>croppedData);</highlight></codeline>
<codeline lineno="16308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highBound<sp/>=<sp/><ref refid="class_q_c_p_graph_1a6c4d556de3d1e02f548401001f72c6ff" kindref="member">findIndexBelowY</ref>(croppedData,<sp/>staticData-&gt;last().y());</highlight></codeline>
<codeline lineno="16309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(highBound<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>key<sp/>ranges<sp/>have<sp/>no<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16310"><highlight class="normal"><sp/><sp/><sp/><sp/>croppedData-&gt;remove(highBound+1,<sp/>croppedData-&gt;size()-(highBound+1));</highlight></codeline>
<codeline lineno="16311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>highest<sp/>point<sp/>of<sp/>cropped<sp/>data<sp/>to<sp/>fit<sp/>exactly<sp/>key<sp/>position<sp/>of<sp/>last<sp/>static<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>via<sp/>linear<sp/>interpolation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;size()<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/></highlight><highlight class="comment">//<sp/>need<sp/>at<sp/>least<sp/>two<sp/>points<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>li<sp/>=<sp/>croppedData-&gt;size()-1;<sp/></highlight><highlight class="comment">//<sp/>last<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(croppedData-&gt;at(li).y()-croppedData-&gt;at(li-1).y()<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>division<sp/>by<sp/>zero<sp/>in<sp/>step<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>(croppedData-&gt;at(li).x()-croppedData-&gt;at(li-1).x())/(croppedData-&gt;at(li).y()-croppedData-&gt;at(li-1).y());</highlight></codeline>
<codeline lineno="16317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16319"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[li].setX(croppedData-&gt;at(li-1).x()+slope*(staticData-&gt;last().y()-croppedData-&gt;at(li-1).y()));</highlight></codeline>
<codeline lineno="16320"><highlight class="normal"><sp/><sp/><sp/><sp/>(*croppedData)[li].setY(staticData-&gt;last().y());</highlight></codeline>
<codeline lineno="16321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16322"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>joined:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=otherData.size()-1;<sp/>i&gt;=0;<sp/>--i)<sp/></highlight><highlight class="comment">//<sp/>insert<sp/>reversed,<sp/>otherwise<sp/>the<sp/>polygon<sp/>will<sp/>be<sp/>twisted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16325"><highlight class="normal"><sp/><sp/><sp/><sp/>thisData<sp/>&lt;&lt;<sp/>otherData.at(i);</highlight></codeline>
<codeline lineno="16326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF(thisData);</highlight></codeline>
<codeline lineno="16327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16328"><highlight class="normal"></highlight></codeline>
<codeline lineno="16336"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1abab2a75b5e63630432bdd1f3b57f07fa" kindref="member">QCPGraph::findIndexAboveX</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16337"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=data-&gt;size()-1;<sp/>i&gt;=0;<sp/>--i)</highlight></codeline>
<codeline lineno="16339"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;at(i).x()<sp/>&lt;<sp/>x)</highlight></codeline>
<codeline lineno="16341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&lt;data-&gt;size()-1)</highlight></codeline>
<codeline lineno="16343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i+1;</highlight></codeline>
<codeline lineno="16344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data-&gt;size()-1;</highlight></codeline>
<codeline lineno="16346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="16349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16350"><highlight class="normal"></highlight></codeline>
<codeline lineno="16358"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a6f4e9461d5925be9228fc4760249a04f" kindref="member">QCPGraph::findIndexBelowX</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16359"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;data-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="16361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;at(i).x()<sp/>&gt;<sp/>x)</highlight></codeline>
<codeline lineno="16363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;0)</highlight></codeline>
<codeline lineno="16365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-1;</highlight></codeline>
<codeline lineno="16366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="16368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="16371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16372"><highlight class="normal"></highlight></codeline>
<codeline lineno="16380"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1adf50243f1df203883a2187089734bfcb" kindref="member">QCPGraph::findIndexAboveY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16381"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;data-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="16383"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;at(i).y()<sp/>&lt;<sp/>y)</highlight></codeline>
<codeline lineno="16385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;0)</highlight></codeline>
<codeline lineno="16387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-1;</highlight></codeline>
<codeline lineno="16388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="16390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="16393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16394"><highlight class="normal"></highlight></codeline>
<codeline lineno="16405"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1af93762a12a481a7edb4b3dd9e330dff1" kindref="member">QCPGraph::pointDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPoint)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16406"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="16408"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16409"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;requested<sp/>point<sp/>distance<sp/>on<sp/>graph&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ac29ffef424e2488675930de18cde612a" kindref="member">mName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;without<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>500;</highlight></codeline>
<codeline lineno="16411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;size()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="16413"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16414"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>dataPoint<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin().key(),<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin().value().value);</highlight></codeline>
<codeline lineno="16415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector2D(dataPoint-pixelPoint).length();</highlight></codeline>
<codeline lineno="16416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1aa3861281108d0adbeb291c820ea3925c" kindref="member">isNone</ref>())</highlight></codeline>
<codeline lineno="16419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>500;</highlight></codeline>
<codeline lineno="16420"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>minimum<sp/>distances<sp/>to<sp/>graph<sp/>representation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref>)</highlight></codeline>
<codeline lineno="16423"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>line<sp/>displayed,<sp/>only<sp/>calculate<sp/>distance<sp/>to<sp/>scatter<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16425"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;QCPData&gt;<sp/>*scatterData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QVector&lt;QCPData&gt;;</highlight></codeline>
<codeline lineno="16426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a45c4214b59ea11aa6d8d112bdc3b0e03" kindref="member">getScatterPlotData</ref>(scatterData);</highlight></codeline>
<codeline lineno="16427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="16428"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>ptA;</highlight></codeline>
<codeline lineno="16429"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>ptB<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(scatterData-&gt;at(0).key,<sp/>scatterData-&gt;at(0).value);<sp/></highlight><highlight class="comment">//<sp/>getScatterPlotData<sp/>returns<sp/>in<sp/>plot<sp/>coordinates,<sp/>so<sp/>transform<sp/>to<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;scatterData-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="16431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptA<sp/>=<sp/>ptB;</highlight></codeline>
<codeline lineno="16433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptB<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(scatterData-&gt;at(i).key,<sp/>scatterData-&gt;at(i).value);</highlight></codeline>
<codeline lineno="16434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(ptA,<sp/>ptB,<sp/>pixelPoint);</highlight></codeline>
<codeline lineno="16435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="16436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="16437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scatterData;</highlight></codeline>
<codeline lineno="16439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="16440"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>displayed<sp/>calculate<sp/>distance<sp/>to<sp/>line<sp/>segments:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16443"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;QPointF&gt;<sp/>*lineData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;;</highlight></codeline>
<codeline lineno="16444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_graph_1a466c661e015188971c862031af946693" kindref="member">getPlotData</ref>(lineData,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>unlike<sp/>with<sp/>getScatterPlotData<sp/>we<sp/>get<sp/>pixel<sp/>coordinates<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="16446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" kindref="member">mLineStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" kindref="member">lsImpulse</ref>)</highlight></codeline>
<codeline lineno="16447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>impulse<sp/>plot<sp/>differs<sp/>from<sp/>other<sp/>line<sp/>styles<sp/>in<sp/>that<sp/>the<sp/>lineData<sp/>points<sp/>are<sp/>only<sp/>pairwise<sp/>connected:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData-&gt;size()-1;<sp/>i+=2)<sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(lineData-&gt;at(i),<sp/>lineData-&gt;at(i+1),<sp/>pixelPoint);</highlight></codeline>
<codeline lineno="16452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="16453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="16454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16455"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>other<sp/>line<sp/>plots<sp/>(line<sp/>and<sp/>step)<sp/>connect<sp/>points<sp/>directly:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData-&gt;size()-1;<sp/>++i)</highlight></codeline>
<codeline lineno="16459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(lineData-&gt;at(i),<sp/>lineData-&gt;at(i+1),<sp/>pixelPoint);</highlight></codeline>
<codeline lineno="16461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="16462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="16463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lineData;</highlight></codeline>
<codeline lineno="16466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="16467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16469"><highlight class="normal"></highlight></codeline>
<codeline lineno="16478"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a6c4d556de3d1e02f548401001f72c6ff" kindref="member">QCPGraph::findIndexBelowY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>*data,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16479"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=data-&gt;size()-1;<sp/>i&gt;=0;<sp/>--i)</highlight></codeline>
<codeline lineno="16481"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;at(i).y()<sp/>&gt;<sp/>y)</highlight></codeline>
<codeline lineno="16483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&lt;data-&gt;size()-1)</highlight></codeline>
<codeline lineno="16485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i+1;</highlight></codeline>
<codeline lineno="16486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data-&gt;size()-1;</highlight></codeline>
<codeline lineno="16488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="16491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16492"><highlight class="normal"></highlight></codeline>
<codeline lineno="16493"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16494"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_graph_1afc246ce6201ff564ac440efaec52ab11" kindref="member">QCPGraph::getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16495"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>call<sp/>the<sp/>specialized<sp/>version<sp/>which<sp/>takes<sp/>an<sp/>additional<sp/>argument<sp/>whether<sp/>error<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>also<sp/>be<sp/>taken<sp/>into<sp/>consideration<sp/>for<sp/>range<sp/>calculation.<sp/>We<sp/>set<sp/>this<sp/>to<sp/>true<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1afc246ce6201ff564ac440efaec52ab11" kindref="member">getKeyRange</ref>(foundRange,<sp/>inSignDomain,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16500"><highlight class="normal"></highlight></codeline>
<codeline lineno="16501"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16502"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_graph_1a856e90b8ab6b31c344b14a863ab9e5d2" kindref="member">QCPGraph::getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16503"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>call<sp/>the<sp/>specialized<sp/>version<sp/>which<sp/>takes<sp/>an<sp/>additional<sp/>argument<sp/>whether<sp/>error<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>also<sp/>be<sp/>taken<sp/>into<sp/>consideration<sp/>for<sp/>range<sp/>calculation.<sp/>We<sp/>set<sp/>this<sp/>to<sp/>true<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_graph_1a856e90b8ab6b31c344b14a863ab9e5d2" kindref="member">getValueRange</ref>(foundRange,<sp/>inSignDomain,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16508"><highlight class="normal"></highlight></codeline>
<codeline lineno="16515"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_graph_1afc246ce6201ff564ac440efaec52ab11" kindref="member">QCPGraph::getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeErrors)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16516"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16517"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="16518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16520"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current,<sp/>currentErrorMinus,<sp/>currentErrorPlus;</highlight></codeline>
<codeline lineno="16522"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>be<sp/>anywhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16524"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16525"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="16526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="16527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().key;</highlight></codeline>
<codeline lineno="16529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorMinus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().keyErrorMinus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorPlus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().keyErrorPlus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-currentErrorMinus<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="16532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current-currentErrorMinus;</highlight></codeline>
<codeline lineno="16534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current+currentErrorPlus<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="16537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current+currentErrorPlus;</highlight></codeline>
<codeline lineno="16539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="16542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16543"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>negative<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16544"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16545"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="16546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="16547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().key;</highlight></codeline>
<codeline lineno="16549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorMinus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().keyErrorMinus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorPlus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().keyErrorPlus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current-currentErrorMinus<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current-currentErrorMinus<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current-currentErrorMinus;</highlight></codeline>
<codeline lineno="16554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current+currentErrorPlus<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current+currentErrorPlus<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current+currentErrorPlus;</highlight></codeline>
<codeline lineno="16559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(includeErrors)<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>point<sp/>is<sp/>in<sp/>valid<sp/>sign<sp/>domain<sp/>but<sp/>errobars<sp/>stretch<sp/>beyond<sp/>it,<sp/>we<sp/>still<sp/>want<sp/>to<sp/>geht<sp/>that<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="16575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16576"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>positive<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16577"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16578"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="16579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="16580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().key;</highlight></codeline>
<codeline lineno="16582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorMinus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().keyErrorMinus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorPlus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().keyErrorPlus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current-currentErrorMinus<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current-currentErrorMinus<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current-currentErrorMinus;</highlight></codeline>
<codeline lineno="16587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current+currentErrorPlus<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current+currentErrorPlus<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current+currentErrorPlus;</highlight></codeline>
<codeline lineno="16592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(includeErrors)<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>point<sp/>is<sp/>in<sp/>valid<sp/>sign<sp/>domain<sp/>but<sp/>errobars<sp/>stretch<sp/>beyond<sp/>it,<sp/>we<sp/>still<sp/>want<sp/>to<sp/>get<sp/>that<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="16608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16610"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16611"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="16612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="16613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16614"><highlight class="normal"></highlight></codeline>
<codeline lineno="16621"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_graph_1a856e90b8ab6b31c344b14a863ab9e5d2" kindref="member">QCPGraph::getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeErrors)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="16622"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16623"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="16624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current,<sp/>currentErrorMinus,<sp/>currentErrorPlus;</highlight></codeline>
<codeline lineno="16628"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>be<sp/>anywhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16630"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16631"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="16632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="16633"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="16635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorMinus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().valueErrorMinus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorPlus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().valueErrorPlus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-currentErrorMinus<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="16638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current-currentErrorMinus;</highlight></codeline>
<codeline lineno="16640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current+currentErrorPlus<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="16643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current+currentErrorPlus;</highlight></codeline>
<codeline lineno="16645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="16648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16649"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>negative<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16650"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16651"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="16652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="16653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="16655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorMinus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().valueErrorMinus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorPlus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().valueErrorPlus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current-currentErrorMinus<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current-currentErrorMinus<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current-currentErrorMinus;</highlight></codeline>
<codeline lineno="16660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current+currentErrorPlus<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current+currentErrorPlus<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current+currentErrorPlus;</highlight></codeline>
<codeline lineno="16665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(includeErrors)<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>point<sp/>is<sp/>in<sp/>valid<sp/>sign<sp/>domain<sp/>but<sp/>errobars<sp/>stretch<sp/>beyond<sp/>it,<sp/>we<sp/>still<sp/>want<sp/>to<sp/>get<sp/>that<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="16681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16682"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref>)<sp/></highlight><highlight class="comment">//<sp/>range<sp/>may<sp/>only<sp/>be<sp/>in<sp/>the<sp/>positive<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16683"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16684"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="16685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="16686"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="16688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorMinus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().valueErrorMinus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentErrorPlus<sp/>=<sp/>(includeErrors<sp/>?<sp/>it.value().valueErrorPlus<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="16690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current-currentErrorMinus<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current-currentErrorMinus<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current-currentErrorMinus;</highlight></codeline>
<codeline lineno="16693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current+currentErrorPlus<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current+currentErrorPlus<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current+currentErrorPlus;</highlight></codeline>
<codeline lineno="16698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(includeErrors)<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>point<sp/>is<sp/>in<sp/>valid<sp/>sign<sp/>domain<sp/>but<sp/>errobars<sp/>stretch<sp/>beyond<sp/>it,<sp/>we<sp/>still<sp/>want<sp/>to<sp/>geht<sp/>that<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)<sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)<sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="16708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="16710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="16714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16716"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16717"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="16718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="16719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16720"><highlight class="normal"></highlight></codeline>
<codeline lineno="16721"><highlight class="normal"></highlight></codeline>
<codeline lineno="16725"></codeline>
<codeline lineno="16742"><highlight class="normal"><ref refid="class_q_c_p_curve_data_1a48252779b5198a509d99c69ae223fbf8" kindref="member">QCPCurveData::QCPCurveData</ref>()<sp/>:</highlight></codeline>
<codeline lineno="16743"><highlight class="normal"><sp/><sp/>t(0),</highlight></codeline>
<codeline lineno="16744"><highlight class="normal"><sp/><sp/>key(0),</highlight></codeline>
<codeline lineno="16745"><highlight class="normal"><sp/><sp/>value(0)</highlight></codeline>
<codeline lineno="16746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16748"><highlight class="normal"></highlight></codeline>
<codeline lineno="16752"><highlight class="normal"><ref refid="class_q_c_p_curve_data_1a48252779b5198a509d99c69ae223fbf8" kindref="member">QCPCurveData::QCPCurveData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>:</highlight></codeline>
<codeline lineno="16753"><highlight class="normal"><sp/><sp/>t(t),</highlight></codeline>
<codeline lineno="16754"><highlight class="normal"><sp/><sp/>key(key),</highlight></codeline>
<codeline lineno="16755"><highlight class="normal"><sp/><sp/>value(value)</highlight></codeline>
<codeline lineno="16756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16758"><highlight class="normal"></highlight></codeline>
<codeline lineno="16759"><highlight class="normal"></highlight></codeline>
<codeline lineno="16763"></codeline>
<codeline lineno="16805"><highlight class="normal"><ref refid="class_q_c_p_curve_1a36de58e2652b3fa47bdf9187d421d3ce" kindref="member">QCPCurve::QCPCurve</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="16806"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>(keyAxis,<sp/>valueAxis)</highlight></codeline>
<codeline lineno="16807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16808"><highlight class="normal"><sp/><sp/>mData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref>;</highlight></codeline>
<codeline lineno="16809"><highlight class="normal"><sp/><sp/>mPen.setColor(Qt::blue);</highlight></codeline>
<codeline lineno="16810"><highlight class="normal"><sp/><sp/>mPen.setStyle(Qt::SolidLine);</highlight></codeline>
<codeline lineno="16811"><highlight class="normal"><sp/><sp/>mBrush.setColor(Qt::blue);</highlight></codeline>
<codeline lineno="16812"><highlight class="normal"><sp/><sp/>mBrush.setStyle(Qt::NoBrush);</highlight></codeline>
<codeline lineno="16813"><highlight class="normal"><sp/><sp/>mSelectedPen<sp/>=<sp/>mPen;</highlight></codeline>
<codeline lineno="16814"><highlight class="normal"><sp/><sp/>mSelectedPen.setWidthF(2.5);</highlight></codeline>
<codeline lineno="16815"><highlight class="normal"><sp/><sp/>mSelectedPen.setColor(QColor(80,<sp/>80,<sp/>255));<sp/></highlight><highlight class="comment">//<sp/>lighter<sp/>than<sp/>Qt::blue<sp/>of<sp/>mPen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16816"><highlight class="normal"><sp/><sp/>mSelectedBrush<sp/>=<sp/>mBrush;</highlight></codeline>
<codeline lineno="16817"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="16818"><highlight class="normal"><sp/><sp/>setScatterStyle(<ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>());</highlight></codeline>
<codeline lineno="16819"><highlight class="normal"><sp/><sp/>setLineStyle(lsLine);</highlight></codeline>
<codeline lineno="16820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16821"><highlight class="normal"></highlight></codeline>
<codeline lineno="16822"><highlight class="normal"><ref refid="class_q_c_p_curve_1a99ee5136754884a220cc0bcacfe419a3" kindref="member">QCPCurve::~QCPCurve</ref>()</highlight></codeline>
<codeline lineno="16823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="16825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16826"><highlight class="normal"></highlight></codeline>
<codeline lineno="16834"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" kindref="member">QCPCurve::setData</ref>(<ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)</highlight></codeline>
<codeline lineno="16835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref><sp/>==<sp/>data)</highlight></codeline>
<codeline lineno="16837"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16838"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>data<sp/>pointer<sp/>is<sp/>already<sp/>in<sp/>(and<sp/>owned<sp/>by)<sp/>this<sp/>plottable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_curve_1a9ac194d35d4f334923aac9df1bf599ca" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="16839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)</highlight></codeline>
<codeline lineno="16842"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16843"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref><sp/>=<sp/>*<ref refid="class_q_c_p_curve_1a9ac194d35d4f334923aac9df1bf599ca" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="16844"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16845"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="16847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref><sp/>=<sp/><ref refid="class_q_c_p_curve_1a9ac194d35d4f334923aac9df1bf599ca" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="16848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16850"><highlight class="normal"></highlight></codeline>
<codeline lineno="16857"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" kindref="member">QCPCurve::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value)</highlight></codeline>
<codeline lineno="16858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16859"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="16860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>t.size();</highlight></codeline>
<codeline lineno="16861"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>key.size());</highlight></codeline>
<codeline lineno="16862"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="16863"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="16864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="16865"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16866"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref><sp/>=<sp/>t[i];</highlight></codeline>
<codeline lineno="16867"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.key<sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="16868"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="16869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;insertMulti(newData.t,<sp/>newData);</highlight></codeline>
<codeline lineno="16870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16872"><highlight class="normal"></highlight></codeline>
<codeline lineno="16878"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" kindref="member">QCPCurve::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value)</highlight></codeline>
<codeline lineno="16879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16880"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="16881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="16882"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="16883"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="16884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="16885"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16886"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref><sp/>=<sp/>i;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>t<sp/>vector<sp/>given,<sp/>so<sp/>we<sp/>assign<sp/>t<sp/>the<sp/>index<sp/>of<sp/>the<sp/>key/value<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16887"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.key<sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="16888"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="16889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;insertMulti(newData.t,<sp/>newData);</highlight></codeline>
<codeline lineno="16890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16892"><highlight class="normal"></highlight></codeline>
<codeline lineno="16900"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" kindref="member">QCPCurve::setScatterStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>&amp;style)</highlight></codeline>
<codeline lineno="16901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16902"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref><sp/>=<sp/>style;</highlight></codeline>
<codeline lineno="16903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16904"><highlight class="normal"></highlight></codeline>
<codeline lineno="16912"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" kindref="member">QCPCurve::setLineStyle</ref>(<ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">QCPCurve::LineStyle</ref><sp/>style)</highlight></codeline>
<codeline lineno="16913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16914"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" kindref="member">mLineStyle</ref><sp/>=<sp/>style;</highlight></codeline>
<codeline lineno="16915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16916"><highlight class="normal"></highlight></codeline>
<codeline lineno="16921"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">QCPCurve::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref><sp/>&amp;dataMap)</highlight></codeline>
<codeline lineno="16922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16923"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;unite(dataMap);</highlight></codeline>
<codeline lineno="16924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16925"><highlight class="normal"></highlight></codeline>
<codeline lineno="16930"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">QCPCurve::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="16931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16932"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;insertMulti(data.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="16933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16934"><highlight class="normal"></highlight></codeline>
<codeline lineno="16939"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">QCPCurve::addData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="16940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16941"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="16942"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="16943"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1a8a4ec5f2b9a396149fd842e309701bd4" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="16944"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1a72b39b8e1dbf7b45382ebd48419b6828" kindref="member">value</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="16945"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;insertMulti(newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref>,<sp/>newData);</highlight></codeline>
<codeline lineno="16946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16947"><highlight class="normal"></highlight></codeline>
<codeline lineno="16956"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">QCPCurve::addData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="16957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16958"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="16959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="16960"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constEnd()-1).key()+1;</highlight></codeline>
<codeline lineno="16961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16962"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16963"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1a8a4ec5f2b9a396149fd842e309701bd4" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="16964"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1a72b39b8e1dbf7b45382ebd48419b6828" kindref="member">value</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="16965"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;insertMulti(newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref>,<sp/>newData);</highlight></codeline>
<codeline lineno="16966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16967"><highlight class="normal"></highlight></codeline>
<codeline lineno="16972"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">QCPCurve::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;ts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values)</highlight></codeline>
<codeline lineno="16973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>ts.size();</highlight></codeline>
<codeline lineno="16975"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>keys.size());</highlight></codeline>
<codeline lineno="16976"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>values.size());</highlight></codeline>
<codeline lineno="16977"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="16978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="16979"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16980"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" kindref="member">t</ref><sp/>=<sp/>ts[i];</highlight></codeline>
<codeline lineno="16981"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.key<sp/>=<sp/>keys[i];</highlight></codeline>
<codeline lineno="16982"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>values[i];</highlight></codeline>
<codeline lineno="16983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;insertMulti(newData.t,<sp/>newData);</highlight></codeline>
<codeline lineno="16984"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16986"><highlight class="normal"></highlight></codeline>
<codeline lineno="16991"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1af6f4284fbc2f34e676f24dce03c34fe5" kindref="member">QCPCurve::removeDataBefore</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="16992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16993"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="16994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;end()<sp/>&amp;&amp;<sp/>it.key()<sp/>&lt;<sp/>t)</highlight></codeline>
<codeline lineno="16995"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="16996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16997"><highlight class="normal"></highlight></codeline>
<codeline lineno="17002"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a0365cb947c4e6d405ee22e00191d5f52" kindref="member">QCPCurve::removeDataAfter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="17003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17005"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;upperBound(t);</highlight></codeline>
<codeline lineno="17006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;end())</highlight></codeline>
<codeline lineno="17007"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="17008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17009"><highlight class="normal"></highlight></codeline>
<codeline lineno="17017"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">QCPCurve::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tot)</highlight></codeline>
<codeline lineno="17018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fromt<sp/>&gt;=<sp/>tot<sp/>||<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17020"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;upperBound(fromt);</highlight></codeline>
<codeline lineno="17021"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;upperBound(tot);</highlight></codeline>
<codeline lineno="17022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="17023"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="17024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17025"><highlight class="normal"></highlight></codeline>
<codeline lineno="17035"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">QCPCurve::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="17036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17037"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;remove(t);</highlight></codeline>
<codeline lineno="17038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17039"><highlight class="normal"></highlight></codeline>
<codeline lineno="17044"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" kindref="member">QCPCurve::clearData</ref>()</highlight></codeline>
<codeline lineno="17045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17046"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="17047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17048"><highlight class="normal"></highlight></codeline>
<codeline lineno="17049"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17050"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a5af9949e725704811bbc81ecd5970b8e" kindref="member">QCPCurve::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17051"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17052"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="17053"><highlight class="normal"><sp/><sp/>if<sp/>((onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)<sp/>||<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="17054"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="17055"><highlight class="normal"><sp/><sp/>if<sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="17056"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;rect().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="17058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1acd7a68c6f268ce1ab845eaf69fc2c6a6" kindref="member">pointDistance</ref>(pos);</highlight></codeline>
<codeline lineno="17059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="17061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17062"><highlight class="normal"></highlight></codeline>
<codeline lineno="17063"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17064"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" kindref="member">QCPCurve::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="17065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17067"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17068"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>line<sp/>vector:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17069"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>*lineData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;;</highlight></codeline>
<codeline lineno="17070"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>with<sp/>curve<sp/>data:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17072"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1afa895f8ba9ae34fea6ecea295fd7b1e5" kindref="member">getCurveData</ref>(lineData);</highlight></codeline>
<codeline lineno="17073"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17074"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>data<sp/>validity<sp/>if<sp/>flag<sp/>set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17075"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCUSTOMPLOT_CHECK_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17076"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="17077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constEnd();<sp/>++it)</highlight></codeline>
<codeline lineno="17078"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(it.value().t)<sp/>||</highlight></codeline>
<codeline lineno="17080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(it.value().key,<sp/>it.value().value))</highlight></codeline>
<codeline lineno="17081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>point<sp/>at&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it.key()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Plottable<sp/>name:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="17082"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17083"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17084"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>curve<sp/>fill:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>().style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>().color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="17087"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ac08a480155895e674dbfe5a5670e0ff3" kindref="member">applyFillAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="17089"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(Qt::NoPen);</highlight></codeline>
<codeline lineno="17090"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="17091"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPolygon(QPolygonF(*lineData));</highlight></codeline>
<codeline lineno="17092"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17093"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17094"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>curve<sp/>line:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" kindref="member">mLineStyle</ref><sp/>!=<sp/><ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" kindref="member">lsNone</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().style()<sp/>!=<sp/>Qt::NoPen<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="17096"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="17098"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="17099"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="17100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>drawing<sp/>solid<sp/>line<sp/>and<sp/>not<sp/>in<sp/>PDF,<sp/>use<sp/>much<sp/>faster<sp/>line<sp/>drawing<sp/>instead<sp/>of<sp/>polyline:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a130b55e205697a5288081e9fc11e443e" kindref="member">plottingHints</ref>().testFlag(<ref refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" kindref="member">QCP::phFastPolylines</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="17102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;pen().style()<sp/>==<sp/>Qt::SolidLine<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="17103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!painter-&gt;<ref refid="class_q_c_p_painter_1a99b89eaf5363faaa1e1e6162856f436c" kindref="member">modes</ref>().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" kindref="member">QCPPainter::pmVectorized</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="17104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!painter-&gt;<ref refid="class_q_c_p_painter_1a99b89eaf5363faaa1e1e6162856f436c" kindref="member">modes</ref>().testFlag(<ref refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" kindref="member">QCPPainter::pmNoCaching</ref>))</highlight></codeline>
<codeline lineno="17105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="17107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDataSize<sp/>=<sp/>lineData-&gt;size();</highlight></codeline>
<codeline lineno="17108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>lineDataSize)</highlight></codeline>
<codeline lineno="17109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(lineData-&gt;at(i).y())<sp/>&amp;&amp;<sp/>!qIsNaN(lineData-&gt;at(i).x()))<sp/></highlight><highlight class="comment">//<sp/>NaNs<sp/>create<sp/>a<sp/>gap<sp/>in<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(lineData-&gt;at(i-1),<sp/>lineData-&gt;at(i));</highlight></codeline>
<codeline lineno="17112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="17114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="17115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineDataSize<sp/>=<sp/>lineData-&gt;size();</highlight></codeline>
<codeline lineno="17121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>lineDataSize)</highlight></codeline>
<codeline lineno="17122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qIsNaN(lineData-&gt;at(i).y())<sp/>||<sp/>qIsNaN(lineData-&gt;at(i).x()))<sp/></highlight><highlight class="comment">//<sp/>NaNs<sp/>create<sp/>a<sp/>gap<sp/>in<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(lineData-&gt;constData()+segmentStart,<sp/>i-segmentStart);<sp/></highlight><highlight class="comment">//<sp/>i,<sp/>because<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>include<sp/>the<sp/>current<sp/>NaN<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentStart<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="17127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="17129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>last<sp/>segment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(lineData-&gt;constData()+segmentStart,<sp/>lineDataSize-segmentStart);<sp/></highlight><highlight class="comment">//<sp/>lineDataSize,<sp/>because<sp/>we<sp/>do<sp/>want<sp/>to<sp/>include<sp/>the<sp/>last<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17134"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>scatters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1aa3861281108d0adbeb291c820ea3925c" kindref="member">isNone</ref>())</highlight></codeline>
<codeline lineno="17137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a45593f30b81beec4b6130b6b53306087" kindref="member">drawScatterPlot</ref>(painter,<sp/>lineData);</highlight></codeline>
<codeline lineno="17138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>allocated<sp/>line<sp/>data:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lineData;</highlight></codeline>
<codeline lineno="17141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17142"><highlight class="normal"></highlight></codeline>
<codeline lineno="17143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1aaee24451e0044d1debfa1fee92c58d7b" kindref="member">QCPCurve::drawLegendIcon</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17145"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>fill:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush)</highlight></codeline>
<codeline lineno="17148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ac08a480155895e674dbfe5a5670e0ff3" kindref="member">applyFillAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="17150"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;fillRect(QRectF(rect.left(),<sp/>rect.top()+rect.height()/2.0,<sp/>rect.width(),<sp/>rect.height()/3.0),<sp/><ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>);</highlight></codeline>
<codeline lineno="17151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>line<sp/>vertically<sp/>centered:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" kindref="member">mLineStyle</ref><sp/>!=<sp/><ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" kindref="member">lsNone</ref>)</highlight></codeline>
<codeline lineno="17154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="17156"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="17157"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.left(),<sp/>rect.top()+rect.height()/2.0,<sp/>rect.right()+5,<sp/>rect.top()+rect.height()/2.0));<sp/></highlight><highlight class="comment">//<sp/>+5<sp/>on<sp/>x2<sp/>else<sp/>last<sp/>segment<sp/>is<sp/>missing<sp/>from<sp/>dashed/dotted<sp/>pens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>scatter<sp/>symbol:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1aa3861281108d0adbeb291c820ea3925c" kindref="member">isNone</ref>())</highlight></codeline>
<codeline lineno="17161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a753272ee225a62827e90c3e1e78de4b1" kindref="member">applyScattersAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="17163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>scatter<sp/>pixmap<sp/>if<sp/>it&apos;s<sp/>too<sp/>large<sp/>to<sp/>fit<sp/>in<sp/>legend<sp/>icon<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a4462a25ef17769631f4e0aa81dadca4b" kindref="member">shape</ref>()<sp/>==<sp/><ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" kindref="member">QCPScatterStyle::ssPixmap</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a9bab44cc41fcd585621a4b3e0e48231b" kindref="member">pixmap</ref>().size().width()<sp/>&gt;<sp/>rect.width()<sp/>||<sp/><ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a9bab44cc41fcd585621a4b3e0e48231b" kindref="member">pixmap</ref>().size().height()<sp/>&gt;<sp/>rect.height()))</highlight></codeline>
<codeline lineno="17165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>scaledStyle(<ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>);</highlight></codeline>
<codeline lineno="17167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledStyle.setPixmap(scaledStyle.pixmap().scaled(rect.size().toSize(),<sp/>Qt::KeepAspectRatio,<sp/>Qt::SmoothTransformation));</highlight></codeline>
<codeline lineno="17168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledStyle.applyTo(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="17169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaledStyle.drawShape(painter,<sp/>QRectF(rect).center());</highlight></codeline>
<codeline lineno="17170"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a81817dfd404635f211e6ff2a04657d36" kindref="member">applyTo</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="17173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">drawShape</ref>(painter,<sp/>QRectF(rect).center());</highlight></codeline>
<codeline lineno="17174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17177"><highlight class="normal"></highlight></codeline>
<codeline lineno="17183"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a45593f30b81beec4b6130b6b53306087" kindref="member">QCPCurve::drawScatterPlot</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;<sp/>*pointData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17184"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>scatter<sp/>point<sp/>symbols:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17186"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a753272ee225a62827e90c3e1e78de4b1" kindref="member">applyScattersAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="17187"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a81817dfd404635f211e6ff2a04657d36" kindref="member">applyTo</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="17188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;pointData-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="17189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qIsNaN(pointData-&gt;at(i).x())<sp/>&amp;&amp;<sp/>!qIsNaN(pointData-&gt;at(i).y()))</highlight></codeline>
<codeline lineno="17190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">drawShape</ref>(painter,<sp/><sp/>pointData-&gt;at(i));</highlight></codeline>
<codeline lineno="17191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17192"><highlight class="normal"></highlight></codeline>
<codeline lineno="17206"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1afa895f8ba9ae34fea6ecea295fd7b1e5" kindref="member">QCPCurve::getCurveData</ref>(QVector&lt;QPointF&gt;<sp/>*lineData)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17207"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17208"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="17209"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="17210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17211"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>margins<sp/>to<sp/>rect<sp/>to<sp/>compensate<sp/>for<sp/>stroke<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>strokeMargin<sp/>=<sp/>qMax(qreal(1.0),<sp/>qreal(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().widthF()*0.75));<sp/></highlight><highlight class="comment">//<sp/>stroke<sp/>radius<sp/>+<sp/>50%<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1aa3861281108d0adbeb291c820ea3925c" kindref="member">isNone</ref>())</highlight></codeline>
<codeline lineno="17215"><highlight class="normal"><sp/><sp/><sp/><sp/>strokeMargin<sp/>=<sp/>qMax(strokeMargin,<sp/><ref refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" kindref="member">mScatterStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a1973ee650368f1c5f55507b78473f634" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="17216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectLeft<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)-strokeMargin*((keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()==Qt::Vertical)!=keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()?-1:1));</highlight></codeline>
<codeline lineno="17217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectRight<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)+strokeMargin*((keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()==Qt::Vertical)!=keyAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()?-1:1));</highlight></codeline>
<codeline lineno="17218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectBottom<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)+strokeMargin*((valueAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()==Qt::Horizontal)!=valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()?-1:1));</highlight></codeline>
<codeline lineno="17219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectTop<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1ae9289ef7043b9d966af88eaa95b037d1" kindref="member">pixelToCoord</ref>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(valueAxis-&gt;<ref refid="class_q_c_p_axis_1ab1ea79a4f5ea4cf42620f8f51c477ac4" kindref="member">range</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)-strokeMargin*((valueAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()==Qt::Horizontal)!=valueAxis-&gt;<ref refid="class_q_c_p_axis_1ade26dc7994ccd8a11f64fd83377ee021" kindref="member">rangeReversed</ref>()?-1:1));</highlight></codeline>
<codeline lineno="17220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRegion;</highlight></codeline>
<codeline lineno="17221"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="17222"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::const_iterator<sp/>prevIt<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constEnd()-1;</highlight></codeline>
<codeline lineno="17223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevRegion<sp/>=<sp/><ref refid="class_q_c_p_curve_1a3af3183f35bd7aebe149f29ae4f1034a" kindref="member">getRegion</ref>(prevIt.value().key,<sp/>prevIt.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom);</highlight></codeline>
<codeline lineno="17224"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>trailingPoints;<sp/></highlight><highlight class="comment">//<sp/>points<sp/>that<sp/>must<sp/>be<sp/>applied<sp/>after<sp/>all<sp/>other<sp/>points<sp/>(are<sp/>generated<sp/>only<sp/>when<sp/>handling<sp/>first<sp/>point<sp/>to<sp/>get<sp/>virtual<sp/>segment<sp/>between<sp/>last<sp/>and<sp/>first<sp/>point<sp/>right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="17226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17227"><highlight class="normal"><sp/><sp/><sp/><sp/>currentRegion<sp/>=<sp/><ref refid="class_q_c_p_curve_1a3af3183f35bd7aebe149f29ae4f1034a" kindref="member">getRegion</ref>(it.value().key,<sp/>it.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom);</highlight></codeline>
<codeline lineno="17228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentRegion<sp/>!=<sp/>prevRegion)<sp/></highlight><highlight class="comment">//<sp/>changed<sp/>region,<sp/>possibly<sp/>need<sp/>to<sp/>add<sp/>some<sp/>optimized<sp/>edge<sp/>points<sp/>or<sp/>original<sp/>points<sp/>if<sp/>entering<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentRegion<sp/>!=<sp/>5)<sp/></highlight><highlight class="comment">//<sp/>segment<sp/>doesn&apos;t<sp/>end<sp/>in<sp/>R,<sp/>so<sp/>it&apos;s<sp/>a<sp/>candidate<sp/>for<sp/>removal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>crossA,<sp/>crossB;</highlight></codeline>
<codeline lineno="17233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevRegion<sp/>==<sp/>5)<sp/></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>coming<sp/>from<sp/>R,<sp/>so<sp/>add<sp/>this<sp/>point<sp/>optimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_curve_1acbcfea8986dde6c0143e3f7e8e76041d" kindref="member">getOptimizedPoint</ref>(currentRegion,<sp/>it.value().key,<sp/>it.value().value,<sp/>prevIt.value().key,<sp/>prevIt.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom));</highlight></codeline>
<codeline lineno="17236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>situations<sp/>5-&gt;1/7/9/3<sp/>the<sp/>segment<sp/>may<sp/>leave<sp/>R<sp/>and<sp/>directly<sp/>cross<sp/>through<sp/>two<sp/>outer<sp/>regions.<sp/>In<sp/>these<sp/>cases<sp/>we<sp/>need<sp/>to<sp/>add<sp/>an<sp/>additional<sp/>corner<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_curve_1aad0b69d9a7a2a5367fcc9fe3edaf9bf4" kindref="member">getOptimizedCornerPoints</ref>(prevRegion,<sp/>currentRegion,<sp/>prevIt.value().key,<sp/>prevIt.value().value,<sp/>it.value().key,<sp/>it.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom);</highlight></codeline>
<codeline lineno="17238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1ae5b232c8201441a940516c745309a685" kindref="member">mayTraverse</ref>(prevRegion,<sp/>currentRegion)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="17239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1ab4ffdf3d62d5bd3a187f6668daf01f85" kindref="member">getTraverse</ref>(prevIt.value().key,<sp/>prevIt.value().value,<sp/>it.value().key,<sp/>it.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom,<sp/>crossA,<sp/>crossB))</highlight></codeline>
<codeline lineno="17240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>two<sp/>cross<sp/>points<sp/>optimized<sp/>if<sp/>segment<sp/>crosses<sp/>R<sp/>and<sp/>if<sp/>segment<sp/>isn&apos;t<sp/>virtual<sp/>zeroth<sp/>segment<sp/>between<sp/>last<sp/>and<sp/>first<sp/>curve<sp/>point:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVector&lt;QPointF&gt;<sp/>beforeTraverseCornerPoints,<sp/>afterTraverseCornerPoints;</highlight></codeline>
<codeline lineno="17243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_curve_1abe1721b19669e7127d76d144660fbeb8" kindref="member">getTraverseCornerPoints</ref>(prevRegion,<sp/>currentRegion,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom,<sp/>beforeTraverseCornerPoints,<sp/>afterTraverseCornerPoints);</highlight></codeline>
<codeline lineno="17244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin())</highlight></codeline>
<codeline lineno="17245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/>beforeTraverseCornerPoints;</highlight></codeline>
<codeline lineno="17247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(crossA);</highlight></codeline>
<codeline lineno="17248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(crossB);</highlight></codeline>
<codeline lineno="17249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/>afterTraverseCornerPoints;</highlight></codeline>
<codeline lineno="17250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(crossB);</highlight></codeline>
<codeline lineno="17253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/>afterTraverseCornerPoints;</highlight></codeline>
<codeline lineno="17254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trailingPoints<sp/>&lt;&lt;<sp/>beforeTraverseCornerPoints<sp/>&lt;&lt;<sp/>crossA<sp/>;</highlight></codeline>
<codeline lineno="17255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>cross<sp/>R,<sp/>line<sp/>is<sp/>just<sp/>moving<sp/>around<sp/>in<sp/>outside<sp/>regions,<sp/>so<sp/>only<sp/>need<sp/>to<sp/>add<sp/>optimized<sp/>point(s)<sp/>at<sp/>the<sp/>boundary<sp/>corner(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_curve_1aad0b69d9a7a2a5367fcc9fe3edaf9bf4" kindref="member">getOptimizedCornerPoints</ref>(prevRegion,<sp/>currentRegion,<sp/>prevIt.value().key,<sp/>prevIt.value().value,<sp/>it.value().key,<sp/>it.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom);</highlight></codeline>
<codeline lineno="17259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>does<sp/>end<sp/>in<sp/>R,<sp/>so<sp/>we<sp/>add<sp/>previous<sp/>point<sp/>optimized<sp/>and<sp/>this<sp/>point<sp/>at<sp/>original<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin())<sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>first<sp/>point<sp/>in<sp/>curve<sp/>and<sp/>prevIt<sp/>is<sp/>last<sp/>one.<sp/>So<sp/>save<sp/>optimized<sp/>point<sp/>for<sp/>adding<sp/>it<sp/>to<sp/>the<sp/>lineData<sp/>in<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trailingPoints<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_curve_1acbcfea8986dde6c0143e3f7e8e76041d" kindref="member">getOptimizedPoint</ref>(prevRegion,<sp/>prevIt.value().key,<sp/>prevIt.value().value,<sp/>it.value().key,<sp/>it.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom);</highlight></codeline>
<codeline lineno="17264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_curve_1acbcfea8986dde6c0143e3f7e8e76041d" kindref="member">getOptimizedPoint</ref>(prevRegion,<sp/>prevIt.value().key,<sp/>prevIt.value().value,<sp/>it.value().key,<sp/>it.value().value,<sp/>rectLeft,<sp/>rectTop,<sp/>rectRight,<sp/>rectBottom));</highlight></codeline>
<codeline lineno="17266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(it.value().key,<sp/>it.value().value));</highlight></codeline>
<codeline lineno="17267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17268"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>region<sp/>didn&apos;t<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentRegion<sp/>==<sp/>5)<sp/></highlight><highlight class="comment">//<sp/>still<sp/>in<sp/>R,<sp/>keep<sp/>adding<sp/>original<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineData-&gt;append(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(it.value().key,<sp/>it.value().value));</highlight></codeline>
<codeline lineno="17273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>still<sp/>outside<sp/>R,<sp/>no<sp/>need<sp/>to<sp/>add<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>how<sp/>this<sp/>is<sp/>not<sp/>doing<sp/>anything?<sp/>That&apos;s<sp/>the<sp/>main<sp/>optimization...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17278"><highlight class="normal"><sp/><sp/><sp/><sp/>prevIt<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="17279"><highlight class="normal"><sp/><sp/><sp/><sp/>prevRegion<sp/>=<sp/>currentRegion;</highlight></codeline>
<codeline lineno="17280"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="17281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17282"><highlight class="normal"><sp/><sp/>*lineData<sp/>&lt;&lt;<sp/>trailingPoints;</highlight></codeline>
<codeline lineno="17283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17284"><highlight class="normal"></highlight></codeline>
<codeline lineno="17303"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1a3af3183f35bd7aebe149f29ae4f1034a" kindref="member">QCPCurve::getRegion</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectLeft,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectTop,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectRight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectBottom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17304"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>rectLeft)<sp/></highlight><highlight class="comment">//<sp/>region<sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17306"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>rectTop)</highlight></codeline>
<codeline lineno="17308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="17309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>rectBottom)</highlight></codeline>
<codeline lineno="17310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="17311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="17313"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>rectRight)<sp/></highlight><highlight class="comment">//<sp/>region<sp/>789</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>rectTop)</highlight></codeline>
<codeline lineno="17316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="17317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>rectBottom)</highlight></codeline>
<codeline lineno="17318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>9;</highlight></codeline>
<codeline lineno="17319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="17321"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>region<sp/>456</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&gt;<sp/>rectTop)</highlight></codeline>
<codeline lineno="17324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="17325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>rectBottom)</highlight></codeline>
<codeline lineno="17326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6;</highlight></codeline>
<codeline lineno="17327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="17329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17331"><highlight class="normal"></highlight></codeline>
<codeline lineno="17347"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_curve_1acbcfea8986dde6c0143e3f7e8e76041d" kindref="member">QCPCurve::getOptimizedPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>otherRegion,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>otherKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>otherValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectLeft,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectTop,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectRight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectBottom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17348"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intersectKey<sp/>=<sp/>rectLeft;<sp/></highlight><highlight class="comment">//<sp/>initial<sp/>value<sp/>is<sp/>just<sp/>fail-safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intersectValue<sp/>=<sp/>rectTop;<sp/></highlight><highlight class="comment">//<sp/>initial<sp/>value<sp/>is<sp/>just<sp/>fail-safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(otherRegion)</highlight></codeline>
<codeline lineno="17352"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>and<sp/>left<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>rectTop;</highlight></codeline>
<codeline lineno="17356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>otherKey<sp/>+<sp/>(key-otherKey)/(value-otherValue)*(intersectValue-otherValue);</highlight></codeline>
<codeline lineno="17357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersectKey<sp/>&lt;<sp/>rectLeft<sp/>||<sp/>intersectKey<sp/>&gt;<sp/>rectRight)<sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>intersect,<sp/>so<sp/>must<sp/>intersect<sp/>other:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>rectLeft;</highlight></codeline>
<codeline lineno="17360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>otherValue<sp/>+<sp/>(value-otherValue)/(key-otherKey)*(intersectKey-otherKey);</highlight></codeline>
<codeline lineno="17361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//<sp/>left<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>rectLeft;</highlight></codeline>
<codeline lineno="17367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>otherValue<sp/>+<sp/>(value-otherValue)/(key-otherKey)*(intersectKey-otherKey);</highlight></codeline>
<codeline lineno="17368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>and<sp/>left<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>rectBottom;</highlight></codeline>
<codeline lineno="17373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>otherKey<sp/>+<sp/>(key-otherKey)/(value-otherValue)*(intersectValue-otherValue);</highlight></codeline>
<codeline lineno="17374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersectKey<sp/>&lt;<sp/>rectLeft<sp/>||<sp/>intersectKey<sp/>&gt;<sp/>rectRight)<sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>intersect,<sp/>so<sp/>must<sp/>intersect<sp/>other:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>rectLeft;</highlight></codeline>
<codeline lineno="17377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>otherValue<sp/>+<sp/>(value-otherValue)/(key-otherKey)*(intersectKey-otherKey);</highlight></codeline>
<codeline lineno="17378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>rectTop;</highlight></codeline>
<codeline lineno="17384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>otherKey<sp/>+<sp/>(key-otherKey)/(value-otherValue)*(intersectValue-otherValue);</highlight></codeline>
<codeline lineno="17385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="17388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>case<sp/>5<sp/>shouldn&apos;t<sp/>happen<sp/>for<sp/>this<sp/>function<sp/>but<sp/>we<sp/>add<sp/>it<sp/>anyway<sp/>to<sp/>prevent<sp/>potential<sp/>discontinuity<sp/>in<sp/>branch<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>rectBottom;</highlight></codeline>
<codeline lineno="17394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>otherKey<sp/>+<sp/>(key-otherKey)/(value-otherValue)*(intersectValue-otherValue);</highlight></codeline>
<codeline lineno="17395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/></highlight><highlight class="comment">//<sp/>top<sp/>and<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>rectTop;</highlight></codeline>
<codeline lineno="17400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>otherKey<sp/>+<sp/>(key-otherKey)/(value-otherValue)*(intersectValue-otherValue);</highlight></codeline>
<codeline lineno="17401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersectKey<sp/>&lt;<sp/>rectLeft<sp/>||<sp/>intersectKey<sp/>&gt;<sp/>rectRight)<sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>intersect,<sp/>so<sp/>must<sp/>intersect<sp/>other:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>rectRight;</highlight></codeline>
<codeline lineno="17404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>otherValue<sp/>+<sp/>(value-otherValue)/(key-otherKey)*(intersectKey-otherKey);</highlight></codeline>
<codeline lineno="17405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/></highlight><highlight class="comment">//<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>rectRight;</highlight></codeline>
<codeline lineno="17411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>otherValue<sp/>+<sp/>(value-otherValue)/(key-otherKey)*(intersectKey-otherKey);</highlight></codeline>
<codeline lineno="17412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>and<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>rectBottom;</highlight></codeline>
<codeline lineno="17417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>otherKey<sp/>+<sp/>(key-otherKey)/(value-otherValue)*(intersectValue-otherValue);</highlight></codeline>
<codeline lineno="17418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersectKey<sp/>&lt;<sp/>rectLeft<sp/>||<sp/>intersectKey<sp/>&gt;<sp/>rectRight)<sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>intersect,<sp/>so<sp/>must<sp/>intersect<sp/>other:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectKey<sp/>=<sp/>rectRight;</highlight></codeline>
<codeline lineno="17421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectValue<sp/>=<sp/>otherValue<sp/>+<sp/>(value-otherValue)/(key-otherKey)*(intersectKey-otherKey);</highlight></codeline>
<codeline lineno="17422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(intersectKey,<sp/>intersectValue);</highlight></codeline>
<codeline lineno="17427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17428"><highlight class="normal"></highlight></codeline>
<codeline lineno="17447"><highlight class="normal">QVector&lt;QPointF&gt;<sp/><ref refid="class_q_c_p_curve_1aad0b69d9a7a2a5367fcc9fe3edaf9bf4" kindref="member">QCPCurve::getOptimizedCornerPoints</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevRegion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRegion,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectLeft,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectTop,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectRight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectBottom)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17448"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17449"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>result;</highlight></codeline>
<codeline lineno="17450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(prevRegion)</highlight></codeline>
<codeline lineno="17451"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="17453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>we<sp/>need<sp/>another<sp/>distinction<sp/>of<sp/>cases:<sp/>segment<sp/>may<sp/>pass<sp/>below<sp/>or<sp/>above<sp/>rect,<sp/>requiring<sp/>either<sp/>bottom<sp/>right<sp/>or<sp/>top<sp/>left<sp/>corner<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value-prevValue)/(key-prevKey)*(rectLeft-key)+value<sp/>&lt;<sp/>rectBottom)<sp/></highlight><highlight class="comment">//<sp/>segment<sp/>passes<sp/>below<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>}</highlight></codeline>
<codeline lineno="17465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>}</highlight></codeline>
<codeline lineno="17467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="17473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="17486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>we<sp/>need<sp/>another<sp/>distinction<sp/>of<sp/>cases:<sp/>segment<sp/>may<sp/>pass<sp/>below<sp/>or<sp/>above<sp/>rect,<sp/>requiring<sp/>either<sp/>bottom<sp/>right<sp/>or<sp/>top<sp/>left<sp/>corner<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value-prevValue)/(key-prevKey)*(rectRight-key)+value<sp/>&lt;<sp/>rectBottom)<sp/></highlight><highlight class="comment">//<sp/>segment<sp/>passes<sp/>below<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>}</highlight></codeline>
<codeline lineno="17498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>}</highlight></codeline>
<codeline lineno="17500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="17506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="17519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="17530"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="17543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>we<sp/>need<sp/>another<sp/>distinction<sp/>of<sp/>cases:<sp/>segment<sp/>may<sp/>pass<sp/>below<sp/>or<sp/>above<sp/>rect,<sp/>requiring<sp/>either<sp/>bottom<sp/>right<sp/>or<sp/>top<sp/>left<sp/>corner<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value-prevValue)/(key-prevKey)*(rectRight-key)+value<sp/>&lt;<sp/>rectBottom)<sp/></highlight><highlight class="comment">//<sp/>segment<sp/>passes<sp/>below<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>}</highlight></codeline>
<codeline lineno="17555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>}</highlight></codeline>
<codeline lineno="17557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="17563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="17576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case<sp/>we<sp/>need<sp/>another<sp/>distinction<sp/>of<sp/>cases:<sp/>segment<sp/>may<sp/>pass<sp/>below<sp/>or<sp/>above<sp/>rect,<sp/>requiring<sp/>either<sp/>bottom<sp/>right<sp/>or<sp/>top<sp/>left<sp/>corner<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value-prevValue)/(key-prevKey)*(rectLeft-key)+value<sp/>&lt;<sp/>rectBottom)<sp/></highlight><highlight class="comment">//<sp/>segment<sp/>passes<sp/>below<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>}</highlight></codeline>
<codeline lineno="17588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom)<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>result.append(result.last());<sp/>result<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>}</highlight></codeline>
<codeline lineno="17590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="17597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17598"><highlight class="normal"></highlight></codeline>
<codeline lineno="17611"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1ae5b232c8201441a940516c745309a685" kindref="member">QCPCurve::mayTraverse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevRegion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRegion)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17612"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(prevRegion)</highlight></codeline>
<codeline lineno="17614"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="17616"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="17620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="17621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="17622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="17627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="17631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="17636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="17640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="17641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="17642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="17647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="17651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>occur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="17657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="17661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="17666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="17670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="17671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="17672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="17677"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="17681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="17686"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="17690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="17691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="17692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17699"><highlight class="normal"></highlight></codeline>
<codeline lineno="17700"><highlight class="normal"></highlight></codeline>
<codeline lineno="17714"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1ab4ffdf3d62d5bd3a187f6668daf01f85" kindref="member">QCPCurve::getTraverse</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectLeft,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectTop,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectRight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectBottom,<sp/>QPointF<sp/>&amp;crossA,<sp/>QPointF<sp/>&amp;crossB)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17715"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17716"><highlight class="normal"><sp/><sp/>QList&lt;QPointF&gt;<sp/>intersections;<sp/></highlight><highlight class="comment">//<sp/>x<sp/>of<sp/>QPointF<sp/>corresponds<sp/>to<sp/>key<sp/>and<sp/>y<sp/>to<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(key-prevKey))<sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>parallel<sp/>to<sp/>value<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17718"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>region<sp/>filter<sp/>in<sp/>mayTraverseR(),<sp/>if<sp/>line<sp/>is<sp/>parallel<sp/>to<sp/>value<sp/>or<sp/>key<sp/>axis,<sp/>R<sp/>is<sp/>traversed<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17720"><highlight class="normal"><sp/><sp/><sp/><sp/>intersections.append(QPointF(key,<sp/>rectBottom));<sp/></highlight><highlight class="comment">//<sp/>direction<sp/>will<sp/>be<sp/>taken<sp/>care<sp/>of<sp/>at<sp/>end<sp/>of<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17721"><highlight class="normal"><sp/><sp/><sp/><sp/>intersections.append(QPointF(key,<sp/>rectTop));</highlight></codeline>
<codeline lineno="17722"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(value-prevValue))<sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>parallel<sp/>to<sp/>key<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17723"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>due<sp/>to<sp/>region<sp/>filter<sp/>in<sp/>mayTraverseR(),<sp/>if<sp/>line<sp/>is<sp/>parallel<sp/>to<sp/>value<sp/>or<sp/>key<sp/>axis,<sp/>R<sp/>is<sp/>traversed<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17725"><highlight class="normal"><sp/><sp/><sp/><sp/>intersections.append(QPointF(rectLeft,<sp/>value));<sp/></highlight><highlight class="comment">//<sp/>direction<sp/>will<sp/>be<sp/>taken<sp/>care<sp/>of<sp/>at<sp/>end<sp/>of<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17726"><highlight class="normal"><sp/><sp/><sp/><sp/>intersections.append(QPointF(rectRight,<sp/>value));</highlight></codeline>
<codeline lineno="17727"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>skewed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17728"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma;</highlight></codeline>
<codeline lineno="17730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPerValue<sp/>=<sp/>(key-prevKey)/(value-prevValue);</highlight></codeline>
<codeline lineno="17731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>top<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17732"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>prevKey<sp/>+<sp/>(rectTop-prevValue)*keyPerValue;</highlight></codeline>
<codeline lineno="17733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>rectLeft<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rectRight)</highlight></codeline>
<codeline lineno="17734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersections.append(QPointF(gamma,<sp/>rectTop));</highlight></codeline>
<codeline lineno="17735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>bottom<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17736"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>prevKey<sp/>+<sp/>(rectBottom-prevValue)*keyPerValue;</highlight></codeline>
<codeline lineno="17737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>rectLeft<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rectRight)</highlight></codeline>
<codeline lineno="17738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersections.append(QPointF(gamma,<sp/>rectBottom));</highlight></codeline>
<codeline lineno="17739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valuePerKey<sp/>=<sp/>1.0/keyPerValue;</highlight></codeline>
<codeline lineno="17740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>left<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17741"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>prevValue<sp/>+<sp/>(rectLeft-prevKey)*valuePerKey;</highlight></codeline>
<codeline lineno="17742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>rectBottom<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rectTop)</highlight></codeline>
<codeline lineno="17743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersections.append(QPointF(rectLeft,<sp/>gamma));</highlight></codeline>
<codeline lineno="17744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>right<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17745"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>prevValue<sp/>+<sp/>(rectRight-prevKey)*valuePerKey;</highlight></codeline>
<codeline lineno="17746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>rectBottom<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rectTop)</highlight></codeline>
<codeline lineno="17747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intersections.append(QPointF(rectRight,<sp/>gamma));</highlight></codeline>
<codeline lineno="17748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17749"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>cases<sp/>where<sp/>found<sp/>points<sp/>isn&apos;t<sp/>exactly<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersections.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="17752"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>probably<sp/>goes<sp/>through<sp/>corner<sp/>of<sp/>rect,<sp/>and<sp/>we<sp/>got<sp/>duplicate<sp/>points<sp/>there.<sp/>single<sp/>out<sp/>the<sp/>point<sp/>pair<sp/>with<sp/>greatest<sp/>distance<sp/>in<sp/>between:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqrMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17755"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>pv1,<sp/>pv2;</highlight></codeline>
<codeline lineno="17756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;intersections.size()-1;<sp/>++i)</highlight></codeline>
<codeline lineno="17757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=i+1;<sp/>k&lt;intersections.size();<sp/>++k)</highlight></codeline>
<codeline lineno="17759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>distPoint<sp/>=<sp/>intersections.at(i)-intersections.at(k);</highlight></codeline>
<codeline lineno="17761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqr<sp/>=<sp/>distPoint.x()*distPoint.x()+distPoint.y()+distPoint.y();</highlight></codeline>
<codeline lineno="17762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distSqr<sp/>&gt;<sp/>distSqrMax)</highlight></codeline>
<codeline lineno="17763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv1<sp/>=<sp/>intersections.at(i);</highlight></codeline>
<codeline lineno="17765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv2<sp/>=<sp/>intersections.at(k);</highlight></codeline>
<codeline lineno="17766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distSqrMax<sp/>=<sp/>distSqr;</highlight></codeline>
<codeline lineno="17767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17770"><highlight class="normal"><sp/><sp/><sp/><sp/>intersections<sp/>=<sp/>QList&lt;QPointF&gt;()<sp/>&lt;&lt;<sp/>pv1<sp/>&lt;&lt;<sp/>pv2;</highlight></codeline>
<codeline lineno="17771"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intersections.size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="17772"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>or<sp/>even<sp/>zero<sp/>points<sp/>found<sp/>(shouldn&apos;t<sp/>happen<sp/>unless<sp/>line<sp/>perfectly<sp/>tangent<sp/>to<sp/>corner),<sp/>no<sp/>need<sp/>to<sp/>draw<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17775"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17776"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>possibly<sp/>re-sort<sp/>points<sp/>so<sp/>optimized<sp/>point<sp/>segment<sp/>has<sp/>same<sp/>direction<sp/>as<sp/>original<sp/>segment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((key-prevKey)*(intersections.at(1).x()-intersections.at(0).x())<sp/>+<sp/>(value-prevValue)*(intersections.at(1).y()-intersections.at(0).y())<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>scalar<sp/>product<sp/>of<sp/>both<sp/>segments<sp/>&lt;<sp/>0<sp/>-&gt;<sp/>opposite<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17779"><highlight class="normal"><sp/><sp/><sp/><sp/>intersections.move(0,<sp/>1);</highlight></codeline>
<codeline lineno="17780"><highlight class="normal"><sp/><sp/>crossA<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(intersections.at(0).x(),<sp/>intersections.at(0).y());</highlight></codeline>
<codeline lineno="17781"><highlight class="normal"><sp/><sp/>crossB<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(intersections.at(1).x(),<sp/>intersections.at(1).y());</highlight></codeline>
<codeline lineno="17782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17784"><highlight class="normal"></highlight></codeline>
<codeline lineno="17810"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1abe1721b19669e7127d76d144660fbeb8" kindref="member">QCPCurve::getTraverseCornerPoints</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prevRegion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentRegion,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectLeft,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectTop,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectRight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rectBottom,<sp/>QVector&lt;QPointF&gt;<sp/>&amp;beforeTraverse,<sp/>QVector&lt;QPointF&gt;<sp/>&amp;afterTraverse)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17811"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(prevRegion)</highlight></codeline>
<codeline lineno="17813"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="17815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="17825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="17834"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="17844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>{<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}<sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen<sp/>because<sp/>this<sp/>method<sp/>only<sp/>handles<sp/>full<sp/>traverses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="17854"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="17863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="17873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>{<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>9:</highlight></codeline>
<codeline lineno="17882"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentRegion)</highlight></codeline>
<codeline lineno="17884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/>afterTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectLeft,<sp/>rectTop);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{<sp/>beforeTraverse<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(rectRight,<sp/>rectBottom);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17893"><highlight class="normal"></highlight></codeline>
<codeline lineno="17900"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_curve_1acd7a68c6f268ce1ab845eaf69fc2c6a6" kindref="member">QCPCurve::pointDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pixelPoint)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17901"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="17903"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17904"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;requested<sp/>point<sp/>distance<sp/>on<sp/>curve&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1ac29ffef424e2488675930de18cde612a" kindref="member">mName</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;without<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>500;</highlight></codeline>
<codeline lineno="17906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;size()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="17908"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17909"><highlight class="normal"><sp/><sp/><sp/><sp/>QPointF<sp/>dataPoint<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin().key(),<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin().value().value);</highlight></codeline>
<codeline lineno="17910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QVector2D(dataPoint-pixelPoint).length();</highlight></codeline>
<codeline lineno="17911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17912"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17913"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>minimum<sp/>distance<sp/>to<sp/>line<sp/>segments:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17914"><highlight class="normal"><sp/><sp/>QVector&lt;QPointF&gt;<sp/>*lineData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QVector&lt;QPointF&gt;;</highlight></codeline>
<codeline lineno="17915"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_curve_1afa895f8ba9ae34fea6ecea295fd7b1e5" kindref="member">getCurveData</ref>(lineData);</highlight></codeline>
<codeline lineno="17916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="17917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;lineData-&gt;size()-1;<sp/>++i)</highlight></codeline>
<codeline lineno="17918"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(lineData-&gt;at(i),<sp/>lineData-&gt;at(i+1),<sp/>pixelPoint);</highlight></codeline>
<codeline lineno="17920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="17921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="17922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lineData;</highlight></codeline>
<codeline lineno="17924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="17925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17926"><highlight class="normal"></highlight></codeline>
<codeline lineno="17927"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17928"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_curve_1ad6a9559e16ab43586df18ae376d54481" kindref="member">QCPCurve::getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17929"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17930"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="17931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17933"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="17935"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17936"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="17937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="17938"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17939"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().key;</highlight></codeline>
<codeline lineno="17940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref><sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)<sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="17941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="17943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="17945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="17948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="17950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17953"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="17954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17955"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17956"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="17957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="17958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17959"><highlight class="normal"></highlight></codeline>
<codeline lineno="17960"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17961"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_curve_1a1d6eec81aab9ae6182bb7c040bcb2dbc" kindref="member">QCPCurve::getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17962"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17963"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="17964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17966"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="17968"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17969"><highlight class="normal"><sp/><sp/>QCPCurveDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="17970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="17971"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17972"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="17973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref><sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)<sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="17974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="17976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="17978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="17981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="17983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17986"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="17987"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17988"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17989"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="17990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="17991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17992"><highlight class="normal"></highlight></codeline>
<codeline lineno="17993"><highlight class="normal"></highlight></codeline>
<codeline lineno="17997"></codeline>
<codeline lineno="18031"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18032"><highlight class="normal"></highlight></codeline>
<codeline lineno="18059"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18060"><highlight class="normal"></highlight></codeline>
<codeline lineno="18064"><highlight class="normal"><ref refid="class_q_c_p_bars_group_1aa4e043b9a22c6c5ea0f93740aca063e1" kindref="member">QCPBarsGroup::QCPBarsGroup</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="18065"><highlight class="normal"><sp/><sp/>QObject(parentPlot),</highlight></codeline>
<codeline lineno="18066"><highlight class="normal"><sp/><sp/>mParentPlot(parentPlot),</highlight></codeline>
<codeline lineno="18067"><highlight class="normal"><sp/><sp/>mSpacingType(stAbsolute),</highlight></codeline>
<codeline lineno="18068"><highlight class="normal"><sp/><sp/>mSpacing(4)</highlight></codeline>
<codeline lineno="18069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18071"><highlight class="normal"></highlight></codeline>
<codeline lineno="18072"><highlight class="normal"><ref refid="class_q_c_p_bars_group_1adb9475bcb6a5f18c8918e17d939d8dbd" kindref="member">QCPBarsGroup::~QCPBarsGroup</ref>()</highlight></codeline>
<codeline lineno="18073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18074"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_group_1a3ddf23928c6cd89530bd34ab7ba7b177" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="18075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18076"><highlight class="normal"></highlight></codeline>
<codeline lineno="18084"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a2c7e2d61b10594a4555b615e1fcaf49e" kindref="member">QCPBarsGroup::setSpacingType</ref>(SpacingType<sp/>spacingType)</highlight></codeline>
<codeline lineno="18085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18086"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_group_1a6794ee1a9c81864d627bff6a4b2d64ec" kindref="member">mSpacingType</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_group_1a1bb562f669d47bd7d3cdd2da1f7d8f00" kindref="member">spacingType</ref>;</highlight></codeline>
<codeline lineno="18087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18088"><highlight class="normal"></highlight></codeline>
<codeline lineno="18095"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1aa553d327479d72a0c3dafcc724a190e2" kindref="member">QCPBarsGroup::setSpacing</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing)</highlight></codeline>
<codeline lineno="18096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18097"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_group_1a56471d7f548ca6141b7a5bf9629f7ece" kindref="member">mSpacing</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_group_1a730bffefcac6c97aaf60e6f64dd3bcd9" kindref="member">spacing</ref>;</highlight></codeline>
<codeline lineno="18098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18099"><highlight class="normal"></highlight></codeline>
<codeline lineno="18106"><highlight class="normal"><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*<ref refid="class_q_c_p_bars_group_1a7c72ed1f8cd962c93b8c42ab96cd91ec" kindref="member">QCPBarsGroup::bars</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18107"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.size())</highlight></codeline>
<codeline lineno="18109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.at(index);</highlight></codeline>
<codeline lineno="18111"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18113"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index<sp/>out<sp/>of<sp/>bounds:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index;</highlight></codeline>
<codeline lineno="18114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="18115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18117"><highlight class="normal"></highlight></codeline>
<codeline lineno="18123"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a3ddf23928c6cd89530bd34ab7ba7b177" kindref="member">QCPBarsGroup::clear</ref>()</highlight></codeline>
<codeline lineno="18124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*<ref refid="class_q_c_p_bars_group_1a7c72ed1f8cd962c93b8c42ab96cd91ec" kindref="member">bars</ref>,<sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>)<sp/></highlight><highlight class="comment">//<sp/>since<sp/>foreach<sp/>takes<sp/>a<sp/>copy,<sp/>removing<sp/>bars<sp/>in<sp/>the<sp/>loop<sp/>is<sp/>okay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18126"><highlight class="normal"><sp/><sp/><sp/><sp/>bars-&gt;<ref refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" kindref="member">setBarsGroup</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>removes<sp/>itself<sp/>via<sp/>removeBars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18128"><highlight class="normal"></highlight></codeline>
<codeline lineno="18135"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a809ed63cc4ff7cd5b0b8c96b470163d3" kindref="member">QCPBarsGroup::append</ref>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars)</highlight></codeline>
<codeline lineno="18136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bars)</highlight></codeline>
<codeline lineno="18138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18139"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bars<sp/>is<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.contains(bars))</highlight></codeline>
<codeline lineno="18144"><highlight class="normal"><sp/><sp/><sp/><sp/>bars-&gt;<ref refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" kindref="member">setBarsGroup</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18146"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bars<sp/>plottable<sp/>is<sp/>already<sp/>in<sp/>this<sp/>bars<sp/>group:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_bars_group_1a7c72ed1f8cd962c93b8c42ab96cd91ec" kindref="member">bars</ref>);</highlight></codeline>
<codeline lineno="18147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18148"><highlight class="normal"></highlight></codeline>
<codeline lineno="18158"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a309a5f7233db189f3ea9c2d04ece6c13" kindref="member">QCPBarsGroup::insert</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars)</highlight></codeline>
<codeline lineno="18159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bars)</highlight></codeline>
<codeline lineno="18161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18162"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bars<sp/>is<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18165"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>append<sp/>to<sp/>bars<sp/>list<sp/>normally:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.contains(bars))</highlight></codeline>
<codeline lineno="18168"><highlight class="normal"><sp/><sp/><sp/><sp/>bars-&gt;<ref refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" kindref="member">setBarsGroup</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>move<sp/>to<sp/>according<sp/>position:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18170"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.move(<ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.indexOf(bars),<sp/>qBound(0,<sp/>i,<sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.size()-1));</highlight></codeline>
<codeline lineno="18171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18172"><highlight class="normal"></highlight></codeline>
<codeline lineno="18178"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a215e28a5944f1159013a0e19169220e7" kindref="member">QCPBarsGroup::remove</ref>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars)</highlight></codeline>
<codeline lineno="18179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bars)</highlight></codeline>
<codeline lineno="18181"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18182"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bars<sp/>is<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18185"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.contains(bars))</highlight></codeline>
<codeline lineno="18187"><highlight class="normal"><sp/><sp/><sp/><sp/>bars-&gt;<ref refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" kindref="member">setBarsGroup</ref>(0);</highlight></codeline>
<codeline lineno="18188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18189"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bars<sp/>plottable<sp/>is<sp/>not<sp/>in<sp/>this<sp/>bars<sp/>group:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_bars_group_1a7c72ed1f8cd962c93b8c42ab96cd91ec" kindref="member">bars</ref>);</highlight></codeline>
<codeline lineno="18190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18191"><highlight class="normal"></highlight></codeline>
<codeline lineno="18199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a7b00514f19ad58d0bb3fd5246a67fae2" kindref="member">QCPBarsGroup::registerBars</ref>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars)</highlight></codeline>
<codeline lineno="18200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.contains(bars))</highlight></codeline>
<codeline lineno="18202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.append(bars);</highlight></codeline>
<codeline lineno="18203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18204"><highlight class="normal"></highlight></codeline>
<codeline lineno="18212"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1ac7073cdd7b1a40c6cb4b5f908145f8c4" kindref="member">QCPBarsGroup::unregisterBars</ref>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars)</highlight></codeline>
<codeline lineno="18213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18214"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>.removeOne(bars);</highlight></codeline>
<codeline lineno="18215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18216"><highlight class="normal"></highlight></codeline>
<codeline lineno="18223"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a8e2ca6002e7bab49670144d048a2bcc9" kindref="member">QCPBarsGroup::keyPixelOffset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyCoord)</highlight></codeline>
<codeline lineno="18224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>list<sp/>of<sp/>all<sp/>base<sp/>bars<sp/>in<sp/>case<sp/>some<sp/>mBars<sp/>are<sp/>stacked:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18226"><highlight class="normal"><sp/><sp/>QList&lt;const<sp/>QCPBars*&gt;<sp/>baseBars;</highlight></codeline>
<codeline lineno="18227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*b,<sp/><ref refid="class_q_c_p_bars_group_1affdb1e9233c277ff5a4c0a1121cf1fc0" kindref="member">mBars</ref>)</highlight></codeline>
<codeline lineno="18228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="class_q_c_p_bars_1a2c46a686cbad95f180ca3c2e88263961" kindref="member">barBelow</ref>())</highlight></codeline>
<codeline lineno="18230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>b-&gt;<ref refid="class_q_c_p_bars_1a2c46a686cbad95f180ca3c2e88263961" kindref="member">barBelow</ref>();</highlight></codeline>
<codeline lineno="18231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseBars.contains(b))</highlight></codeline>
<codeline lineno="18232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseBars.append(b);</highlight></codeline>
<codeline lineno="18233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>base<sp/>bar<sp/>this<sp/>&quot;bars&quot;<sp/>is<sp/>stacked<sp/>on:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*thisBase<sp/>=<sp/><ref refid="class_q_c_p_bars_group_1a7c72ed1f8cd962c93b8c42ab96cd91ec" kindref="member">bars</ref>;</highlight></codeline>
<codeline lineno="18236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(thisBase-&gt;<ref refid="class_q_c_p_bars_1a2c46a686cbad95f180ca3c2e88263961" kindref="member">barBelow</ref>())</highlight></codeline>
<codeline lineno="18237"><highlight class="normal"><sp/><sp/><sp/><sp/>thisBase<sp/>=<sp/>thisBase-&gt;<ref refid="class_q_c_p_bars_1a2c46a686cbad95f180ca3c2e88263961" kindref="member">barBelow</ref>();</highlight></codeline>
<codeline lineno="18238"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>key<sp/>pixel<sp/>offset<sp/>of<sp/>this<sp/>base<sp/>bars<sp/>considering<sp/>all<sp/>other<sp/>base<sp/>bars<sp/>in<sp/>this<sp/>barsgroup:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>baseBars.indexOf(thisBase);</highlight></codeline>
<codeline lineno="18242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="18243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex;</highlight></codeline>
<codeline lineno="18245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerPixelWidth,<sp/>upperPixelWidth;</highlight></codeline>
<codeline lineno="18246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseBars.size()<sp/>%<sp/>2<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>index<sp/>==<sp/>(baseBars.size()-1)/2)<sp/></highlight><highlight class="comment">//<sp/>is<sp/>center<sp/>bar<sp/>(int<sp/>division<sp/>on<sp/>purpose)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="18249"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>(baseBars.size()-1)/2.0)<sp/></highlight><highlight class="comment">//<sp/>bar<sp/>is<sp/>to<sp/>the<sp/>left<sp/>of<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseBars.size()<sp/>%<sp/>2<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>even<sp/>number<sp/>of<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>baseBars.size()/2-1;</highlight></codeline>
<codeline lineno="18254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>-=<sp/><ref refid="class_q_c_p_bars_group_1a0beccd41bc3841a4c5b284823bc7d2de" kindref="member">getPixelSpacing</ref>(baseBars.at(startIndex),<sp/>keyCoord)*0.5;<sp/></highlight><highlight class="comment">//<sp/>half<sp/>of<sp/>middle<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>uneven<sp/>number<sp/>of<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>(baseBars.size()-1)/2-1;</highlight></codeline>
<codeline lineno="18258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseBars.at((baseBars.size()-1)/2)-&gt;getPixelWidth(keyCoord,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="18259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>-=<sp/>qAbs(upperPixelWidth-lowerPixelWidth)*0.5;<sp/></highlight><highlight class="comment">//<sp/>half<sp/>of<sp/>center<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>-=<sp/><ref refid="class_q_c_p_bars_group_1a0beccd41bc3841a4c5b284823bc7d2de" kindref="member">getPixelSpacing</ref>(baseBars.at((baseBars.size()-1)/2),<sp/>keyCoord);<sp/></highlight><highlight class="comment">//<sp/>center<sp/>bar<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=startIndex;<sp/>i&gt;index;<sp/>--i)<sp/></highlight><highlight class="comment">//<sp/>add<sp/>widths<sp/>and<sp/>spacings<sp/>of<sp/>bars<sp/>in<sp/>between<sp/>center<sp/>and<sp/>our<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseBars.at(i)-&gt;getPixelWidth(keyCoord,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="18265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>-=<sp/>qAbs(upperPixelWidth-lowerPixelWidth);</highlight></codeline>
<codeline lineno="18266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>-=<sp/><ref refid="class_q_c_p_bars_group_1a0beccd41bc3841a4c5b284823bc7d2de" kindref="member">getPixelSpacing</ref>(baseBars.at(i),<sp/>keyCoord);</highlight></codeline>
<codeline lineno="18267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>half<sp/>of<sp/>our<sp/>bars<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseBars.at(index)-&gt;getPixelWidth(keyCoord,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="18270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>-=<sp/>qAbs(upperPixelWidth-lowerPixelWidth)*0.5;</highlight></codeline>
<codeline lineno="18271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>bar<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseBars.size()<sp/>%<sp/>2<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>even<sp/>number<sp/>of<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>baseBars.size()/2;</highlight></codeline>
<codeline lineno="18276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_q_c_p_bars_group_1a0beccd41bc3841a4c5b284823bc7d2de" kindref="member">getPixelSpacing</ref>(baseBars.at(startIndex),<sp/>keyCoord)*0.5;<sp/></highlight><highlight class="comment">//<sp/>half<sp/>of<sp/>middle<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>uneven<sp/>number<sp/>of<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>(baseBars.size()-1)/2+1;</highlight></codeline>
<codeline lineno="18280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseBars.at((baseBars.size()-1)/2)-&gt;getPixelWidth(keyCoord,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="18281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>qAbs(upperPixelWidth-lowerPixelWidth)*0.5;<sp/></highlight><highlight class="comment">//<sp/>half<sp/>of<sp/>center<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_q_c_p_bars_group_1a0beccd41bc3841a4c5b284823bc7d2de" kindref="member">getPixelSpacing</ref>(baseBars.at((baseBars.size()-1)/2),<sp/>keyCoord);<sp/></highlight><highlight class="comment">//<sp/>center<sp/>bar<sp/>spacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=startIndex;<sp/>i&lt;index;<sp/>++i)<sp/></highlight><highlight class="comment">//<sp/>add<sp/>widths<sp/>and<sp/>spacings<sp/>of<sp/>bars<sp/>in<sp/>between<sp/>center<sp/>and<sp/>our<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseBars.at(i)-&gt;getPixelWidth(keyCoord,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="18287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>qAbs(upperPixelWidth-lowerPixelWidth);</highlight></codeline>
<codeline lineno="18288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_q_c_p_bars_group_1a0beccd41bc3841a4c5b284823bc7d2de" kindref="member">getPixelSpacing</ref>(baseBars.at(i),<sp/>keyCoord);</highlight></codeline>
<codeline lineno="18289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>half<sp/>of<sp/>our<sp/>bars<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseBars.at(index)-&gt;getPixelWidth(keyCoord,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="18292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>qAbs(upperPixelWidth-lowerPixelWidth)*0.5;</highlight></codeline>
<codeline lineno="18293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="18296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18297"><highlight class="normal"></highlight></codeline>
<codeline lineno="18308"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a0beccd41bc3841a4c5b284823bc7d2de" kindref="member">QCPBarsGroup::getPixelSpacing</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyCoord)</highlight></codeline>
<codeline lineno="18309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_group_1a6794ee1a9c81864d627bff6a4b2d64ec" kindref="member">mSpacingType</ref>)</highlight></codeline>
<codeline lineno="18311"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ab53fa3efaf14867dd0f14d41d64e42ac" kindref="member">stAbsolute</ref>:</highlight></codeline>
<codeline lineno="18313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a56471d7f548ca6141b7a5bf9629f7ece" kindref="member">mSpacing</ref>;</highlight></codeline>
<codeline lineno="18315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ae94b05c27bc985dcdd8b1e1b7f163d26" kindref="member">stAxisRectRatio</ref>:</highlight></codeline>
<codeline lineno="18317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="18319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a45bf5c17f4ca29131b7eb0db06efc259" kindref="member">width</ref>()*<ref refid="class_q_c_p_bars_group_1a56471d7f548ca6141b7a5bf9629f7ece" kindref="member">mSpacing</ref>;</highlight></codeline>
<codeline lineno="18320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1aada3102af43b029e3879bcbf2bddfabb" kindref="member">axisRect</ref>()-&gt;<ref refid="class_q_c_p_axis_rect_1a1c55c4f3bef40cf01b21820316c8469e" kindref="member">height</ref>()*<ref refid="class_q_c_p_bars_group_1a56471d7f548ca6141b7a5bf9629f7ece" kindref="member">mSpacing</ref>;</highlight></codeline>
<codeline lineno="18322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_group_1a4c0521120a97e60bbca37677a37075b6ad369cee6287e0a86e8c2b643a3168c54" kindref="member">stPlotCoords</ref>:</highlight></codeline>
<codeline lineno="18324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(keyCoord);</highlight></codeline>
<codeline lineno="18326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(keyCoord+<ref refid="class_q_c_p_bars_group_1a56471d7f548ca6141b7a5bf9629f7ece" kindref="member">mSpacing</ref>)-keyPixel;</highlight></codeline>
<codeline lineno="18327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="18330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18331"><highlight class="normal"></highlight></codeline>
<codeline lineno="18332"><highlight class="normal"></highlight></codeline>
<codeline lineno="18336"></codeline>
<codeline lineno="18352"><highlight class="normal"><ref refid="class_q_c_p_bar_data_1a8d214eda9ef41bc6da2a908a09623836" kindref="member">QCPBarData::QCPBarData</ref>()<sp/>:</highlight></codeline>
<codeline lineno="18353"><highlight class="normal"><sp/><sp/>key(0),</highlight></codeline>
<codeline lineno="18354"><highlight class="normal"><sp/><sp/>value(0)</highlight></codeline>
<codeline lineno="18355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18357"><highlight class="normal"></highlight></codeline>
<codeline lineno="18361"><highlight class="normal"><ref refid="class_q_c_p_bar_data_1a8d214eda9ef41bc6da2a908a09623836" kindref="member">QCPBarData::QCPBarData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>:</highlight></codeline>
<codeline lineno="18362"><highlight class="normal"><sp/><sp/>key(key),</highlight></codeline>
<codeline lineno="18363"><highlight class="normal"><sp/><sp/>value(value)</highlight></codeline>
<codeline lineno="18364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18366"><highlight class="normal"></highlight></codeline>
<codeline lineno="18367"><highlight class="normal"></highlight></codeline>
<codeline lineno="18371"></codeline>
<codeline lineno="18411"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18412"><highlight class="normal"></highlight></codeline>
<codeline lineno="18427"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18428"><highlight class="normal"></highlight></codeline>
<codeline lineno="18438"><highlight class="normal"><ref refid="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" kindref="member">QCPBars::QCPBars</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="18439"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>(keyAxis,<sp/>valueAxis),</highlight></codeline>
<codeline lineno="18440"><highlight class="normal"><sp/><sp/>mData(new<sp/><ref refid="qcustomplot_8h_1aa846c77472cae93def9f1609d0c57191" kindref="member">QCPBarDataMap</ref>),</highlight></codeline>
<codeline lineno="18441"><highlight class="normal"><sp/><sp/>mWidth(0.75),</highlight></codeline>
<codeline lineno="18442"><highlight class="normal"><sp/><sp/>mWidthType(wtPlotCoords),</highlight></codeline>
<codeline lineno="18443"><highlight class="normal"><sp/><sp/>mBarsGroup(0),</highlight></codeline>
<codeline lineno="18444"><highlight class="normal"><sp/><sp/>mBaseValue(0)</highlight></codeline>
<codeline lineno="18445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>modify<sp/>inherited<sp/>properties<sp/>from<sp/>abstract<sp/>plottable:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18447"><highlight class="normal"><sp/><sp/>mPen.setColor(Qt::blue);</highlight></codeline>
<codeline lineno="18448"><highlight class="normal"><sp/><sp/>mPen.setStyle(Qt::SolidLine);</highlight></codeline>
<codeline lineno="18449"><highlight class="normal"><sp/><sp/>mBrush.setColor(QColor(40,<sp/>50,<sp/>255,<sp/>30));</highlight></codeline>
<codeline lineno="18450"><highlight class="normal"><sp/><sp/>mBrush.setStyle(Qt::SolidPattern);</highlight></codeline>
<codeline lineno="18451"><highlight class="normal"><sp/><sp/>mSelectedPen<sp/>=<sp/>mPen;</highlight></codeline>
<codeline lineno="18452"><highlight class="normal"><sp/><sp/>mSelectedPen.setWidthF(2.5);</highlight></codeline>
<codeline lineno="18453"><highlight class="normal"><sp/><sp/>mSelectedPen.setColor(QColor(80,<sp/>80,<sp/>255));<sp/></highlight><highlight class="comment">//<sp/>lighter<sp/>than<sp/>Qt::blue<sp/>of<sp/>mPen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18454"><highlight class="normal"><sp/><sp/>mSelectedBrush<sp/>=<sp/>mBrush;</highlight></codeline>
<codeline lineno="18455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18456"><highlight class="normal"></highlight></codeline>
<codeline lineno="18457"><highlight class="normal"><ref refid="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" kindref="member">QCPBars::~QCPBars</ref>()</highlight></codeline>
<codeline lineno="18458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18459"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" kindref="member">setBarsGroup</ref>(0);</highlight></codeline>
<codeline lineno="18460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref><sp/>||<sp/><ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>)</highlight></codeline>
<codeline lineno="18461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">connectBars</ref>(<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data(),<sp/><ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data());<sp/></highlight><highlight class="comment">//<sp/>take<sp/>this<sp/>bar<sp/>out<sp/>of<sp/>any<sp/>stacking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="18463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18464"><highlight class="normal"></highlight></codeline>
<codeline lineno="18471"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" kindref="member">QCPBars::setWidth</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="18472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18473"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" kindref="member">mWidth</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_1a42798c38abd5f5db22bd45d77f429625" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="18474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18475"><highlight class="normal"></highlight></codeline>
<codeline lineno="18484"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" kindref="member">QCPBars::setWidthType</ref>(<ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">QCPBars::WidthType</ref><sp/>widthType)</highlight></codeline>
<codeline lineno="18485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18486"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a94dba1309496c7601d01e2c59715cbb3" kindref="member">mWidthType</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_1a8606651ada5804075f6affd04c88dd05" kindref="member">widthType</ref>;</highlight></codeline>
<codeline lineno="18487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18488"><highlight class="normal"></highlight></codeline>
<codeline lineno="18495"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" kindref="member">QCPBars::setBarsGroup</ref>(<ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref><sp/>*barsGroup)</highlight></codeline>
<codeline lineno="18496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>deregister<sp/>at<sp/>old<sp/>group:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>)</highlight></codeline>
<codeline lineno="18499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>-&gt;<ref refid="class_q_c_p_bars_group_1ac7073cdd7b1a40c6cb4b5f908145f8c4" kindref="member">unregisterBars</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18500"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_1a6d6b2b17619a0ba9c7a88bb2b90fc178" kindref="member">barsGroup</ref>;</highlight></codeline>
<codeline lineno="18501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>at<sp/>new<sp/>group:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>)</highlight></codeline>
<codeline lineno="18503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>-&gt;<ref refid="class_q_c_p_bars_group_1a7b00514f19ad58d0bb3fd5246a67fae2" kindref="member">registerBars</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18505"><highlight class="normal"></highlight></codeline>
<codeline lineno="18518"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a574ec7eb7537566df1a28ff085d75623" kindref="member">QCPBars::setBaseValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseValue)</highlight></codeline>
<codeline lineno="18519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18520"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" kindref="member">mBaseValue</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_1a3c8686a74396883fd1da87b2e325b043" kindref="member">baseValue</ref>;</highlight></codeline>
<codeline lineno="18521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18522"><highlight class="normal"></highlight></codeline>
<codeline lineno="18530"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1aa3435aab19e0a49e4e7b41bd36a8d96b" kindref="member">QCPBars::setData</ref>(<ref refid="qcustomplot_8h_1aa846c77472cae93def9f1609d0c57191" kindref="member">QCPBarDataMap</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)</highlight></codeline>
<codeline lineno="18531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref><sp/>==<sp/>data)</highlight></codeline>
<codeline lineno="18533"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18534"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>data<sp/>pointer<sp/>is<sp/>already<sp/>in<sp/>(and<sp/>owned<sp/>by)<sp/>this<sp/>plottable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_bars_1ac05c21de37f677545d06fd852ef8a743" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="18535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)</highlight></codeline>
<codeline lineno="18538"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18539"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref><sp/>=<sp/>*<ref refid="class_q_c_p_bars_1ac05c21de37f677545d06fd852ef8a743" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="18540"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18541"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="18543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_1ac05c21de37f677545d06fd852ef8a743" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="18544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18546"><highlight class="normal"></highlight></codeline>
<codeline lineno="18553"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1aa3435aab19e0a49e4e7b41bd36a8d96b" kindref="member">QCPBars::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value)</highlight></codeline>
<codeline lineno="18554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18555"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="18556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="18557"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>value.size());</highlight></codeline>
<codeline lineno="18558"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bar_data" kindref="compound">QCPBarData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="18559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="18560"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18561"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" kindref="member">key</ref><sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="18562"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="18563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;insertMulti(newData.key,<sp/>newData);</highlight></codeline>
<codeline lineno="18564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18566"><highlight class="normal"></highlight></codeline>
<codeline lineno="18581"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" kindref="member">QCPBars::moveBelow</ref>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars)</highlight></codeline>
<codeline lineno="18582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars<sp/>&amp;&amp;<sp/>(bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()<sp/>||<sp/>bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data()))</highlight></codeline>
<codeline lineno="18585"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18586"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;passed<sp/>QCPBars*<sp/>doesn&apos;t<sp/>have<sp/>same<sp/>key<sp/>and<sp/>value<sp/>axis<sp/>as<sp/>this<sp/>QCPBars&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>stacking:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18590"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">connectBars</ref>(<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data(),<sp/><ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data());<sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>also<sp/>works<sp/>if<sp/>one<sp/>(or<sp/>both)<sp/>of<sp/>them<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18591"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>new<sp/>bar<sp/>given,<sp/>insert<sp/>this<sp/>bar<sp/>below<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars)</highlight></codeline>
<codeline lineno="18593"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>)</highlight></codeline>
<codeline lineno="18595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">connectBars</ref>(bars-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">connectBars</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>bars);</highlight></codeline>
<codeline lineno="18597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18599"><highlight class="normal"></highlight></codeline>
<codeline lineno="18614"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" kindref="member">QCPBars::moveAbove</ref>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*bars)</highlight></codeline>
<codeline lineno="18615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars<sp/>&amp;&amp;<sp/>(bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()<sp/>||<sp/>bars-&gt;<ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data()))</highlight></codeline>
<codeline lineno="18618"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18619"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;passed<sp/>QCPBars*<sp/>doesn&apos;t<sp/>have<sp/>same<sp/>key<sp/>and<sp/>value<sp/>axis<sp/>as<sp/>this<sp/>QCPBars&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>from<sp/>stacking:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18623"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">connectBars</ref>(<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data(),<sp/><ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data());<sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>also<sp/>works<sp/>if<sp/>one<sp/>(or<sp/>both)<sp/>of<sp/>them<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>new<sp/>bar<sp/>given,<sp/>insert<sp/>this<sp/>bar<sp/>above<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars)</highlight></codeline>
<codeline lineno="18626"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bars-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>)</highlight></codeline>
<codeline lineno="18628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">connectBars</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>bars-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data());</highlight></codeline>
<codeline lineno="18629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">connectBars</ref>(bars,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18632"><highlight class="normal"></highlight></codeline>
<codeline lineno="18637"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">QCPBars::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1aa846c77472cae93def9f1609d0c57191" kindref="member">QCPBarDataMap</ref><sp/>&amp;dataMap)</highlight></codeline>
<codeline lineno="18638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18639"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;unite(dataMap);</highlight></codeline>
<codeline lineno="18640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18641"><highlight class="normal"></highlight></codeline>
<codeline lineno="18646"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">QCPBars::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bar_data" kindref="compound">QCPBarData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="18647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18648"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;insertMulti(data.<ref refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" kindref="member">key</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="18649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18650"><highlight class="normal"></highlight></codeline>
<codeline lineno="18655"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">QCPBars::addData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="18656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18657"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bar_data" kindref="compound">QCPBarData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="18658"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" kindref="member">key</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="18659"><highlight class="normal"><sp/><sp/>newData.<ref refid="class_q_c_p_bar_data_1acab57005d8916d61b64e9ddef6113b60" kindref="member">value</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="18660"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;insertMulti(newData.<ref refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" kindref="member">key</ref>,<sp/>newData);</highlight></codeline>
<codeline lineno="18661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18662"><highlight class="normal"></highlight></codeline>
<codeline lineno="18667"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">QCPBars::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;keys,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values)</highlight></codeline>
<codeline lineno="18668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>keys.size();</highlight></codeline>
<codeline lineno="18670"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>values.size());</highlight></codeline>
<codeline lineno="18671"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bar_data" kindref="compound">QCPBarData</ref><sp/>newData;</highlight></codeline>
<codeline lineno="18672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="18673"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18674"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.<ref refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" kindref="member">key</ref><sp/>=<sp/>keys[i];</highlight></codeline>
<codeline lineno="18675"><highlight class="normal"><sp/><sp/><sp/><sp/>newData.value<sp/>=<sp/>values[i];</highlight></codeline>
<codeline lineno="18676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;insertMulti(newData.key,<sp/>newData);</highlight></codeline>
<codeline lineno="18677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18679"><highlight class="normal"></highlight></codeline>
<codeline lineno="18684"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a9d12779a3fad4820aad2c428f368298d" kindref="member">QCPBars::removeDataBefore</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="18685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18686"><highlight class="normal"><sp/><sp/>QCPBarDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="18687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;end()<sp/>&amp;&amp;<sp/>it.key()<sp/>&lt;<sp/>key)</highlight></codeline>
<codeline lineno="18688"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="18689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18690"><highlight class="normal"></highlight></codeline>
<codeline lineno="18695"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a99de6e7abbbf03fb41fa604c7f08aa8b" kindref="member">QCPBars::removeDataAfter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="18696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18698"><highlight class="normal"><sp/><sp/>QCPBarDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;upperBound(key);</highlight></codeline>
<codeline lineno="18699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;end())</highlight></codeline>
<codeline lineno="18700"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="18701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18702"><highlight class="normal"></highlight></codeline>
<codeline lineno="18710"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">QCPBars::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toKey)</highlight></codeline>
<codeline lineno="18711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fromKey<sp/>&gt;=<sp/>toKey<sp/>||<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18713"><highlight class="normal"><sp/><sp/>QCPBarDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;upperBound(fromKey);</highlight></codeline>
<codeline lineno="18714"><highlight class="normal"><sp/><sp/>QCPBarDataMap::iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;upperBound(toKey);</highlight></codeline>
<codeline lineno="18715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="18716"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="18717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18718"><highlight class="normal"></highlight></codeline>
<codeline lineno="18727"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">QCPBars::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="18728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18729"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;remove(key);</highlight></codeline>
<codeline lineno="18730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18731"><highlight class="normal"></highlight></codeline>
<codeline lineno="18736"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" kindref="member">QCPBars::clearData</ref>()</highlight></codeline>
<codeline lineno="18737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18738"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="18739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18740"><highlight class="normal"></highlight></codeline>
<codeline lineno="18741"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18742"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a0d37a9feb1d0baf73ce6e809db214445" kindref="member">QCPBars::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18743"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18744"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="18745"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="18746"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="18747"><highlight class="normal"><sp/><sp/>if<sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="18748"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;rect().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="18750"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18751"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPBarDataMap::ConstIterator<sp/>it;</highlight></codeline>
<codeline lineno="18752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constBegin();<sp/>it<sp/>!=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constEnd();<sp/>++it)</highlight></codeline>
<codeline lineno="18753"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1a1d118a76662cfd691a78c6f573e3f78c" kindref="member">getBarPolygon</ref>(it.value().key,<sp/>it.value().value).boundingRect().contains(pos))</highlight></codeline>
<codeline lineno="18755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="18756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="18759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18760"><highlight class="normal"></highlight></codeline>
<codeline lineno="18761"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a42b894e34dac799f90ff3700706b31df" kindref="member">QCPBars::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="18763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="18765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18766"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18767"><highlight class="normal"><sp/><sp/>QCPBarDataMap::const_iterator<sp/>it,<sp/>lower,<sp/>upperEnd;</highlight></codeline>
<codeline lineno="18768"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1af73d2032be0a64d2692bb76b08c79ec2" kindref="member">getVisibleDataBounds</ref>(lower,<sp/>upperEnd);</highlight></codeline>
<codeline lineno="18769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>lower;<sp/>it<sp/>!=<sp/>upperEnd;<sp/>++it)</highlight></codeline>
<codeline lineno="18770"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>data<sp/>validity<sp/>if<sp/>flag<sp/>set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18772"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCUSTOMPLOT_CHECK_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(it.value().key,<sp/>it.value().value))</highlight></codeline>
<codeline lineno="18774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>point<sp/>at&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it.key()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;of<sp/>drawn<sp/>range<sp/>invalid.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Plottable<sp/>name:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="18775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18776"><highlight class="normal"><sp/><sp/><sp/><sp/>QPolygonF<sp/>barPolygon<sp/>=<sp/><ref refid="class_q_c_p_bars_1a1d118a76662cfd691a78c6f573e3f78c" kindref="member">getBarPolygon</ref>(it.key(),<sp/>it.value().value);</highlight></codeline>
<codeline lineno="18777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>bar<sp/>fill:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>().style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>().color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="18779"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ac08a480155895e674dbfe5a5670e0ff3" kindref="member">applyFillAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="18781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(Qt::NoPen);</highlight></codeline>
<codeline lineno="18782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="18783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolygon(barPolygon);</highlight></codeline>
<codeline lineno="18784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>bar<sp/>line:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().style()<sp/>!=<sp/>Qt::NoPen<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>().color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="18787"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="18789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="18790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="18791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPolyline(barPolygon);</highlight></codeline>
<codeline lineno="18792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18795"><highlight class="normal"></highlight></codeline>
<codeline lineno="18796"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18797"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1ad4fb35d2ab7d2aa460a6612aff3e7a15" kindref="member">QCPBars::drawLegendIcon</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18798"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>filled<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18800"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="18801"><highlight class="normal"><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>);</highlight></codeline>
<codeline lineno="18802"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="18803"><highlight class="normal"><sp/><sp/>QRectF<sp/>r<sp/>=<sp/>QRectF(0,<sp/>0,<sp/>rect.width()*0.67,<sp/>rect.height()*0.67);</highlight></codeline>
<codeline lineno="18804"><highlight class="normal"><sp/><sp/>r.moveCenter(rect.center());</highlight></codeline>
<codeline lineno="18805"><highlight class="normal"><sp/><sp/>painter-&gt;drawRect(r);</highlight></codeline>
<codeline lineno="18806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18807"><highlight class="normal"></highlight></codeline>
<codeline lineno="18822"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1af73d2032be0a64d2692bb76b08c79ec2" kindref="member">QCPBars::getVisibleDataBounds</ref>(QCPBarDataMap::const_iterator<sp/>&amp;lower,<sp/>QCPBarDataMap::const_iterator<sp/>&amp;upperEnd)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18823"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="18825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="18826"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18827"><highlight class="normal"><sp/><sp/><sp/><sp/>lower<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constEnd();</highlight></codeline>
<codeline lineno="18828"><highlight class="normal"><sp/><sp/><sp/><sp/>upperEnd<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constEnd();</highlight></codeline>
<codeline lineno="18829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18830"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18831"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>data<sp/>range<sp/>as<sp/>QMap<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18833"><highlight class="normal"><sp/><sp/>lower<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;lowerBound(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().lower);</highlight></codeline>
<codeline lineno="18834"><highlight class="normal"><sp/><sp/>upperEnd<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;upperBound(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().upper);</highlight></codeline>
<codeline lineno="18835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerPixelBound<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().lower);</highlight></codeline>
<codeline lineno="18836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperPixelBound<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().upper);</highlight></codeline>
<codeline lineno="18837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isVisible<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18838"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>walk<sp/>left<sp/>from<sp/>lbound<sp/>to<sp/>find<sp/>lower<sp/>bar<sp/>that<sp/>actually<sp/>is<sp/>completely<sp/>outside<sp/>visible<sp/>pixel<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18839"><highlight class="normal"><sp/><sp/>QCPBarDataMap::const_iterator<sp/>it<sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="18840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constBegin())</highlight></codeline>
<codeline lineno="18841"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18842"><highlight class="normal"><sp/><sp/><sp/><sp/>--it;</highlight></codeline>
<codeline lineno="18843"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>barBounds<sp/>=<sp/><ref refid="class_q_c_p_bars_1a1d118a76662cfd691a78c6f573e3f78c" kindref="member">getBarPolygon</ref>(it.value().key,<sp/>it.value().value).boundingRect();</highlight></codeline>
<codeline lineno="18844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="18845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isVisible<sp/>=<sp/>((!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.right()<sp/>&gt;=<sp/>lowerPixelBound)<sp/>||<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.left()<sp/>&lt;=<sp/>lowerPixelBound));</highlight></codeline>
<codeline lineno="18846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>keyaxis<sp/>is<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isVisible<sp/>=<sp/>((!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.top()<sp/>&lt;=<sp/>lowerPixelBound)<sp/>||<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.bottom()<sp/>&gt;=<sp/>lowerPixelBound));</highlight></codeline>
<codeline lineno="18848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isVisible)</highlight></codeline>
<codeline lineno="18849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="18850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18852"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>walk<sp/>right<sp/>from<sp/>ubound<sp/>to<sp/>find<sp/>upper<sp/>bar<sp/>that<sp/>actually<sp/>is<sp/>completely<sp/>outside<sp/>visible<sp/>pixel<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18854"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/>upperEnd;</highlight></codeline>
<codeline lineno="18855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="18856"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18857"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>barBounds<sp/>=<sp/><ref refid="class_q_c_p_bars_1a1d118a76662cfd691a78c6f573e3f78c" kindref="member">getBarPolygon</ref>(upperEnd.value().key,<sp/>upperEnd.value().value).boundingRect();</highlight></codeline>
<codeline lineno="18858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="18859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isVisible<sp/>=<sp/>((!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.left()<sp/>&lt;=<sp/>upperPixelBound)<sp/>||<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.right()<sp/>&gt;=<sp/>upperPixelBound));</highlight></codeline>
<codeline lineno="18860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>keyaxis<sp/>is<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isVisible<sp/>=<sp/>((!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.bottom()<sp/>&gt;=<sp/>upperPixelBound)<sp/>||<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>&amp;&amp;<sp/>barBounds.top()<sp/>&lt;=<sp/>upperPixelBound));</highlight></codeline>
<codeline lineno="18862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isVisible)</highlight></codeline>
<codeline lineno="18863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upperEnd<sp/>=<sp/>it+1;</highlight></codeline>
<codeline lineno="18864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18866"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="18867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18869"><highlight class="normal"></highlight></codeline>
<codeline lineno="18876"><highlight class="normal">QPolygonF<sp/><ref refid="class_q_c_p_bars_1a1d118a76662cfd691a78c6f573e3f78c" kindref="member">QCPBars::getBarPolygon</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18877"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18878"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="18879"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="18880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPolygonF();<sp/>}</highlight></codeline>
<codeline lineno="18881"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18882"><highlight class="normal"><sp/><sp/>QPolygonF<sp/>result;</highlight></codeline>
<codeline lineno="18883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerPixelWidth,<sp/>upperPixelWidth;</highlight></codeline>
<codeline lineno="18884"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_bars_1a794eefe4fb29b9b40583654ccbf460dc" kindref="member">getPixelWidth</ref>(key,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="18885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>base<sp/>=<sp/><ref refid="class_q_c_p_bars_1ae9b0c2fad9f29030c84bb6e62a4b605f" kindref="member">getStackedBaseValue</ref>(key,<sp/>value<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="18886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>basePixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(base);</highlight></codeline>
<codeline lineno="18887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valuePixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(base+value);</highlight></codeline>
<codeline lineno="18888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(key);</highlight></codeline>
<codeline lineno="18889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>)</highlight></codeline>
<codeline lineno="18890"><highlight class="normal"><sp/><sp/><sp/><sp/>keyPixel<sp/>+=<sp/><ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>-&gt;<ref refid="class_q_c_p_bars_group_1a8e2ca6002e7bab49670144d048a2bcc9" kindref="member">keyPixelOffset</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="18891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="18892"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18893"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(keyPixel+lowerPixelWidth,<sp/>basePixel);</highlight></codeline>
<codeline lineno="18894"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(keyPixel+lowerPixelWidth,<sp/>valuePixel);</highlight></codeline>
<codeline lineno="18895"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(keyPixel+upperPixelWidth,<sp/>valuePixel);</highlight></codeline>
<codeline lineno="18896"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(keyPixel+upperPixelWidth,<sp/>basePixel);</highlight></codeline>
<codeline lineno="18897"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18898"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18899"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(basePixel,<sp/>keyPixel+lowerPixelWidth);</highlight></codeline>
<codeline lineno="18900"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(valuePixel,<sp/>keyPixel+lowerPixelWidth);</highlight></codeline>
<codeline lineno="18901"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(valuePixel,<sp/>keyPixel+upperPixelWidth);</highlight></codeline>
<codeline lineno="18902"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>&lt;&lt;<sp/>QPointF(basePixel,<sp/>keyPixel+upperPixelWidth);</highlight></codeline>
<codeline lineno="18903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="18905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18906"><highlight class="normal"></highlight></codeline>
<codeline lineno="18916"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a794eefe4fb29b9b40583654ccbf460dc" kindref="member">QCPBars::getPixelWidth</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;upper)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18917"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1a94dba1309496c7601d01e2c59715cbb3" kindref="member">mWidthType</ref>)</highlight></codeline>
<codeline lineno="18919"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649ab74315c9aa77df593c58dd25dfc0de35" kindref="member">wtAbsolute</ref>:</highlight></codeline>
<codeline lineno="18921"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" kindref="member">mWidth</ref>*0.5;</highlight></codeline>
<codeline lineno="18923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>-upper;</highlight></codeline>
<codeline lineno="18924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>^<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Vertical)))</highlight></codeline>
<codeline lineno="18925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="18926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649a90bc09899361ad3422ff277f7c790ffe" kindref="member">wtAxisRectRatio</ref>:</highlight></codeline>
<codeline lineno="18929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect())</highlight></codeline>
<codeline lineno="18931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="18933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;width()*<ref refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" kindref="member">mWidth</ref>*0.5;</highlight></codeline>
<codeline lineno="18934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;height()*<ref refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" kindref="member">mWidth</ref>*0.5;</highlight></codeline>
<codeline lineno="18936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>-upper;</highlight></codeline>
<codeline lineno="18937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;rangeReversed()<sp/>^<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;orientation()<sp/>==<sp/>Qt::Vertical)))</highlight></codeline>
<codeline lineno="18938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qSwap(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="18939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>key<sp/>axis<sp/>or<sp/>axis<sp/>rect<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649aad3cc60ae1bfb1160a30237bee9eaf10" kindref="member">wtPlotCoords</ref>:</highlight></codeline>
<codeline lineno="18944"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)</highlight></codeline>
<codeline lineno="18946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(key);</highlight></codeline>
<codeline lineno="18948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(key+<ref refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" kindref="member">mWidth</ref>*0.5)-keyPixel;</highlight></codeline>
<codeline lineno="18949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(key-<ref refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" kindref="member">mWidth</ref>*0.5)-keyPixel;</highlight></codeline>
<codeline lineno="18950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>qSwap(lower,<sp/>higher)<sp/>when<sp/>range<sp/>reversed,<sp/>because<sp/>higher/lower<sp/>are<sp/>gained<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinate<sp/>transform<sp/>which<sp/>includes<sp/>range<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>key<sp/>axis<sp/>defined&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18958"><highlight class="normal"></highlight></codeline>
<codeline lineno="18968"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1ae9b0c2fad9f29030c84bb6e62a4b605f" kindref="member">QCPBars::getStackedBaseValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positive)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="18969"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>)</highlight></codeline>
<codeline lineno="18971"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>mBaseValue<sp/>here<sp/>because<sp/>only<sp/>base<sp/>value<sp/>of<sp/>bottom-most<sp/>bar<sp/>has<sp/>meaning<sp/>in<sp/>a<sp/>bar<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>bars<sp/>of<sp/>mBarBelow<sp/>that<sp/>are<sp/>approximately<sp/>at<sp/>key<sp/>and<sp/>find<sp/>largest<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>qAbs(key)*1e-6;<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>safe<sp/>even<sp/>when<sp/>changed<sp/>to<sp/>use<sp/>float<sp/>at<sp/>some<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="18976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epsilon<sp/>=<sp/>1e-6;</highlight></codeline>
<codeline lineno="18977"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPBarDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data()-&gt;mData-&gt;lowerBound(key-epsilon);</highlight></codeline>
<codeline lineno="18978"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPBarDataMap::const_iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data()-&gt;mData-&gt;upperBound(key+epsilon);</highlight></codeline>
<codeline lineno="18979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="18980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((positive<sp/>&amp;&amp;<sp/>it.value().value<sp/>&gt;<sp/>max)<sp/>||</highlight></codeline>
<codeline lineno="18982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!positive<sp/>&amp;&amp;<sp/>it.value().value<sp/>&lt;<sp/>max))</highlight></codeline>
<codeline lineno="18983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>it.value().value;</highlight></codeline>
<codeline lineno="18984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="18985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recurse<sp/>down<sp/>the<sp/>bar-stack<sp/>to<sp/>find<sp/>the<sp/>total<sp/>height:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max<sp/>+<sp/><ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data()-&gt;getStackedBaseValue(key,<sp/>positive);</highlight></codeline>
<codeline lineno="18988"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" kindref="member">mBaseValue</ref>;</highlight></codeline>
<codeline lineno="18990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18991"><highlight class="normal"></highlight></codeline>
<codeline lineno="19000"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" kindref="member">QCPBars::connectBars</ref>(<ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*lower,<sp/><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref><sp/>*upper)</highlight></codeline>
<codeline lineno="19001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lower<sp/>&amp;&amp;<sp/>!upper)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19003"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lower)<sp/></highlight><highlight class="comment">//<sp/>disconnect<sp/>upper<sp/>at<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19005"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disconnect<sp/>old<sp/>bar<sp/>below<sp/>upper:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref><sp/>&amp;&amp;<sp/>upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data()-&gt;mBarAbove.data()<sp/>==<sp/>upper)</highlight></codeline>
<codeline lineno="19008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data()-&gt;mBarAbove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19009"><highlight class="normal"><sp/><sp/><sp/><sp/>upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19010"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!upper)<sp/></highlight><highlight class="comment">//<sp/>disconnect<sp/>lower<sp/>at<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19011"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disconnect<sp/>old<sp/>bar<sp/>above<sp/>lower:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref><sp/>&amp;&amp;<sp/>lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data()-&gt;mBarBelow.data()<sp/>==<sp/>lower)</highlight></codeline>
<codeline lineno="19014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data()-&gt;mBarBelow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19015"><highlight class="normal"><sp/><sp/><sp/><sp/>lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19016"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>lower<sp/>and<sp/>upper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19017"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disconnect<sp/>old<sp/>bar<sp/>above<sp/>lower:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref><sp/>&amp;&amp;<sp/>lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data()-&gt;mBarBelow.data()<sp/>==<sp/>lower)</highlight></codeline>
<codeline lineno="19020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref>.data()-&gt;mBarBelow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disconnect<sp/>old<sp/>bar<sp/>below<sp/>upper:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref><sp/>&amp;&amp;<sp/>upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data()-&gt;mBarAbove.data()<sp/>==<sp/>upper)</highlight></codeline>
<codeline lineno="19023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref>.data()-&gt;mBarAbove<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19024"><highlight class="normal"><sp/><sp/><sp/><sp/>lower-&gt;<ref refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" kindref="member">mBarAbove</ref><sp/>=<sp/>upper;</highlight></codeline>
<codeline lineno="19025"><highlight class="normal"><sp/><sp/><sp/><sp/>upper-&gt;<ref refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" kindref="member">mBarBelow</ref><sp/>=<sp/>lower;</highlight></codeline>
<codeline lineno="19026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19028"><highlight class="normal"></highlight></codeline>
<codeline lineno="19029"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19030"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_bars_1a93cfdc8a535f36aeb087acca49c00662" kindref="member">QCPBars::getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19031"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19032"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="19033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19035"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="19037"><highlight class="normal"><sp/><sp/>QCPBarDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="19038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="19039"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19040"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().key;</highlight></codeline>
<codeline lineno="19041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref><sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)<sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="19042"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="19044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="19046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="19049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="19051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19054"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="19055"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19056"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>exact<sp/>range<sp/>of<sp/>bars<sp/>by<sp/>including<sp/>bar<sp/>width<sp/>and<sp/>barsgroup<sp/>offset:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveLower<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)</highlight></codeline>
<codeline lineno="19058"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerPixelWidth,<sp/>upperPixelWidth,<sp/>keyPixel;</highlight></codeline>
<codeline lineno="19060"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a794eefe4fb29b9b40583654ccbf460dc" kindref="member">getPixelWidth</ref>(range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="19061"><highlight class="normal"><sp/><sp/><sp/><sp/>keyPixel<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)<sp/>+<sp/>lowerPixelWidth;</highlight></codeline>
<codeline lineno="19062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>)</highlight></codeline>
<codeline lineno="19063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>keyPixel<sp/>+=<sp/><ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>-&gt;<ref refid="class_q_c_p_bars_group_1a8e2ca6002e7bab49670144d048a2bcc9" kindref="member">keyPixelOffset</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>);</highlight></codeline>
<codeline lineno="19064"><highlight class="normal"><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;pixelToCoord(keyPixel);</highlight></codeline>
<codeline lineno="19065"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveUpper<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)</highlight></codeline>
<codeline lineno="19067"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerPixelWidth,<sp/>upperPixelWidth,<sp/>keyPixel;</highlight></codeline>
<codeline lineno="19069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_bars_1a794eefe4fb29b9b40583654ccbf460dc" kindref="member">getPixelWidth</ref>(range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>,<sp/>lowerPixelWidth,<sp/>upperPixelWidth);</highlight></codeline>
<codeline lineno="19070"><highlight class="normal"><sp/><sp/><sp/><sp/>keyPixel<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)<sp/>+<sp/>upperPixelWidth;</highlight></codeline>
<codeline lineno="19071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>)</highlight></codeline>
<codeline lineno="19072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>keyPixel<sp/>+=<sp/><ref refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" kindref="member">mBarsGroup</ref>-&gt;<ref refid="class_q_c_p_bars_group_1a8e2ca6002e7bab49670144d048a2bcc9" kindref="member">keyPixelOffset</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>);</highlight></codeline>
<codeline lineno="19073"><highlight class="normal"><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;pixelToCoord(keyPixel);</highlight></codeline>
<codeline lineno="19074"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19075"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="19076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="19077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19078"><highlight class="normal"></highlight></codeline>
<codeline lineno="19079"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19080"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_bars_1ada96e20309570d1488c165596cb2647f" kindref="member">QCPBars::getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19081"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19082"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="19083"><highlight class="normal"><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" kindref="member">mBaseValue</ref>;</highlight></codeline>
<codeline lineno="19084"><highlight class="normal"><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/><ref refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" kindref="member">mBaseValue</ref>;</highlight></codeline>
<codeline lineno="19085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>true,<sp/>because<sp/>baseValue<sp/>should<sp/>always<sp/>be<sp/>visible<sp/>in<sp/>bar<sp/>charts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>true,<sp/>because<sp/>baseValue<sp/>should<sp/>always<sp/>be<sp/>visible<sp/>in<sp/>bar<sp/>charts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="19088"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19089"><highlight class="normal"><sp/><sp/>QCPBarDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="19090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="19091"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19092"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().value<sp/>+<sp/><ref refid="class_q_c_p_bars_1ae9b0c2fad9f29030c84bb6e62a4b605f" kindref="member">getStackedBaseValue</ref>(it.value().key,<sp/>it.value().value<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="19093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref><sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)<sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="19094"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="19096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="19098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="19101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="19103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19106"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="19107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19109"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>return<sp/>true<sp/>because<sp/>bar<sp/>charts<sp/>always<sp/>have<sp/>the<sp/>0-line<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="19111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19112"><highlight class="normal"></highlight></codeline>
<codeline lineno="19113"><highlight class="normal"></highlight></codeline>
<codeline lineno="19117"></codeline>
<codeline lineno="19180"><highlight class="normal"><ref refid="class_q_c_p_statistical_box_1a75c2b3e7fcd0741cc981693a2ba63b27" kindref="member">QCPStatisticalBox::QCPStatisticalBox</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="19181"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>(keyAxis,<sp/>valueAxis),</highlight></codeline>
<codeline lineno="19182"><highlight class="normal"><sp/><sp/>mKey(0),</highlight></codeline>
<codeline lineno="19183"><highlight class="normal"><sp/><sp/>mMinimum(0),</highlight></codeline>
<codeline lineno="19184"><highlight class="normal"><sp/><sp/>mLowerQuartile(0),</highlight></codeline>
<codeline lineno="19185"><highlight class="normal"><sp/><sp/>mMedian(0),</highlight></codeline>
<codeline lineno="19186"><highlight class="normal"><sp/><sp/>mUpperQuartile(0),</highlight></codeline>
<codeline lineno="19187"><highlight class="normal"><sp/><sp/>mMaximum(0)</highlight></codeline>
<codeline lineno="19188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19189"><highlight class="normal"><sp/><sp/>setOutlierStyle(<ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>(<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a7c92a110880d0ef2170dff3a5b4f7779" kindref="member">QCPScatterStyle::ssCircle</ref>,<sp/>Qt::blue,<sp/>6));</highlight></codeline>
<codeline lineno="19190"><highlight class="normal"><sp/><sp/>setWhiskerWidth(0.2);</highlight></codeline>
<codeline lineno="19191"><highlight class="normal"><sp/><sp/>setWidth(0.5);</highlight></codeline>
<codeline lineno="19192"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19193"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="19194"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,<sp/>2.5));</highlight></codeline>
<codeline lineno="19195"><highlight class="normal"><sp/><sp/>setMedianPen(QPen(Qt::black,<sp/>3,<sp/>Qt::SolidLine,<sp/>Qt::FlatCap));</highlight></codeline>
<codeline lineno="19196"><highlight class="normal"><sp/><sp/>setWhiskerPen(QPen(Qt::black,<sp/>0,<sp/>Qt::DashLine,<sp/>Qt::FlatCap));</highlight></codeline>
<codeline lineno="19197"><highlight class="normal"><sp/><sp/>setWhiskerBarPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="19198"><highlight class="normal"><sp/><sp/>setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="19199"><highlight class="normal"><sp/><sp/>setSelectedBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="19200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19201"><highlight class="normal"></highlight></codeline>
<codeline lineno="19205"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a84a1c6d34b2f9af40bca0c527d51e97e" kindref="member">QCPStatisticalBox::setKey</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="19206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19207"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref><sp/>=<sp/><ref refid="class_q_c_p_statistical_box_1a767af754f39872d6308b900a0d1758ca" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="19208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19209"><highlight class="normal"></highlight></codeline>
<codeline lineno="19216"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a84ff7cc61ba44890f0c3e0c99c19941e" kindref="member">QCPStatisticalBox::setMinimum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="19217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19218"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a7143ece4e7e5f9ac010739fbc390bf0c" kindref="member">mMinimum</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="19219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19220"><highlight class="normal"></highlight></codeline>
<codeline lineno="19228"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a680941af5e23d902013962fa67223f9e" kindref="member">QCPStatisticalBox::setLowerQuartile</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="19229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19230"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1acac86cac93d9fa3d820b5aaa04ed96f6" kindref="member">mLowerQuartile</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="19231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19232"><highlight class="normal"></highlight></codeline>
<codeline lineno="19240"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a65970e77a897da4ecb4b15300868aad3" kindref="member">QCPStatisticalBox::setMedian</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="19241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19242"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1ae43287ca13c8166bde2ac19bf0969d23" kindref="member">mMedian</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="19243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19244"><highlight class="normal"></highlight></codeline>
<codeline lineno="19252"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a65a1375f941c5a2077b5201229e89346" kindref="member">QCPStatisticalBox::setUpperQuartile</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="19253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19254"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a865afbcca332ee851aa45807381bc80e" kindref="member">mUpperQuartile</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="19255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19256"><highlight class="normal"></highlight></codeline>
<codeline lineno="19263"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1acec5ad1901f00f2c5387cfb4d9787eb3" kindref="member">QCPStatisticalBox::setMaximum</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="19264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19265"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a16266f1e0e4e8e95b5d141c49479ef2e" kindref="member">mMaximum</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="19266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19267"><highlight class="normal"></highlight></codeline>
<codeline lineno="19275"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1af9bc09620e0bf93bf444ee35e5800d1d" kindref="member">QCPStatisticalBox::setOutliers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;values)</highlight></codeline>
<codeline lineno="19276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19277"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a415e2f77a89396c2af999afe027bdf6c" kindref="member">mOutliers</ref><sp/>=<sp/>values;</highlight></codeline>
<codeline lineno="19278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19279"><highlight class="normal"></highlight></codeline>
<codeline lineno="19285"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1adf50c57b635edb12470c0e4a986aff37" kindref="member">QCPStatisticalBox::setData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimum,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerQuartile,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>median,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperQuartile,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maximum)</highlight></codeline>
<codeline lineno="19286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19287"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a84a1c6d34b2f9af40bca0c527d51e97e" kindref="member">setKey</ref>(key);</highlight></codeline>
<codeline lineno="19288"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a84ff7cc61ba44890f0c3e0c99c19941e" kindref="member">setMinimum</ref>(minimum);</highlight></codeline>
<codeline lineno="19289"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a680941af5e23d902013962fa67223f9e" kindref="member">setLowerQuartile</ref>(lowerQuartile);</highlight></codeline>
<codeline lineno="19290"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a65970e77a897da4ecb4b15300868aad3" kindref="member">setMedian</ref>(median);</highlight></codeline>
<codeline lineno="19291"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a65a1375f941c5a2077b5201229e89346" kindref="member">setUpperQuartile</ref>(upperQuartile);</highlight></codeline>
<codeline lineno="19292"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1acec5ad1901f00f2c5387cfb4d9787eb3" kindref="member">setMaximum</ref>(maximum);</highlight></codeline>
<codeline lineno="19293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19294"><highlight class="normal"></highlight></codeline>
<codeline lineno="19300"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a0b62775bd67301b1eba5c785f2b26f14" kindref="member">QCPStatisticalBox::setWidth</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="19301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19302"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref><sp/>=<sp/><ref refid="class_q_c_p_statistical_box_1a0733a7bd575fc5929ce6d507bcc2a04c" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="19303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19304"><highlight class="normal"></highlight></codeline>
<codeline lineno="19310"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1adf378812446bd66f34d1f7f293d991cd" kindref="member">QCPStatisticalBox::setWhiskerWidth</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="19311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19312"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a4d166474f845d5db626e8b11a0815a6f" kindref="member">mWhiskerWidth</ref><sp/>=<sp/><ref refid="class_q_c_p_statistical_box_1a0733a7bd575fc5929ce6d507bcc2a04c" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="19313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19314"><highlight class="normal"></highlight></codeline>
<codeline lineno="19323"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a4a5034cb3b9b040444df05ab1684620b" kindref="member">QCPStatisticalBox::setWhiskerPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="19324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19325"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a25b7552499f0f090fcff02858b2265a5" kindref="member">mWhiskerPen</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="19326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19327"><highlight class="normal"></highlight></codeline>
<codeline lineno="19334"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1aa8d3e503897788e1abf68dc74b5f147f" kindref="member">QCPStatisticalBox::setWhiskerBarPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="19335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19336"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1aa719b1d722a9f82364df1497a6dc1da8" kindref="member">mWhiskerBarPen</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="19337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19338"><highlight class="normal"></highlight></codeline>
<codeline lineno="19342"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a7260ac55b669f5d0a74f16d5ca84c52c" kindref="member">QCPStatisticalBox::setMedianPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="19343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19344"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a1af5b601049c575f778ae270f40c9443" kindref="member">mMedianPen</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="19345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19346"><highlight class="normal"></highlight></codeline>
<codeline lineno="19352"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1ad5241943422eb8e58360a97e99ad6aa7" kindref="member">QCPStatisticalBox::setOutlierStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref><sp/>&amp;style)</highlight></codeline>
<codeline lineno="19353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19354"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1ae102e4187e1e6ba1f2df0f622b5171a4" kindref="member">mOutlierStyle</ref><sp/>=<sp/>style;</highlight></codeline>
<codeline lineno="19355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19356"><highlight class="normal"></highlight></codeline>
<codeline lineno="19357"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a19112994449df0c20287858436cc68e3" kindref="member">QCPStatisticalBox::clearData</ref>()</highlight></codeline>
<codeline lineno="19359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19360"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1af9bc09620e0bf93bf444ee35e5800d1d" kindref="member">setOutliers</ref>(QVector&lt;double&gt;());</highlight></codeline>
<codeline lineno="19361"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a84a1c6d34b2f9af40bca0c527d51e97e" kindref="member">setKey</ref>(0);</highlight></codeline>
<codeline lineno="19362"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a84ff7cc61ba44890f0c3e0c99c19941e" kindref="member">setMinimum</ref>(0);</highlight></codeline>
<codeline lineno="19363"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a680941af5e23d902013962fa67223f9e" kindref="member">setLowerQuartile</ref>(0);</highlight></codeline>
<codeline lineno="19364"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a65970e77a897da4ecb4b15300868aad3" kindref="member">setMedian</ref>(0);</highlight></codeline>
<codeline lineno="19365"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a65a1375f941c5a2077b5201229e89346" kindref="member">setUpperQuartile</ref>(0);</highlight></codeline>
<codeline lineno="19366"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1acec5ad1901f00f2c5387cfb4d9787eb3" kindref="member">setMaximum</ref>(0);</highlight></codeline>
<codeline lineno="19367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19368"><highlight class="normal"></highlight></codeline>
<codeline lineno="19369"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19370"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a7d3ac843dc48a085740fdfc4319a89cc" kindref="member">QCPStatisticalBox::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19371"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19372"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="19373"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="19374"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="19375"><highlight class="normal"><sp/><sp/>if<sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="19376"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;rect().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="19378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posKey,<sp/>posValue;</highlight></codeline>
<codeline lineno="19380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a10408828446e9e0681c46d65120f382e" kindref="member">pixelsToCoords</ref>(pos,<sp/>posKey,<sp/>posValue);</highlight></codeline>
<codeline lineno="19381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quartile<sp/>box:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>keyRange(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="19383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>valueRange(<ref refid="class_q_c_p_statistical_box_1acac86cac93d9fa3d820b5aaa04ed96f6" kindref="member">mLowerQuartile</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a865afbcca332ee851aa45807381bc80e" kindref="member">mUpperQuartile</ref>);</highlight></codeline>
<codeline lineno="19384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyRange.contains(posKey)<sp/>&amp;&amp;<sp/>valueRange.contains(posValue))</highlight></codeline>
<codeline lineno="19385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="19386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min/max<sp/>whiskers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(<ref refid="class_q_c_p_statistical_box_1a7143ece4e7e5f9ac010739fbc390bf0c" kindref="member">mMinimum</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a16266f1e0e4e8e95b5d141c49479ef2e" kindref="member">mMaximum</ref>).contains(posValue))</highlight></codeline>
<codeline lineno="19389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qAbs(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>)-<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;coordToPixel(posKey));</highlight></codeline>
<codeline lineno="19390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="19392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19393"><highlight class="normal"></highlight></codeline>
<codeline lineno="19394"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a753b62761217dd6b92f8a29e286a1317" kindref="member">QCPStatisticalBox::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="19396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="19398"><highlight class="normal"></highlight></codeline>
<codeline lineno="19399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>data<sp/>validity<sp/>if<sp/>flag<sp/>set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCUSTOMPLOT_CHECK_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1ae43287ca13c8166bde2ac19bf0969d23" kindref="member">mMedian</ref>)<sp/>||</highlight></codeline>
<codeline lineno="19402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(<ref refid="class_q_c_p_statistical_box_1acac86cac93d9fa3d820b5aaa04ed96f6" kindref="member">mLowerQuartile</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a865afbcca332ee851aa45807381bc80e" kindref="member">mUpperQuartile</ref>)<sp/>||</highlight></codeline>
<codeline lineno="19403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(<ref refid="class_q_c_p_statistical_box_1a7143ece4e7e5f9ac010739fbc390bf0c" kindref="member">mMinimum</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a16266f1e0e4e8e95b5d141c49479ef2e" kindref="member">mMaximum</ref>))</highlight></codeline>
<codeline lineno="19404"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>point<sp/>at&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;of<sp/>drawn<sp/>range<sp/>has<sp/>invalid<sp/>data.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Plottable<sp/>name:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="19405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_statistical_box_1a415e2f77a89396c2af999afe027bdf6c" kindref="member">mOutliers</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="19406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" kindref="member">QCP::isInvalidData</ref>(<ref refid="class_q_c_p_statistical_box_1a415e2f77a89396c2af999afe027bdf6c" kindref="member">mOutliers</ref>.at(i)))</highlight></codeline>
<codeline lineno="19407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>point<sp/>outlier<sp/>at&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;of<sp/>drawn<sp/>range<sp/>invalid.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Plottable<sp/>name:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_abstract_plottable_1a1affc1972938e4364a9325e4e4e4dcea" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="19408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19409"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19410"><highlight class="normal"><sp/><sp/>QRectF<sp/>quartileBox;</highlight></codeline>
<codeline lineno="19411"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a9ad0abdb154fefb04e9872f0db8e2ec7" kindref="member">drawQuartileBox</ref>(painter,<sp/>&amp;quartileBox);</highlight></codeline>
<codeline lineno="19412"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19413"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a8fd6821ee6fecbfa04444c9062912abd" kindref="member">save</ref>();</highlight></codeline>
<codeline lineno="19414"><highlight class="normal"><sp/><sp/>painter-&gt;setClipRect(quartileBox,<sp/>Qt::IntersectClip);</highlight></codeline>
<codeline lineno="19415"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a16fef8bc19e5a09d82033edcfe919495" kindref="member">drawMedian</ref>(painter);</highlight></codeline>
<codeline lineno="19416"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a64908e6298d5bbd83457dc987cc3a022" kindref="member">restore</ref>();</highlight></codeline>
<codeline lineno="19417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19418"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a6f8d093ec7e404529388d02da4c72b34" kindref="member">drawWhiskers</ref>(painter);</highlight></codeline>
<codeline lineno="19419"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1a60ebb332a497f51ace837767db5105b9" kindref="member">drawOutliers</ref>(painter);</highlight></codeline>
<codeline lineno="19420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19421"><highlight class="normal"></highlight></codeline>
<codeline lineno="19422"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a51764ed423fa02d3ef63f6848851ec33" kindref="member">QCPStatisticalBox::drawLegendIcon</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>filled<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19426"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="19427"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="19428"><highlight class="normal"><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>);</highlight></codeline>
<codeline lineno="19429"><highlight class="normal"><sp/><sp/>QRectF<sp/>r<sp/>=<sp/>QRectF(0,<sp/>0,<sp/>rect.width()*0.67,<sp/>rect.height()*0.67);</highlight></codeline>
<codeline lineno="19430"><highlight class="normal"><sp/><sp/>r.moveCenter(rect.center());</highlight></codeline>
<codeline lineno="19431"><highlight class="normal"><sp/><sp/>painter-&gt;drawRect(r);</highlight></codeline>
<codeline lineno="19432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19433"><highlight class="normal"></highlight></codeline>
<codeline lineno="19440"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a9ad0abdb154fefb04e9872f0db8e2ec7" kindref="member">QCPStatisticalBox::drawQuartileBox</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/>QRectF<sp/>*quartileBox)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19442"><highlight class="normal"><sp/><sp/>QRectF<sp/>box;</highlight></codeline>
<codeline lineno="19443"><highlight class="normal"><sp/><sp/>box.setTopLeft(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a865afbcca332ee851aa45807381bc80e" kindref="member">mUpperQuartile</ref>));</highlight></codeline>
<codeline lineno="19444"><highlight class="normal"><sp/><sp/>box.setBottomRight(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1acac86cac93d9fa3d820b5aaa04ed96f6" kindref="member">mLowerQuartile</ref>));</highlight></codeline>
<codeline lineno="19445"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="19446"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a19276ed2382a3a06464417b8788b1451" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="19447"><highlight class="normal"><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1ae74c123832da180c17e22203e748d9b7" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="19448"><highlight class="normal"><sp/><sp/>painter-&gt;drawRect(box);</highlight></codeline>
<codeline lineno="19449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quartileBox)</highlight></codeline>
<codeline lineno="19450"><highlight class="normal"><sp/><sp/><sp/><sp/>*quartileBox<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="19451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19452"><highlight class="normal"></highlight></codeline>
<codeline lineno="19457"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a16fef8bc19e5a09d82033edcfe919495" kindref="member">QCPStatisticalBox::drawMedian</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19458"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19459"><highlight class="normal"><sp/><sp/>QLineF<sp/>medianLine;</highlight></codeline>
<codeline lineno="19460"><highlight class="normal"><sp/><sp/>medianLine.setP1(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1ae43287ca13c8166bde2ac19bf0969d23" kindref="member">mMedian</ref>));</highlight></codeline>
<codeline lineno="19461"><highlight class="normal"><sp/><sp/>medianLine.setP2(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1ae43287ca13c8166bde2ac19bf0969d23" kindref="member">mMedian</ref>));</highlight></codeline>
<codeline lineno="19462"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="19463"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_statistical_box_1a1af5b601049c575f778ae270f40c9443" kindref="member">mMedianPen</ref>);</highlight></codeline>
<codeline lineno="19464"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(medianLine);</highlight></codeline>
<codeline lineno="19465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19466"><highlight class="normal"></highlight></codeline>
<codeline lineno="19471"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a6f8d093ec7e404529388d02da4c72b34" kindref="member">QCPStatisticalBox::drawWhiskers</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19472"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19473"><highlight class="normal"><sp/><sp/>QLineF<sp/>backboneMin,<sp/>backboneMax,<sp/>barMin,<sp/>barMax;</highlight></codeline>
<codeline lineno="19474"><highlight class="normal"><sp/><sp/>backboneMax.setPoints(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a865afbcca332ee851aa45807381bc80e" kindref="member">mUpperQuartile</ref>),<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a16266f1e0e4e8e95b5d141c49479ef2e" kindref="member">mMaximum</ref>));</highlight></codeline>
<codeline lineno="19475"><highlight class="normal"><sp/><sp/>backboneMin.setPoints(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1acac86cac93d9fa3d820b5aaa04ed96f6" kindref="member">mLowerQuartile</ref>),<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a7143ece4e7e5f9ac010739fbc390bf0c" kindref="member">mMinimum</ref>));</highlight></codeline>
<codeline lineno="19476"><highlight class="normal"><sp/><sp/>barMax.setPoints(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1a4d166474f845d5db626e8b11a0815a6f" kindref="member">mWhiskerWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a16266f1e0e4e8e95b5d141c49479ef2e" kindref="member">mMaximum</ref>),<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1a4d166474f845d5db626e8b11a0815a6f" kindref="member">mWhiskerWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a16266f1e0e4e8e95b5d141c49479ef2e" kindref="member">mMaximum</ref>));</highlight></codeline>
<codeline lineno="19477"><highlight class="normal"><sp/><sp/>barMin.setPoints(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1a4d166474f845d5db626e8b11a0815a6f" kindref="member">mWhiskerWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a7143ece4e7e5f9ac010739fbc390bf0c" kindref="member">mMinimum</ref>),<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1a4d166474f845d5db626e8b11a0815a6f" kindref="member">mWhiskerWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a7143ece4e7e5f9ac010739fbc390bf0c" kindref="member">mMinimum</ref>));</highlight></codeline>
<codeline lineno="19478"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1af687bfe6160255960558eb71f1f81e73" kindref="member">applyErrorBarsAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="19479"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_statistical_box_1a25b7552499f0f090fcff02858b2265a5" kindref="member">mWhiskerPen</ref>);</highlight></codeline>
<codeline lineno="19480"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(backboneMin);</highlight></codeline>
<codeline lineno="19481"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(backboneMax);</highlight></codeline>
<codeline lineno="19482"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_statistical_box_1aa719b1d722a9f82364df1497a6dc1da8" kindref="member">mWhiskerBarPen</ref>);</highlight></codeline>
<codeline lineno="19483"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(barMin);</highlight></codeline>
<codeline lineno="19484"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(barMax);</highlight></codeline>
<codeline lineno="19485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19486"><highlight class="normal"></highlight></codeline>
<codeline lineno="19491"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_statistical_box_1a60ebb332a497f51ace837767db5105b9" kindref="member">QCPStatisticalBox::drawOutliers</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19492"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19493"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a753272ee225a62827e90c3e1e78de4b1" kindref="member">applyScattersAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="19494"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_statistical_box_1ae102e4187e1e6ba1f2df0f622b5171a4" kindref="member">mOutlierStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a81817dfd404635f211e6ff2a04657d36" kindref="member">applyTo</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="19495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_q_c_p_statistical_box_1a415e2f77a89396c2af999afe027bdf6c" kindref="member">mOutliers</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="19496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_statistical_box_1ae102e4187e1e6ba1f2df0f622b5171a4" kindref="member">mOutlierStyle</ref>.<ref refid="class_q_c_p_scatter_style_1a992d531ac471ec2b29bdec6aeb400a06" kindref="member">drawShape</ref>(painter,<sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a415e2f77a89396c2af999afe027bdf6c" kindref="member">mOutliers</ref>.at(i)));</highlight></codeline>
<codeline lineno="19497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19498"><highlight class="normal"></highlight></codeline>
<codeline lineno="19499"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19500"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_statistical_box_1ad700fdce0f456dd22a3679d61e9896a4" kindref="member">QCPStatisticalBox::getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19501"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19502"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>)</highlight></codeline>
<codeline lineno="19504"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="19506"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref>)</highlight></codeline>
<codeline lineno="19507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="19509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="19510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="19511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>);</highlight></codeline>
<codeline lineno="19512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>();</highlight></codeline>
<codeline lineno="19516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19517"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref>)</highlight></codeline>
<codeline lineno="19518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="19520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>-<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5,<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="19521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="19522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(<ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>,<sp/><ref refid="class_q_c_p_statistical_box_1a86fd1d3be5c5bc11d11eda7517069af4" kindref="member">mKey</ref>+<ref refid="class_q_c_p_statistical_box_1af365e40b0f706c3d76f857c7957f629d" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="19523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>();</highlight></codeline>
<codeline lineno="19527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19529"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>();</highlight></codeline>
<codeline lineno="19531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19532"><highlight class="normal"></highlight></codeline>
<codeline lineno="19533"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19534"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_statistical_box_1adeef8c9a0361683c776bca2fbff292b7" kindref="member">QCPStatisticalBox::getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19535"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19536"><highlight class="normal"><sp/><sp/>QVector&lt;double&gt;<sp/>values;<sp/></highlight><highlight class="comment">//<sp/>values<sp/>that<sp/>must<sp/>be<sp/>considered<sp/>(i.e.<sp/>all<sp/>outliers<sp/>and<sp/>the<sp/>five<sp/>box-parameters)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19537"><highlight class="normal"><sp/><sp/>values.reserve(<ref refid="class_q_c_p_statistical_box_1a415e2f77a89396c2af999afe027bdf6c" kindref="member">mOutliers</ref>.size()<sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="19538"><highlight class="normal"><sp/><sp/>values<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1a16266f1e0e4e8e95b5d141c49479ef2e" kindref="member">mMaximum</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1a865afbcca332ee851aa45807381bc80e" kindref="member">mUpperQuartile</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1ae43287ca13c8166bde2ac19bf0969d23" kindref="member">mMedian</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1acac86cac93d9fa3d820b5aaa04ed96f6" kindref="member">mLowerQuartile</ref><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1a7143ece4e7e5f9ac010739fbc390bf0c" kindref="member">mMinimum</ref>;</highlight></codeline>
<codeline lineno="19539"><highlight class="normal"><sp/><sp/>values<sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_statistical_box_1a415e2f77a89396c2af999afe027bdf6c" kindref="member">mOutliers</ref>;</highlight></codeline>
<codeline lineno="19540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>values<sp/>and<sp/>find<sp/>the<sp/>ones<sp/>in<sp/>legal<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;values.size();<sp/>++i)</highlight></codeline>
<codeline lineno="19546"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>values.at(i)<sp/>&lt;<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="19548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>values.at(i)<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="19549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref>))</highlight></codeline>
<codeline lineno="19550"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values.at(i)<sp/>&gt;<sp/>upper<sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="19552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/>values.at(i);</highlight></codeline>
<codeline lineno="19554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(values.at(i)<sp/>&lt;<sp/>lower<sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="19557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>=<sp/>values.at(i);</highlight></codeline>
<codeline lineno="19559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>bounds<sp/>if<sp/>we<sp/>found<sp/>some<sp/>sensible<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveLower<sp/>&amp;&amp;<sp/>haveUpper)</highlight></codeline>
<codeline lineno="19565"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19566"><highlight class="normal"><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="19568"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>might<sp/>happen<sp/>if<sp/>all<sp/>values<sp/>are<sp/>in<sp/>other<sp/>sign<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19569"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19570"><highlight class="normal"><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>();</highlight></codeline>
<codeline lineno="19572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19574"><highlight class="normal"></highlight></codeline>
<codeline lineno="19575"><highlight class="normal"></highlight></codeline>
<codeline lineno="19579"></codeline>
<codeline lineno="19608"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19609"><highlight class="normal"></highlight></codeline>
<codeline lineno="19616"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19617"><highlight class="normal"></highlight></codeline>
<codeline lineno="19625"><highlight class="normal"><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData::QCPColorMapData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;keyRange,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;valueRange)<sp/>:</highlight></codeline>
<codeline lineno="19626"><highlight class="normal"><sp/><sp/>mKeySize(0),</highlight></codeline>
<codeline lineno="19627"><highlight class="normal"><sp/><sp/>mValueSize(0),</highlight></codeline>
<codeline lineno="19628"><highlight class="normal"><sp/><sp/>mKeyRange(keyRange),</highlight></codeline>
<codeline lineno="19629"><highlight class="normal"><sp/><sp/>mValueRange(valueRange),</highlight></codeline>
<codeline lineno="19630"><highlight class="normal"><sp/><sp/>mIsEmpty(true),</highlight></codeline>
<codeline lineno="19631"><highlight class="normal"><sp/><sp/>mData(0),</highlight></codeline>
<codeline lineno="19632"><highlight class="normal"><sp/><sp/>mDataModified(true)</highlight></codeline>
<codeline lineno="19633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19634"><highlight class="normal"><sp/><sp/>setSize(keySize,<sp/>valueSize);</highlight></codeline>
<codeline lineno="19635"><highlight class="normal"><sp/><sp/>fill(0);</highlight></codeline>
<codeline lineno="19636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19637"><highlight class="normal"></highlight></codeline>
<codeline lineno="19638"><highlight class="normal"><ref refid="class_q_c_p_color_map_data_1a7ac252031d0921520d5bccb6bfa23a8b" kindref="member">QCPColorMapData::~QCPColorMapData</ref>()</highlight></codeline>
<codeline lineno="19639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>)</highlight></codeline>
<codeline lineno="19641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="19642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19643"><highlight class="normal"></highlight></codeline>
<codeline lineno="19647"><highlight class="normal"><ref refid="class_q_c_p_color_map_data_1aac9d8eb81e18e240d89d56c01933fd23" kindref="member">QCPColorMapData::QCPColorMapData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data" kindref="compound">QCPColorMapData</ref><sp/>&amp;other)<sp/>:</highlight></codeline>
<codeline lineno="19648"><highlight class="normal"><sp/><sp/>mKeySize(0),</highlight></codeline>
<codeline lineno="19649"><highlight class="normal"><sp/><sp/>mValueSize(0),</highlight></codeline>
<codeline lineno="19650"><highlight class="normal"><sp/><sp/>mIsEmpty(true),</highlight></codeline>
<codeline lineno="19651"><highlight class="normal"><sp/><sp/>mData(0),</highlight></codeline>
<codeline lineno="19652"><highlight class="normal"><sp/><sp/>mDataModified(true)</highlight></codeline>
<codeline lineno="19653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19654"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="19655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19656"><highlight class="normal"></highlight></codeline>
<codeline lineno="19660"><highlight class="normal"><ref refid="class_q_c_p_color_map_data" kindref="compound">QCPColorMapData</ref><sp/>&amp;<ref refid="class_q_c_p_color_map_data_1afdf4dd1b2f5714234fe84709b85c2a8d" kindref="member">QCPColorMapData::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data" kindref="compound">QCPColorMapData</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="19661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;other<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19663"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref><sp/>=<sp/>other.<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>();</highlight></codeline>
<codeline lineno="19665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref><sp/>=<sp/>other.<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>();</highlight></codeline>
<codeline lineno="19666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a0d9ff35c299d0478b682bfbcdd9c097e" kindref="member">setSize</ref>(keySize,<sp/>valueSize);</highlight></codeline>
<codeline lineno="19667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1aad9c1c7c703c1339489fc730517c83d4" kindref="member">setRange</ref>(other.<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>(),<sp/>other.<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>());</highlight></codeline>
<codeline lineno="19668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_map_data_1a10e91aa89ed05bd177b1f81e07b465b8" kindref="member">mIsEmpty</ref>)</highlight></codeline>
<codeline lineno="19669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>,<sp/>other.<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[0])*keySize*valueSize);</highlight></codeline>
<codeline lineno="19670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref><sp/>=<sp/>other.<ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>;</highlight></codeline>
<codeline lineno="19671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ad3cc682da2ac14e5acdbc05cf4d3d93b" kindref="member">mDataModified</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19675"><highlight class="normal"></highlight></codeline>
<codeline lineno="19676"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>undocumented<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19677"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a2c33807b008cdb9e1394245c294c0eaf" kindref="member">QCPColorMapData::data</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="19678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyCell<sp/>=<sp/>(key-<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/(<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref>-1)+0.5;</highlight></codeline>
<codeline lineno="19680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueCell<sp/>=<sp/>(value-<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/(<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>-1)+0.5;</highlight></codeline>
<codeline lineno="19681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyCell<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>keyCell<sp/>&lt;<sp/>mKeySize<sp/>&amp;&amp;<sp/>valueCell<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>valueCell<sp/>&lt;<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>)</highlight></codeline>
<codeline lineno="19682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[valueCell*<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>+<sp/>keyCell];</highlight></codeline>
<codeline lineno="19683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="19685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19686"><highlight class="normal"></highlight></codeline>
<codeline lineno="19687"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>undocumented<sp/>getter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19688"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1af51ecd21f347adbf87b4cce4e1f5cbd6" kindref="member">QCPColorMapData::cell</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex)</highlight></codeline>
<codeline lineno="19689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>keyIndex<sp/>&lt;<sp/>mKeySize<sp/>&amp;&amp;<sp/>valueIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>valueIndex<sp/>&lt;<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>)</highlight></codeline>
<codeline lineno="19691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[valueIndex*<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>+<sp/>keyIndex];</highlight></codeline>
<codeline lineno="19692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="19694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19695"><highlight class="normal"></highlight></codeline>
<codeline lineno="19708"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a0d9ff35c299d0478b682bfbcdd9c097e" kindref="member">QCPColorMapData::setSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize)</highlight></codeline>
<codeline lineno="19709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keySize<sp/>!=<sp/><ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>||<sp/>valueSize<sp/>!=<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>)</highlight></codeline>
<codeline lineno="19711"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>;</highlight></codeline>
<codeline lineno="19713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>;</highlight></codeline>
<codeline lineno="19714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>)</highlight></codeline>
<codeline lineno="19715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="19716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a10e91aa89ed05bd177b1f81e07b465b8" kindref="member">mIsEmpty</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>==<sp/>0<sp/>||<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref><sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="19717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_map_data_1a10e91aa89ed05bd177b1f81e07b465b8" kindref="member">mIsEmpty</ref>)</highlight></codeline>
<codeline lineno="19718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19719"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>2D<sp/>arrays<sp/>get<sp/>memory<sp/>intensive<sp/>fast.<sp/>So<sp/>if<sp/>the<sp/>allocation<sp/>fails,<sp/>at<sp/>least<sp/>output<sp/>debug<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref>*<ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>];</highlight></codeline>
<codeline lineno="19723"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{<sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="19725"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>)</highlight></codeline>
<codeline lineno="19727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a350f783260eb9b5de5c7b5e0d5d3e3c2" kindref="member">fill</ref>(0);</highlight></codeline>
<codeline lineno="19728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>for<sp/>data<sp/>dimensions<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>;</highlight></codeline>
<codeline lineno="19730"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ad3cc682da2ac14e5acdbc05cf4d3d93b" kindref="member">mDataModified</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19735"><highlight class="normal"></highlight></codeline>
<codeline lineno="19746"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ac7ef70e383aface34b44dbde49234b6b" kindref="member">QCPColorMapData::setKeySize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize)</highlight></codeline>
<codeline lineno="19747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19748"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a0d9ff35c299d0478b682bfbcdd9c097e" kindref="member">setSize</ref>(keySize,<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>);</highlight></codeline>
<codeline lineno="19749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19750"><highlight class="normal"></highlight></codeline>
<codeline lineno="19761"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a0893c9e3914513048b45e3429ffd16f2" kindref="member">QCPColorMapData::setValueSize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize)</highlight></codeline>
<codeline lineno="19762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19763"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a0d9ff35c299d0478b682bfbcdd9c097e" kindref="member">setSize</ref>(<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref>,<sp/>valueSize);</highlight></codeline>
<codeline lineno="19764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19765"><highlight class="normal"></highlight></codeline>
<codeline lineno="19776"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1aad9c1c7c703c1339489fc730517c83d4" kindref="member">QCPColorMapData::setRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;keyRange,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;valueRange)</highlight></codeline>
<codeline lineno="19777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19778"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a0738c485f3c9df9ea1241b7a8bb6a86e" kindref="member">setKeyRange</ref>(keyRange);</highlight></codeline>
<codeline lineno="19779"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ada1b2680ba96a5f4175b6d341cf75d23" kindref="member">setValueRange</ref>(valueRange);</highlight></codeline>
<codeline lineno="19780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19781"><highlight class="normal"></highlight></codeline>
<codeline lineno="19792"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a0738c485f3c9df9ea1241b7a8bb6a86e" kindref="member">QCPColorMapData::setKeyRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;keyRange)</highlight></codeline>
<codeline lineno="19793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19794"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>;</highlight></codeline>
<codeline lineno="19795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19796"><highlight class="normal"></highlight></codeline>
<codeline lineno="19807"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ada1b2680ba96a5f4175b6d341cf75d23" kindref="member">QCPColorMapData::setValueRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;valueRange)</highlight></codeline>
<codeline lineno="19808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19809"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>;</highlight></codeline>
<codeline lineno="19810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19811"><highlight class="normal"></highlight></codeline>
<codeline lineno="19818"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1afd2083ccfd6987ec94aa7ef8e91ca39a" kindref="member">QCPColorMapData::setData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="19819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyCell<sp/>=<sp/>(key-<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/(<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref>-1)+0.5;</highlight></codeline>
<codeline lineno="19821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueCell<sp/>=<sp/>(value-<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/(<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>-1)+0.5;</highlight></codeline>
<codeline lineno="19822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyCell<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>keyCell<sp/>&lt;<sp/>mKeySize<sp/>&amp;&amp;<sp/>valueCell<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>valueCell<sp/>&lt;<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>)</highlight></codeline>
<codeline lineno="19823"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[valueCell*<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>+<sp/>keyCell]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="19825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)</highlight></codeline>
<codeline lineno="19826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="19827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;<sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="19828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="19829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ad3cc682da2ac14e5acdbc05cf4d3d93b" kindref="member">mDataModified</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19830"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19832"><highlight class="normal"></highlight></codeline>
<codeline lineno="19844"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a8e75eaf8746596319032a93f3d2d0683" kindref="member">QCPColorMapData::setCell</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="19845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>keyIndex<sp/>&lt;<sp/>mKeySize<sp/>&amp;&amp;<sp/>valueIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>valueIndex<sp/>&lt;<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>)</highlight></codeline>
<codeline lineno="19847"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[valueIndex*<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>+<sp/>keyIndex]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="19849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)</highlight></codeline>
<codeline lineno="19850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="19851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;<sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="19852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="19853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ad3cc682da2ac14e5acdbc05cf4d3d93b" kindref="member">mDataModified</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19856"><highlight class="normal"></highlight></codeline>
<codeline lineno="19870"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ab235ade8a4d64bd3adb26a99b3dd57ee" kindref="member">QCPColorMapData::recalculateDataBounds</ref>()</highlight></codeline>
<codeline lineno="19871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="19873"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="19874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minHeight<sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[0];</highlight></codeline>
<codeline lineno="19875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxHeight<sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[0];</highlight></codeline>
<codeline lineno="19876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataCount<sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>*<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref>;</highlight></codeline>
<codeline lineno="19877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;dataCount;<sp/>++i)</highlight></codeline>
<codeline lineno="19878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[i]<sp/>&gt;<sp/>maxHeight)</highlight></codeline>
<codeline lineno="19880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxHeight<sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[i];</highlight></codeline>
<codeline lineno="19881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[i]<sp/>&lt;<sp/>minHeight)</highlight></codeline>
<codeline lineno="19882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minHeight<sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[i];</highlight></codeline>
<codeline lineno="19883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>minHeight;</highlight></codeline>
<codeline lineno="19885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>maxHeight;</highlight></codeline>
<codeline lineno="19886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="19887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19888"><highlight class="normal"></highlight></codeline>
<codeline lineno="19894"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a9910ba830e96955bd5c8e5bef1e77ef3" kindref="member">QCPColorMapData::clear</ref>()</highlight></codeline>
<codeline lineno="19895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19896"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a0d9ff35c299d0478b682bfbcdd9c097e" kindref="member">setSize</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="19897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19898"><highlight class="normal"></highlight></codeline>
<codeline lineno="19902"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a350f783260eb9b5de5c7b5e0d5d3e3c2" kindref="member">QCPColorMapData::fill</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="19903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataCount<sp/>=<sp/><ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>*<ref refid="class_q_c_p_color_map_data_1a354e06462023340fbc03894b22499f6d" kindref="member">mKeySize</ref>;</highlight></codeline>
<codeline lineno="19905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;dataCount;<sp/>++i)</highlight></codeline>
<codeline lineno="19906"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>[i]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="19907"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_data_1a1798b3dcc0a27091d196bfd156dcb3f2" kindref="member">mDataBounds</ref><sp/>=<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(z,<sp/>z);</highlight></codeline>
<codeline lineno="19908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19909"><highlight class="normal"></highlight></codeline>
<codeline lineno="19922"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1a26e33c5ec7094b60136350bcd77d3737" kindref="member">QCPColorMapData::coordToCell</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*valueIndex)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19923"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyIndex)</highlight></codeline>
<codeline lineno="19925"><highlight class="normal"><sp/><sp/><sp/><sp/>*keyIndex<sp/>=<sp/>(key-<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/(<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(mKeySize-1)+0.5;</highlight></codeline>
<codeline lineno="19926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valueIndex)</highlight></codeline>
<codeline lineno="19927"><highlight class="normal"><sp/><sp/><sp/><sp/>*valueIndex<sp/>=<sp/>(value-<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)/(<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)*(<ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>-1)+0.5;</highlight></codeline>
<codeline lineno="19928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19929"><highlight class="normal"></highlight></codeline>
<codeline lineno="19940"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_data_1ac96d6e84befe7b9951b5da6d4d4a2a47" kindref="member">QCPColorMapData::cellToCoord</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueIndex,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="19941"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key)</highlight></codeline>
<codeline lineno="19943"><highlight class="normal"><sp/><sp/><sp/><sp/>*key<sp/>=<sp/>keyIndex/(double)(mKeySize-1)*(<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)+<ref refid="class_q_c_p_color_map_data_1aaaafd0d7d0f153dbd152f3daf34254ee" kindref="member">mKeyRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="19944"><highlight class="normal"><sp/><sp/>if<sp/>(value)</highlight></codeline>
<codeline lineno="19945"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>valueIndex/(double)(<ref refid="class_q_c_p_color_map_data_1ae8ee9093632a59f55eb4fc06579ed256" kindref="member">mValueSize</ref>-1)*(<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>-<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>)+<ref refid="class_q_c_p_color_map_data_1a225bb96f10c1a27b51ae59249477dbef" kindref="member">mValueRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="19946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19947"><highlight class="normal"></highlight></codeline>
<codeline lineno="19948"><highlight class="normal"></highlight></codeline>
<codeline lineno="19952"></codeline>
<codeline lineno="20025"><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20026"><highlight class="normal"></highlight></codeline>
<codeline lineno="20035"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20036"><highlight class="normal"></highlight></codeline>
<codeline lineno="20037"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>start<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20038"><highlight class="normal"></highlight></codeline>
<codeline lineno="20060"><highlight class="comment">/*<sp/>end<sp/>documentation<sp/>of<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20061"><highlight class="normal"></highlight></codeline>
<codeline lineno="20068"><highlight class="normal"><ref refid="class_q_c_p_color_map_1aa37e976d2ee1e2be6c4cd88a64b36215" kindref="member">QCPColorMap::QCPColorMap</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="20069"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>(keyAxis,<sp/>valueAxis),</highlight></codeline>
<codeline lineno="20070"><highlight class="normal"><sp/><sp/>mDataScaleType(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>::stLinear),</highlight></codeline>
<codeline lineno="20071"><highlight class="normal"><sp/><sp/>mMapData(new<sp/><ref refid="class_q_c_p_color_map_data" kindref="compound">QCPColorMapData</ref>(10,<sp/>10,<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(0,<sp/>5),<sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>(0,<sp/>5))),</highlight></codeline>
<codeline lineno="20072"><highlight class="normal"><sp/><sp/>mInterpolate(true),</highlight></codeline>
<codeline lineno="20073"><highlight class="normal"><sp/><sp/>mTightBoundary(false),</highlight></codeline>
<codeline lineno="20074"><highlight class="normal"><sp/><sp/>mMapImageInvalidated(true)</highlight></codeline>
<codeline lineno="20075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20077"><highlight class="normal"></highlight></codeline>
<codeline lineno="20078"><highlight class="normal"><ref refid="class_q_c_p_color_map_1ac8a952a40fed62dcee33405b0f4d47ad" kindref="member">QCPColorMap::~QCPColorMap</ref>()</highlight></codeline>
<codeline lineno="20079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>;</highlight></codeline>
<codeline lineno="20081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20082"><highlight class="normal"></highlight></codeline>
<codeline lineno="20090"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a5a23e133a20c4ccad35fd32e6c0f9809" kindref="member">QCPColorMap::setData</ref>(<ref refid="class_q_c_p_color_map_data" kindref="compound">QCPColorMapData</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)</highlight></codeline>
<codeline lineno="20091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref><sp/>==<sp/>data)</highlight></codeline>
<codeline lineno="20093"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20094"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>data<sp/>pointer<sp/>is<sp/>already<sp/>in<sp/>(and<sp/>owned<sp/>by)<sp/>this<sp/>plottable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_color_map_1a3ae12c9ce842352037cd20ea5267414f" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="20095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)</highlight></codeline>
<codeline lineno="20098"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20099"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref><sp/>=<sp/>*<ref refid="class_q_c_p_color_map_1a3ae12c9ce842352037cd20ea5267414f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="20100"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>;</highlight></codeline>
<codeline lineno="20103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_1a3ae12c9ce842352037cd20ea5267414f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="20104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20105"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1ac9aea6a5c193d7fa866bc7b26e79ef2c" kindref="member">mMapImageInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20107"><highlight class="normal"></highlight></codeline>
<codeline lineno="20116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">QCPColorMap::setDataRange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>&amp;dataRange)</highlight></codeline>
<codeline lineno="20117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">QCPRange::validRange</ref>(dataRange))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>!=<sp/>dataRange.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/><ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>!=<sp/>dataRange.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)</highlight></codeline>
<codeline lineno="20120"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1ab28a4b2def408f83b9818799d5f18446" kindref="member">mDataScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="20122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref><sp/>=<sp/>dataRange.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>();</highlight></codeline>
<codeline lineno="20123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref><sp/>=<sp/>dataRange.<ref refid="class_q_c_p_range_1a1ff029704c29a75adbc1dc36cecaf44c" kindref="member">sanitizedForLinScale</ref>();</highlight></codeline>
<codeline lineno="20125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1ac9aea6a5c193d7fa866bc7b26e79ef2c" kindref="member">mMapImageInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20126"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_color_map_1a482980f2335d09cfb36dd95ba9663197" kindref="member">dataRangeChanged</ref>(<ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref>);</highlight></codeline>
<codeline lineno="20127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20129"><highlight class="normal"></highlight></codeline>
<codeline lineno="20135"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" kindref="member">QCPColorMap::setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref><sp/>scaleType)</highlight></codeline>
<codeline lineno="20136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1ab28a4b2def408f83b9818799d5f18446" kindref="member">mDataScaleType</ref><sp/>!=<sp/>scaleType)</highlight></codeline>
<codeline lineno="20138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1ab28a4b2def408f83b9818799d5f18446" kindref="member">mDataScaleType</ref><sp/>=<sp/>scaleType;</highlight></codeline>
<codeline lineno="20140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1ac9aea6a5c193d7fa866bc7b26e79ef2c" kindref="member">mMapImageInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20141"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" kindref="member">dataScaleTypeChanged</ref>(<ref refid="class_q_c_p_color_map_1ab28a4b2def408f83b9818799d5f18446" kindref="member">mDataScaleType</ref>);</highlight></codeline>
<codeline lineno="20142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1ab28a4b2def408f83b9818799d5f18446" kindref="member">mDataScaleType</ref><sp/>==<sp/><ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>)</highlight></codeline>
<codeline lineno="20143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref>.<ref refid="class_q_c_p_range_1aaf6a9046e78d91eeb8e89584fe46b034" kindref="member">sanitizedForLogScale</ref>());</highlight></codeline>
<codeline lineno="20144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20146"><highlight class="normal"></highlight></codeline>
<codeline lineno="20158"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a7313c78360471cead3576341a2c50377" kindref="member">QCPColorMap::setGradient</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref><sp/>&amp;gradient)</highlight></codeline>
<codeline lineno="20159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1aab77fe9a8df6f0486ab3507cc5f278fa" kindref="member">mGradient</ref><sp/>!=<sp/>gradient)</highlight></codeline>
<codeline lineno="20161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1aab77fe9a8df6f0486ab3507cc5f278fa" kindref="member">mGradient</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_1a9f967a971474e32345290b79cf107809" kindref="member">gradient</ref>;</highlight></codeline>
<codeline lineno="20163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1ac9aea6a5c193d7fa866bc7b26e79ef2c" kindref="member">mMapImageInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20164"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/><ref refid="class_q_c_p_color_map_1abf4797f86e422ac6e0f732c4ff1a4d49" kindref="member">gradientChanged</ref>(<ref refid="class_q_c_p_color_map_1aab77fe9a8df6f0486ab3507cc5f278fa" kindref="member">mGradient</ref>);</highlight></codeline>
<codeline lineno="20165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20167"><highlight class="normal"></highlight></codeline>
<codeline lineno="20174"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a484eaa8a5065cfc386b15375bf98b964" kindref="member">QCPColorMap::setInterpolate</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="20175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20176"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1af77e5eba9a844592648edeb6fbe834f1" kindref="member">mInterpolate</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="20177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20178"><highlight class="normal"></highlight></codeline>
<codeline lineno="20190"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1ad03221cc285e5f562a0b13d684b5576d" kindref="member">QCPColorMap::setTightBoundary</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="20191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20192"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1ac2e9425fe4381b496726e1c09f978302" kindref="member">mTightBoundary</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="20193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20194"><highlight class="normal"></highlight></codeline>
<codeline lineno="20209"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1aa828921db364fe3c6af4619580ab85fd" kindref="member">QCPColorMap::setColorScale</ref>(<ref refid="class_q_c_p_color_scale" kindref="compound">QCPColorScale</ref><sp/>*colorScale)</highlight></codeline>
<codeline lineno="20210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>)<sp/></highlight><highlight class="comment">//<sp/>unconnect<sp/>signals<sp/>from<sp/>old<sp/>color<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20212"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20213"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a482980f2335d09cfb36dd95ba9663197" kindref="member">dataRangeChanged</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/><ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="20214"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" kindref="member">dataScaleTypeChanged</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/><ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" kindref="member">setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="20215"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1abf4797f86e422ac6e0f732c4ff1a4d49" kindref="member">gradientChanged</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)),<sp/><ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a7313c78360471cead3576341a2c50377" kindref="member">setGradient</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)));</highlight></codeline>
<codeline lineno="20216"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a482980f2335d09cfb36dd95ba9663197" kindref="member">dataRangeChanged</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="20217"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1abf4797f86e422ac6e0f732c4ff1a4d49" kindref="member">gradientChanged</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a7313c78360471cead3576341a2c50377" kindref="member">setGradient</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)));</highlight></codeline>
<codeline lineno="20218"><highlight class="normal"><sp/><sp/><sp/><sp/>disconnect(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" kindref="member">dataScaleTypeChanged</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" kindref="member">setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="20219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20220"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref><sp/>=<sp/><ref refid="class_q_c_p_color_map_1a6bd82e0b042a2ec4d64f40853a3b05e3" kindref="member">colorScale</ref>;</highlight></codeline>
<codeline lineno="20221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>)<sp/></highlight><highlight class="comment">//<sp/>connect<sp/>signals<sp/>to<sp/>new<sp/>color<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a7313c78360471cead3576341a2c50377" kindref="member">setGradient</ref>(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data()-&gt;gradient());</highlight></codeline>
<codeline lineno="20224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data()-&gt;dataRange());</highlight></codeline>
<codeline lineno="20225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" kindref="member">setDataScaleType</ref>(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data()-&gt;dataScaleType());</highlight></codeline>
<codeline lineno="20226"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a482980f2335d09cfb36dd95ba9663197" kindref="member">dataRangeChanged</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/><ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="20227"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" kindref="member">dataScaleTypeChanged</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/><ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" kindref="member">setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="20228"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1abf4797f86e422ac6e0f732c4ff1a4d49" kindref="member">gradientChanged</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)),<sp/><ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a7313c78360471cead3576341a2c50377" kindref="member">setGradient</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)));</highlight></codeline>
<codeline lineno="20229"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a482980f2335d09cfb36dd95ba9663197" kindref="member">dataRangeChanged</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref>)));</highlight></codeline>
<codeline lineno="20230"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1abf4797f86e422ac6e0f732c4ff1a4d49" kindref="member">gradientChanged</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a7313c78360471cead3576341a2c50377" kindref="member">setGradient</ref>(<ref refid="class_q_c_p_color_gradient" kindref="compound">QCPColorGradient</ref>)));</highlight></codeline>
<codeline lineno="20231"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(<ref refid="class_q_c_p_color_map_1a95b4100bacc3387652c988b071ec9db7" kindref="member">mColorScale</ref>.data(),<sp/>SIGNAL(<ref refid="class_q_c_p_color_map_1a978d5d5c9f68cffef8c902b855c04490" kindref="member">dataScaleTypeChanged</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" kindref="member">setDataScaleType</ref>(<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0" kindref="member">QCPAxis::ScaleType</ref>)));</highlight></codeline>
<codeline lineno="20232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20234"><highlight class="normal"></highlight></codeline>
<codeline lineno="20255"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a856608fa3dd1cc290bcd5f29a5575774" kindref="member">QCPColorMap::rescaleDataRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recalculateDataBounds)</highlight></codeline>
<codeline lineno="20256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recalculateDataBounds)</highlight></codeline>
<codeline lineno="20258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab235ade8a4d64bd3adb26a99b3dd57ee" kindref="member">recalculateDataBounds</ref>();</highlight></codeline>
<codeline lineno="20259"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" kindref="member">setDataRange</ref>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a9ff433248ee226ea0c469ae6cc2489fd" kindref="member">dataBounds</ref>());</highlight></codeline>
<codeline lineno="20260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20261"><highlight class="normal"></highlight></codeline>
<codeline lineno="20276"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a5d8158b62d55fcfeaabcb68ce0083e87" kindref="member">QCPColorMap::updateLegendIcon</ref>(Qt::TransformationMode<sp/>transformMode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;thumbSize)</highlight></codeline>
<codeline lineno="20277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.isNull()<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_color_map_1a3ae12c9ce842352037cd20ea5267414f" kindref="member">data</ref>()-&gt;<ref refid="class_q_c_p_color_map_data_1a986009324aee1fc5f696db46bd03dde5" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="20279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a5efcea591bb5486d968af520a4d43c3a" kindref="member">updateMapImage</ref>();<sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>update<sp/>map<sp/>image<sp/>if<sp/>it&apos;s<sp/>null<sp/>(happens<sp/>if<sp/>no<sp/>draw<sp/>has<sp/>happened<sp/>yet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20280"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.isNull())<sp/></highlight><highlight class="comment">//<sp/>might<sp/>still<sp/>be<sp/>null,<sp/>e.g.<sp/>if<sp/>data<sp/>is<sp/>empty,<sp/>so<sp/>check<sp/>here<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirrorX<sp/>=<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()<sp/>:<sp/>valueAxis())-&gt;rangeReversed();</highlight></codeline>
<codeline lineno="20284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirrorY<sp/>=<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>()<sp/>:<sp/>keyAxis())-&gt;rangeReversed();</highlight></codeline>
<codeline lineno="20285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1ada522988db02cb531767d38c5029ef60" kindref="member">mLegendIcon</ref><sp/>=<sp/>QPixmap::fromImage(<ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.mirrored(mirrorX,<sp/>mirrorY)).scaled(thumbSize,<sp/>Qt::KeepAspectRatio,<sp/>transformMode);</highlight></codeline>
<codeline lineno="20286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20288"><highlight class="normal"></highlight></codeline>
<codeline lineno="20293"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a0545dce5383766885912331705a8e099" kindref="member">QCPColorMap::clearData</ref>()</highlight></codeline>
<codeline lineno="20294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20295"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a9910ba830e96955bd5c8e5bef1e77ef3" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="20296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20297"><highlight class="normal"></highlight></codeline>
<codeline lineno="20298"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20299"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a4088dc7bcbe9bba605c84a912ba660ff" kindref="member">QCPColorMap::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="20300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20301"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="20302"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="20303"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="20304"><highlight class="normal"><sp/><sp/>if<sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="20305"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;rect().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="20307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posKey,<sp/>posValue;</highlight></codeline>
<codeline lineno="20309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a10408828446e9e0681c46d65120f382e" kindref="member">pixelsToCoords</ref>(pos,<sp/>posKey,<sp/>posValue);</highlight></codeline>
<codeline lineno="20310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>().<ref refid="class_q_c_p_range_1a030ce95b527c32e01414d0351347b46d" kindref="member">contains</ref>(posKey)<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>().<ref refid="class_q_c_p_range_1a030ce95b527c32e01414d0351347b46d" kindref="member">contains</ref>(posValue))</highlight></codeline>
<codeline lineno="20311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="20312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="20314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20315"><highlight class="normal"></highlight></codeline>
<codeline lineno="20325"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a5efcea591bb5486d968af520a4d43c3a" kindref="member">QCPColorMap::updateMapImage</ref>()</highlight></codeline>
<codeline lineno="20326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20327"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="20328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20329"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>mMapImage<sp/>to<sp/>correct<sp/>dimensions,<sp/>according<sp/>to<sp/>key/value<sp/>axes<sp/>orientation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal<sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.size().width()<sp/>!=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>()<sp/>||<sp/><ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.size().height()<sp/>!=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>()))</highlight></codeline>
<codeline lineno="20332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref><sp/>=<sp/>QImage(QSize(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>(),<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>()),<sp/>QImage::Format_RGB32);</highlight></codeline>
<codeline lineno="20333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical<sp/>&amp;&amp;<sp/>(<ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.size().width()<sp/>!=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>()<sp/>||<sp/><ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.size().height()<sp/>!=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>()))</highlight></codeline>
<codeline lineno="20334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref><sp/>=<sp/>QImage(QSize(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>(),<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>()),<sp/>QImage::Format_RGB32);</highlight></codeline>
<codeline lineno="20335"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keySize<sp/>=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>();</highlight></codeline>
<codeline lineno="20337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valueSize<sp/>=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>();</highlight></codeline>
<codeline lineno="20338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rawData<sp/>=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ac1682862022f575191351c9825187d39" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="20339"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="20341"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCount<sp/>=<sp/>valueSize;</highlight></codeline>
<codeline lineno="20343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowCount<sp/>=<sp/>keySize;</highlight></codeline>
<codeline lineno="20344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line=0;<sp/>line&lt;lineCount;<sp/>++line)</highlight></codeline>
<codeline lineno="20345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRgb*<sp/>pixels<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">QRgb*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.scanLine(lineCount-1-line));<sp/></highlight><highlight class="comment">//<sp/>invert<sp/>scanline<sp/>index<sp/>because<sp/>QImage<sp/>counts<sp/>scanlines<sp/>from<sp/>top,<sp/>but<sp/>our<sp/>vertical<sp/>index<sp/>counts<sp/>from<sp/>bottom<sp/>(mathematical<sp/>coordinate<sp/>system)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1aab77fe9a8df6f0486ab3507cc5f278fa" kindref="member">mGradient</ref>.<ref refid="class_q_c_p_color_gradient_1aaf423ceb943e177b0ed2c48c811d83dc" kindref="member">colorize</ref>(rawData+line*rowCount,<sp/><ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref>,<sp/>pixels,<sp/>rowCount,<sp/>1,<sp/><ref refid="class_q_c_p_color_map_1ab28a4b2def408f83b9818799d5f18446" kindref="member">mDataScaleType</ref>==<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>);</highlight></codeline>
<codeline lineno="20348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20349"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>keyAxis-&gt;orientation()<sp/>==<sp/>Qt::Vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20350"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCount<sp/>=<sp/>keySize;</highlight></codeline>
<codeline lineno="20352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowCount<sp/>=<sp/>valueSize;</highlight></codeline>
<codeline lineno="20353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line=0;<sp/>line&lt;lineCount;<sp/>++line)</highlight></codeline>
<codeline lineno="20354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRgb*<sp/>pixels<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">QRgb*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.scanLine(lineCount-1-line));<sp/></highlight><highlight class="comment">//<sp/>invert<sp/>scanline<sp/>index<sp/>because<sp/>QImage<sp/>counts<sp/>scanlines<sp/>from<sp/>top,<sp/>but<sp/>our<sp/>vertical<sp/>index<sp/>counts<sp/>from<sp/>bottom<sp/>(mathematical<sp/>coordinate<sp/>system)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1aab77fe9a8df6f0486ab3507cc5f278fa" kindref="member">mGradient</ref>.<ref refid="class_q_c_p_color_gradient_1aaf423ceb943e177b0ed2c48c811d83dc" kindref="member">colorize</ref>(rawData+line,<sp/><ref refid="class_q_c_p_color_map_1ab87609621d16cd3e9d52ad070b327b08" kindref="member">mDataRange</ref>,<sp/>pixels,<sp/>rowCount,<sp/>lineCount,<sp/><ref refid="class_q_c_p_color_map_1ab28a4b2def408f83b9818799d5f18446" kindref="member">mDataScaleType</ref>==<ref refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" kindref="member">QCPAxis::stLogarithmic</ref>);</highlight></codeline>
<codeline lineno="20357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20359"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20360"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ad3cc682da2ac14e5acdbc05cf4d3d93b" kindref="member">mDataModified</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20361"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_color_map_1ac9aea6a5c193d7fa866bc7b26e79ef2c" kindref="member">mMapImageInvalidated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20363"><highlight class="normal"></highlight></codeline>
<codeline lineno="20364"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a3b0f45a3177be9522d5e9b8cd8ae122d" kindref="member">QCPColorMap::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="20366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a986009324aee1fc5f696db46bd03dde5" kindref="member">isEmpty</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20369"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="20370"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ad3cc682da2ac14e5acdbc05cf4d3d93b" kindref="member">mDataModified</ref><sp/>||<sp/><ref refid="class_q_c_p_color_map_1ac9aea6a5c193d7fa866bc7b26e79ef2c" kindref="member">mMapImageInvalidated</ref>)</highlight></codeline>
<codeline lineno="20372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_color_map_1a5efcea591bb5486d968af520a4d43c3a" kindref="member">updateMapImage</ref>();</highlight></codeline>
<codeline lineno="20373"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>halfSampleKey<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>halfSampleValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="20377"><highlight class="normal"><sp/><sp/><sp/><sp/>halfSampleKey<sp/>=<sp/>0.5*<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/(double)(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1aa8d7811686fdfea964947715210c4af8" kindref="member">keySize</ref>()-1);</highlight></codeline>
<codeline lineno="20378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="20379"><highlight class="normal"><sp/><sp/><sp/><sp/>halfSampleValue<sp/>=<sp/>0.5*<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>().<ref refid="class_q_c_p_range_1afa57c13049b965edb6fd1c00ac56338a" kindref="member">size</ref>()/(double)(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1ab880be6bc587f34e8d22fe77ef6b57e9" kindref="member">valueSize</ref>()-1);</highlight></codeline>
<codeline lineno="20380"><highlight class="normal"><sp/><sp/>QRectF<sp/>imageRect(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>-halfSampleKey,<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>-halfSampleValue),</highlight></codeline>
<codeline lineno="20381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>+halfSampleKey,<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>+halfSampleValue));</highlight></codeline>
<codeline lineno="20382"><highlight class="normal"><sp/><sp/>imageRect<sp/>=<sp/>imageRect.normalized();</highlight></codeline>
<codeline lineno="20383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirrorX<sp/>=<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>()<sp/>:<sp/>valueAxis())-&gt;rangeReversed();</highlight></codeline>
<codeline lineno="20384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mirrorY<sp/>=<sp/>(<ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>()-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Vertical<sp/>?<sp/><ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>()<sp/>:<sp/>keyAxis())-&gt;rangeReversed();</highlight></codeline>
<codeline lineno="20385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>smoothBackup<sp/>=<sp/>painter-&gt;renderHints().testFlag(QPainter::SmoothPixmapTransform);</highlight></codeline>
<codeline lineno="20386"><highlight class="normal"><sp/><sp/>painter-&gt;setRenderHint(QPainter::SmoothPixmapTransform,<sp/><ref refid="class_q_c_p_color_map_1af77e5eba9a844592648edeb6fbe834f1" kindref="member">mInterpolate</ref>);</highlight></codeline>
<codeline lineno="20387"><highlight class="normal"><sp/><sp/>QRegion<sp/>clipBackup;</highlight></codeline>
<codeline lineno="20388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1ac2e9425fe4381b496726e1c09f978302" kindref="member">mTightBoundary</ref>)</highlight></codeline>
<codeline lineno="20389"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20390"><highlight class="normal"><sp/><sp/><sp/><sp/>clipBackup<sp/>=<sp/>painter-&gt;clipRegion();</highlight></codeline>
<codeline lineno="20391"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setClipRect(QRectF(<ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>,<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>().<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>),</highlight></codeline>
<codeline lineno="20392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1ade710a776104b14c1c835168ce1bfc5c" kindref="member">coordsToPixels</ref>(<ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>,<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>().<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>)).normalized(),<sp/>Qt::IntersectClip);</highlight></codeline>
<codeline lineno="20393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20394"><highlight class="normal"><sp/><sp/>painter-&gt;drawImage(imageRect,<sp/><ref refid="class_q_c_p_color_map_1a66110813b42eca78b64095b2a1f285a0" kindref="member">mMapImage</ref>.mirrored(mirrorX,<sp/>mirrorY));</highlight></codeline>
<codeline lineno="20395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_color_map_1ac2e9425fe4381b496726e1c09f978302" kindref="member">mTightBoundary</ref>)</highlight></codeline>
<codeline lineno="20396"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setClipRegion(clipBackup);</highlight></codeline>
<codeline lineno="20397"><highlight class="normal"><sp/><sp/>painter-&gt;setRenderHint(QPainter::SmoothPixmapTransform,<sp/>smoothBackup);</highlight></codeline>
<codeline lineno="20398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20399"><highlight class="normal"></highlight></codeline>
<codeline lineno="20400"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_color_map_1a7d5eee89f6b8eaf2f11f1d94e32215b2" kindref="member">QCPColorMap::drawLegendIcon</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="20402"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20403"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a76e9d6cc7972dc1528f526d163766aca" kindref="member">applyDefaultAntialiasingHint</ref>(painter);</highlight></codeline>
<codeline lineno="20404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>map<sp/>thumbnail:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_color_map_1ada522988db02cb531767d38c5029ef60" kindref="member">mLegendIcon</ref>.isNull())</highlight></codeline>
<codeline lineno="20406"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20407"><highlight class="normal"><sp/><sp/><sp/><sp/>QPixmap<sp/>scaledIcon<sp/>=<sp/><ref refid="class_q_c_p_color_map_1ada522988db02cb531767d38c5029ef60" kindref="member">mLegendIcon</ref>.scaled(rect.size().toSize(),<sp/>Qt::KeepAspectRatio,<sp/>Qt::FastTransformation);</highlight></codeline>
<codeline lineno="20408"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>iconRect<sp/>=<sp/>QRectF(0,<sp/>0,<sp/>scaledIcon.width(),<sp/>scaledIcon.height());</highlight></codeline>
<codeline lineno="20409"><highlight class="normal"><sp/><sp/><sp/><sp/>iconRect.moveCenter(rect.center());</highlight></codeline>
<codeline lineno="20410"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(iconRect.topLeft(),<sp/>scaledIcon);</highlight></codeline>
<codeline lineno="20411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="20413"><highlight class="comment"><sp/><sp/>//<sp/>draw<sp/>frame:</highlight></codeline>
<codeline lineno="20414"><highlight class="comment"><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="20415"><highlight class="comment"><sp/><sp/>painter-&gt;setPen(Qt::black);</highlight></codeline>
<codeline lineno="20416"><highlight class="comment"><sp/><sp/>painter-&gt;drawRect(rect.adjusted(1,<sp/>1,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="20417"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20419"><highlight class="normal"></highlight></codeline>
<codeline lineno="20420"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20421"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_color_map_1a0d89371f8707f12e22737b863f1a5126" kindref="member">QCPColorMap::getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="20422"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20423"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20424"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>result<sp/>=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a4765180639742460f64ab6c97c745c08" kindref="member">keyRange</ref>();</highlight></codeline>
<codeline lineno="20425"><highlight class="normal"><sp/><sp/>result.<ref refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="20426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">QCPAbstractPlottable::sdPositive</ref>)</highlight></codeline>
<codeline lineno="20427"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="20429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>*1e-3;</highlight></codeline>
<codeline lineno="20430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="20431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20432"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">QCPAbstractPlottable::sdNegative</ref>)</highlight></codeline>
<codeline lineno="20433"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="20435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>*1e-3;</highlight></codeline>
<codeline lineno="20436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="20437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="20440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20441"><highlight class="normal"></highlight></codeline>
<codeline lineno="20442"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20443"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_color_map_1ac1b906e05ca9b61680e61b74b3825a22" kindref="member">QCPColorMap::getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/>SignDomain<sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="20444"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20445"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20446"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>result<sp/>=<sp/><ref refid="class_q_c_p_color_map_1a8709272aa8f0be3ca111bf3866806f8b" kindref="member">mMapData</ref>-&gt;<ref refid="class_q_c_p_color_map_data_1a025be4d7ba0494fd7b38a5a56c737f2a" kindref="member">valueRange</ref>();</highlight></codeline>
<codeline lineno="20447"><highlight class="normal"><sp/><sp/>result.<ref refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" kindref="member">normalize</ref>();</highlight></codeline>
<codeline lineno="20448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">QCPAbstractPlottable::sdPositive</ref>)</highlight></codeline>
<codeline lineno="20449"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="20451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>*1e-3;</highlight></codeline>
<codeline lineno="20452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="20453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20454"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">QCPAbstractPlottable::sdNegative</ref>)</highlight></codeline>
<codeline lineno="20455"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="20457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>*1e-3;</highlight></codeline>
<codeline lineno="20458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>result.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="20459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="20462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20463"><highlight class="normal"></highlight></codeline>
<codeline lineno="20464"><highlight class="normal"></highlight></codeline>
<codeline lineno="20468"></codeline>
<codeline lineno="20487"><highlight class="normal"><ref refid="class_q_c_p_financial_data_1a1ca53b3a9ae4e9658a4fd1ca57d76ba4" kindref="member">QCPFinancialData::QCPFinancialData</ref>()<sp/>:</highlight></codeline>
<codeline lineno="20488"><highlight class="normal"><sp/><sp/>key(0),</highlight></codeline>
<codeline lineno="20489"><highlight class="normal"><sp/><sp/>open(0),</highlight></codeline>
<codeline lineno="20490"><highlight class="normal"><sp/><sp/>high(0),</highlight></codeline>
<codeline lineno="20491"><highlight class="normal"><sp/><sp/>low(0),</highlight></codeline>
<codeline lineno="20492"><highlight class="normal"><sp/><sp/>close(0)</highlight></codeline>
<codeline lineno="20493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20495"><highlight class="normal"></highlight></codeline>
<codeline lineno="20499"><highlight class="normal"><ref refid="class_q_c_p_financial_data_1a1ca53b3a9ae4e9658a4fd1ca57d76ba4" kindref="member">QCPFinancialData::QCPFinancialData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>open,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>close)<sp/>:</highlight></codeline>
<codeline lineno="20500"><highlight class="normal"><sp/><sp/>key(key),</highlight></codeline>
<codeline lineno="20501"><highlight class="normal"><sp/><sp/>open(open),</highlight></codeline>
<codeline lineno="20502"><highlight class="normal"><sp/><sp/>high(high),</highlight></codeline>
<codeline lineno="20503"><highlight class="normal"><sp/><sp/>low(low),</highlight></codeline>
<codeline lineno="20504"><highlight class="normal"><sp/><sp/>close(close)</highlight></codeline>
<codeline lineno="20505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20507"><highlight class="normal"></highlight></codeline>
<codeline lineno="20508"><highlight class="normal"></highlight></codeline>
<codeline lineno="20512"></codeline>
<codeline lineno="20545"><highlight class="comment">/*<sp/>start<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20546"><highlight class="normal"></highlight></codeline>
<codeline lineno="20554"><highlight class="comment">/*<sp/>end<sp/>of<sp/>documentation<sp/>of<sp/>inline<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20555"><highlight class="normal"></highlight></codeline>
<codeline lineno="20565"><highlight class="normal"><ref refid="class_q_c_p_financial_1a4702d5248feeb9d1ec6e3ce725b10b32" kindref="member">QCPFinancial::QCPFinancial</ref>(<ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis,<sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis)<sp/>:</highlight></codeline>
<codeline lineno="20566"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>(keyAxis,<sp/>valueAxis),</highlight></codeline>
<codeline lineno="20567"><highlight class="normal"><sp/><sp/>mData(0),</highlight></codeline>
<codeline lineno="20568"><highlight class="normal"><sp/><sp/>mChartStyle(csOhlc),</highlight></codeline>
<codeline lineno="20569"><highlight class="normal"><sp/><sp/>mWidth(0.5),</highlight></codeline>
<codeline lineno="20570"><highlight class="normal"><sp/><sp/>mTwoColored(false),</highlight></codeline>
<codeline lineno="20571"><highlight class="normal"><sp/><sp/>mBrushPositive(QBrush(QColor(210,<sp/>210,<sp/>255))),</highlight></codeline>
<codeline lineno="20572"><highlight class="normal"><sp/><sp/>mBrushNegative(QBrush(QColor(255,<sp/>210,<sp/>210))),</highlight></codeline>
<codeline lineno="20573"><highlight class="normal"><sp/><sp/>mPenPositive(QPen(QColor(10,<sp/>40,<sp/>180))),</highlight></codeline>
<codeline lineno="20574"><highlight class="normal"><sp/><sp/>mPenNegative(QPen(QColor(180,<sp/>40,<sp/>10)))</highlight></codeline>
<codeline lineno="20575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20576"><highlight class="normal"><sp/><sp/>mData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref>;</highlight></codeline>
<codeline lineno="20577"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20578"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(QColor(80,<sp/>80,<sp/>255),<sp/>2.5));</highlight></codeline>
<codeline lineno="20579"><highlight class="normal"><sp/><sp/>setSelectedBrush(QBrush(QColor(80,<sp/>80,<sp/>255)));</highlight></codeline>
<codeline lineno="20580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20581"><highlight class="normal"></highlight></codeline>
<codeline lineno="20582"><highlight class="normal"><ref refid="class_q_c_p_financial_1ad1fda0d793797b66819fac4682b10f31" kindref="member">QCPFinancial::~QCPFinancial</ref>()</highlight></codeline>
<codeline lineno="20583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="20585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20586"><highlight class="normal"></highlight></codeline>
<codeline lineno="20599"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1adf12a86082f1e488df6a4e8603f8fd6d" kindref="member">QCPFinancial::setData</ref>(<ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy)</highlight></codeline>
<codeline lineno="20600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref><sp/>==<sp/>data)</highlight></codeline>
<codeline lineno="20602"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20603"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>data<sp/>pointer<sp/>is<sp/>already<sp/>in<sp/>(and<sp/>owned<sp/>by)<sp/>this<sp/>plottable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">quintptr</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_q_c_p_financial_1a58e05aefa057d16edfcc0334cf81c241" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="20604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20605"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy)</highlight></codeline>
<codeline lineno="20607"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20608"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref><sp/>=<sp/>*<ref refid="class_q_c_p_financial_1a58e05aefa057d16edfcc0334cf81c241" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="20609"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20610"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>;</highlight></codeline>
<codeline lineno="20612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref><sp/>=<sp/><ref refid="class_q_c_p_financial_1a58e05aefa057d16edfcc0334cf81c241" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="20613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20615"><highlight class="normal"></highlight></codeline>
<codeline lineno="20623"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1adf12a86082f1e488df6a4e8603f8fd6d" kindref="member">QCPFinancial::setData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;open,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;high,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;low,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;close)</highlight></codeline>
<codeline lineno="20624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20625"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="20626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="20627"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>open.size());</highlight></codeline>
<codeline lineno="20628"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>high.size());</highlight></codeline>
<codeline lineno="20629"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>low.size());</highlight></codeline>
<codeline lineno="20630"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>close.size());</highlight></codeline>
<codeline lineno="20631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="20632"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/><ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref>(key[i],<sp/>open[i],<sp/>high[i],<sp/>low[i],<sp/>close[i]));</highlight></codeline>
<codeline lineno="20634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20636"><highlight class="normal"></highlight></codeline>
<codeline lineno="20640"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a5a59175d36279d71596e64d7bb65596f" kindref="member">QCPFinancial::setChartStyle</ref>(<ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfb" kindref="member">QCPFinancial::ChartStyle</ref><sp/>style)</highlight></codeline>
<codeline lineno="20641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20642"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1ab65c2ce8d6354451870bb44b894c1e92" kindref="member">mChartStyle</ref><sp/>=<sp/>style;</highlight></codeline>
<codeline lineno="20643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20644"><highlight class="normal"></highlight></codeline>
<codeline lineno="20650"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a99633f8bac86a61d534ae5eeb1a3068f" kindref="member">QCPFinancial::setWidth</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="20651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20652"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref><sp/>=<sp/><ref refid="class_q_c_p_financial_1a71ccaa04cdade0ec08a2117db6e4a4ce" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="20653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20654"><highlight class="normal"></highlight></codeline>
<codeline lineno="20664"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a138e44aac160a17a9676652e240c5f08" kindref="member">QCPFinancial::setTwoColored</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>twoColored)</highlight></codeline>
<codeline lineno="20665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20666"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a6afe919190b884d9bac026cefcc8c0a8" kindref="member">mTwoColored</ref><sp/>=<sp/><ref refid="class_q_c_p_financial_1a2bab30fc4eee38a0da3a05846b8d7ac7" kindref="member">twoColored</ref>;</highlight></codeline>
<codeline lineno="20667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20668"><highlight class="normal"></highlight></codeline>
<codeline lineno="20678"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a5ebff2b1764efd07cc44942e67821829" kindref="member">QCPFinancial::setBrushPositive</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="20679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20680"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1ab7e6eed16260a2f88ca6bd940dffea79" kindref="member">mBrushPositive</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1aa74cdceb9c7286ef116fbfa58e0326e7" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="20681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20682"><highlight class="normal"></highlight></codeline>
<codeline lineno="20692"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a8bbdd87629f9144b3ef51af660c0961a" kindref="member">QCPFinancial::setBrushNegative</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="20693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20694"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1acb0e31874b7a1deb56bd42e8ab3e68f2" kindref="member">mBrushNegative</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1aa74cdceb9c7286ef116fbfa58e0326e7" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="20695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20696"><highlight class="normal"></highlight></codeline>
<codeline lineno="20706"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1ac58aa3adc7a35aab0088764b840683e5" kindref="member">QCPFinancial::setPenPositive</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="20707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20708"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1aa6599186f417ba615caebb3f6c762bd8" kindref="member">mPenPositive</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="20709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20710"><highlight class="normal"></highlight></codeline>
<codeline lineno="20720"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1afe5c07e94ccea01a75b3a2476993c346" kindref="member">QCPFinancial::setPenNegative</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="20721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20722"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a263fbfefde2cc19c8d4024a8319c2bbb" kindref="member">mPenNegative</ref><sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a41d060007cc6b3037c9c04d22d0c0398" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="20723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20724"><highlight class="normal"></highlight></codeline>
<codeline lineno="20733"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a1a83396f97fcc68f2b7aa8d9782feffe" kindref="member">QCPFinancial::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref><sp/>&amp;dataMap)</highlight></codeline>
<codeline lineno="20734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20735"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;unite(dataMap);</highlight></codeline>
<codeline lineno="20736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20737"><highlight class="normal"></highlight></codeline>
<codeline lineno="20747"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a1a83396f97fcc68f2b7aa8d9782feffe" kindref="member">QCPFinancial::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref><sp/>&amp;data)</highlight></codeline>
<codeline lineno="20748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20749"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;insertMulti(data.<ref refid="class_q_c_p_financial_data_1a18bc92126f28c214b05b0161e5f5958b" kindref="member">key</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="20750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20751"><highlight class="normal"></highlight></codeline>
<codeline lineno="20762"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a1a83396f97fcc68f2b7aa8d9782feffe" kindref="member">QCPFinancial::addData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>open,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>close)</highlight></codeline>
<codeline lineno="20763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20764"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;insertMulti(key,<sp/><ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref>(key,<sp/>open,<sp/>high,<sp/>low,<sp/>close));</highlight></codeline>
<codeline lineno="20765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20766"><highlight class="normal"></highlight></codeline>
<codeline lineno="20776"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a1a83396f97fcc68f2b7aa8d9782feffe" kindref="member">QCPFinancial::addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;open,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;high,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;low,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;close)</highlight></codeline>
<codeline lineno="20777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>key.size();</highlight></codeline>
<codeline lineno="20779"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>open.size());</highlight></codeline>
<codeline lineno="20780"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>high.size());</highlight></codeline>
<codeline lineno="20781"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>low.size());</highlight></codeline>
<codeline lineno="20782"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>qMin(n,<sp/>close.size());</highlight></codeline>
<codeline lineno="20783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>++i)</highlight></codeline>
<codeline lineno="20784"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;insertMulti(key[i],<sp/><ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref>(key[i],<sp/>open[i],<sp/>high[i],<sp/>low[i],<sp/>close[i]));</highlight></codeline>
<codeline lineno="20786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20788"><highlight class="normal"></highlight></codeline>
<codeline lineno="20794"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a097c0383c7c1e9042ca7f93cb439d15a" kindref="member">QCPFinancial::removeDataBefore</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="20795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20796"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="20797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;end()<sp/>&amp;&amp;<sp/>it.key()<sp/>&lt;<sp/>key)</highlight></codeline>
<codeline lineno="20798"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="20799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20800"><highlight class="normal"></highlight></codeline>
<codeline lineno="20806"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1aa0fcd357005288c833a230c7874825ba" kindref="member">QCPFinancial::removeDataAfter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="20807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20809"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;upperBound(key);</highlight></codeline>
<codeline lineno="20810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;end())</highlight></codeline>
<codeline lineno="20811"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="20812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20813"><highlight class="normal"></highlight></codeline>
<codeline lineno="20821"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a048c741d3c8cc5709c2c44b759fdf27c" kindref="member">QCPFinancial::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromKey,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toKey)</highlight></codeline>
<codeline lineno="20822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fromKey<sp/>&gt;=<sp/>toKey<sp/>||<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;isEmpty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20824"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;upperBound(fromKey);</highlight></codeline>
<codeline lineno="20825"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::iterator<sp/>itEnd<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;upperBound(toKey);</highlight></codeline>
<codeline lineno="20826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>itEnd)</highlight></codeline>
<codeline lineno="20827"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;erase(it);</highlight></codeline>
<codeline lineno="20828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20829"><highlight class="normal"></highlight></codeline>
<codeline lineno="20838"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a048c741d3c8cc5709c2c44b759fdf27c" kindref="member">QCPFinancial::removeData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="20839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20840"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;remove(key);</highlight></codeline>
<codeline lineno="20841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20842"><highlight class="normal"></highlight></codeline>
<codeline lineno="20848"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a11fd49928c33e55e27b7319c6927864a" kindref="member">QCPFinancial::clearData</ref>()</highlight></codeline>
<codeline lineno="20849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20850"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="20851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20852"><highlight class="normal"></highlight></codeline>
<codeline lineno="20853"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20854"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1adf6cff00a55f775487d375fe4df5e95b" kindref="member">QCPFinancial::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="20855"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20856"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="20857"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="20858"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="20859"><highlight class="normal"><sp/><sp/>if<sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref><sp/>||<sp/>!<ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="20860"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;axisRect()-&gt;rect().contains(pos.toPoint()))</highlight></codeline>
<codeline lineno="20862"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>data<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20864"><highlight class="normal"><sp/><sp/><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>lower,<sp/>upper;<sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>upper<sp/>is<sp/>the<sp/>actual<sp/>upper<sp/>point,<sp/>and<sp/>not<sp/>1<sp/>step<sp/>after<sp/>the<sp/>upper<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_financial_1aca2edf9f19fae733cdb6bd4549019b84" kindref="member">getVisibleDataBounds</ref>(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="20866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>==<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd()<sp/>||<sp/>upper<sp/>==<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="20867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="20868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>select<sp/>test<sp/>according<sp/>to<sp/>configured<sp/>style:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1ab65c2ce8d6354451870bb44b894c1e92" kindref="member">mChartStyle</ref>)</highlight></codeline>
<codeline lineno="20870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfba3a516016c9298d3e95dd82aa203c4390" kindref="member">QCPFinancial::csOhlc</ref>:</highlight></codeline>
<codeline lineno="20872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a9c7d79351e728a67bfb6821c1d1bd6c0" kindref="member">ohlcSelectTest</ref>(pos,<sp/>lower,<sp/>upper+1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfbac803cbd39f26e3f206bcc7028679e62f" kindref="member">QCPFinancial::csCandlestick</ref>:</highlight></codeline>
<codeline lineno="20874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1abd0137244a17d5486a01ee442b083333" kindref="member">candlestickSelectTest</ref>(pos,<sp/>lower,<sp/>upper+1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20876"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="20878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20879"><highlight class="normal"></highlight></codeline>
<codeline lineno="20893"><highlight class="normal"><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref><sp/><ref refid="class_q_c_p_financial_1a0c3453d1c03e320950fdd2df54e3ebc8" kindref="member">QCPFinancial::timeSeriesToOhlc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector&lt;double&gt;<sp/>&amp;value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeBinSize,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeBinOffset)</highlight></codeline>
<codeline lineno="20894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20895"><highlight class="normal"><sp/><sp/><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref><sp/>map;</highlight></codeline>
<codeline lineno="20896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>qMin(time.size(),<sp/>value.size());</highlight></codeline>
<codeline lineno="20897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="20898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref>();</highlight></codeline>
<codeline lineno="20899"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20900"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_data" kindref="compound">QCPFinancialData</ref><sp/>currentBinData(0,<sp/>value.first(),<sp/>value.first(),<sp/>value.first(),<sp/>value.first());</highlight></codeline>
<codeline lineno="20901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentBinIndex<sp/>=<sp/>qFloor((time.first()-timeBinOffset)/timeBinSize+0.5);</highlight></codeline>
<codeline lineno="20902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;count;<sp/>++i)</highlight></codeline>
<codeline lineno="20903"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>qFloor((time.at(i)-timeBinOffset)/timeBinSize+0.5);</highlight></codeline>
<codeline lineno="20905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentBinIndex<sp/>==<sp/>index)<sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>still<sp/>in<sp/>current<sp/>bin,<sp/>extend<sp/>high/low:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.at(i)<sp/>&lt;<sp/>currentBinData.low)<sp/>currentBinData.low<sp/>=<sp/>value.at(i);</highlight></codeline>
<codeline lineno="20908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.at(i)<sp/>&gt;<sp/>currentBinData.high)<sp/>currentBinData.high<sp/>=<sp/>value.at(i);</highlight></codeline>
<codeline lineno="20909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>count-1)<sp/></highlight><highlight class="comment">//<sp/>last<sp/>data<sp/>point<sp/>is<sp/>in<sp/>current<sp/>bin,<sp/>finalize<sp/>bin:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBinData.close<sp/>=<sp/>value.at(i);</highlight></codeline>
<codeline lineno="20912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentBinData.key<sp/>=<sp/>timeBinOffset+(index)*timeBinSize;</highlight></codeline>
<codeline lineno="20913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map.insert(currentBinData.key,<sp/>currentBinData);</highlight></codeline>
<codeline lineno="20914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20915"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>not<sp/>anymore<sp/>in<sp/>current<sp/>bin,<sp/>set<sp/>close<sp/>of<sp/>old<sp/>and<sp/>open<sp/>of<sp/>new<sp/>bin,<sp/>and<sp/>add<sp/>old<sp/>to<sp/>map:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20916"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finalize<sp/>current<sp/>bin:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentBinData.close<sp/>=<sp/>value.at(i-1);</highlight></codeline>
<codeline lineno="20919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentBinData.key<sp/>=<sp/>timeBinOffset+(index-1)*timeBinSize;</highlight></codeline>
<codeline lineno="20920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.insert(currentBinData.key,<sp/>currentBinData);</highlight></codeline>
<codeline lineno="20921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>next<sp/>bin:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentBinIndex<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="20923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentBinData.open<sp/>=<sp/>value.at(i);</highlight></codeline>
<codeline lineno="20924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentBinData.high<sp/>=<sp/>value.at(i);</highlight></codeline>
<codeline lineno="20925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentBinData.low<sp/>=<sp/>value.at(i);</highlight></codeline>
<codeline lineno="20926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20928"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map;</highlight></codeline>
<codeline lineno="20930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20931"><highlight class="normal"></highlight></codeline>
<codeline lineno="20932"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20933"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1ad71a59a1b42616594831e04e52c92120" kindref="member">QCPFinancial::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="20934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20935"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>data<sp/>range:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20936"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>lower,<sp/>upper;<sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>upper<sp/>is<sp/>the<sp/>actual<sp/>upper<sp/>point,<sp/>and<sp/>not<sp/>1<sp/>step<sp/>after<sp/>the<sp/>upper<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20937"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_financial_1aca2edf9f19fae733cdb6bd4549019b84" kindref="member">getVisibleDataBounds</ref>(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="20938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower<sp/>==<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd()<sp/>||<sp/>upper<sp/>==<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="20939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20940"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="20941"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>visible<sp/>data<sp/>range<sp/>according<sp/>to<sp/>configured<sp/>style:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1ab65c2ce8d6354451870bb44b894c1e92" kindref="member">mChartStyle</ref>)</highlight></codeline>
<codeline lineno="20943"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfba3a516016c9298d3e95dd82aa203c4390" kindref="member">QCPFinancial::csOhlc</ref>:</highlight></codeline>
<codeline lineno="20945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_financial_1a3c3007a7434e29d042c77ccf4f497e66" kindref="member">drawOhlcPlot</ref>(painter,<sp/>lower,<sp/>upper+1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfbac803cbd39f26e3f206bcc7028679e62f" kindref="member">QCPFinancial::csCandlestick</ref>:</highlight></codeline>
<codeline lineno="20947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_financial_1a71f5081da0e5ab9c40a488ad40cff122" kindref="member">drawCandlestickPlot</ref>(painter,<sp/>lower,<sp/>upper+1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20950"><highlight class="normal"></highlight></codeline>
<codeline lineno="20951"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20952"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1aca85e8435b092cc8c3e5de65fcfb22c8" kindref="member">QCPFinancial::drawLegendIcon</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="20953"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20954"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1aaba1deb9188244d9ea65b035112b4d05" kindref="member">setAntialiasing</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>legend<sp/>icon<sp/>especially<sp/>of<sp/>csCandlestick<sp/>looks<sp/>better<sp/>without<sp/>antialiasing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1ab65c2ce8d6354451870bb44b894c1e92" kindref="member">mChartStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfba3a516016c9298d3e95dd82aa203c4390" kindref="member">csOhlc</ref>)</highlight></codeline>
<codeline lineno="20956"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a6afe919190b884d9bac026cefcc8c0a8" kindref="member">mTwoColored</ref>)</highlight></codeline>
<codeline lineno="20958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>upper<sp/>left<sp/>half<sp/>icon<sp/>with<sp/>positive<sp/>color:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_financial_1ab7e6eed16260a2f88ca6bd940dffea79" kindref="member">mBrushPositive</ref>);</highlight></codeline>
<codeline lineno="20961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_financial_1aa6599186f417ba615caebb3f6c762bd8" kindref="member">mPenPositive</ref>);</highlight></codeline>
<codeline lineno="20962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setClipRegion(QRegion(QPolygon()<sp/>&lt;&lt;<sp/>rect.bottomLeft().toPoint()<sp/>&lt;&lt;<sp/>rect.topRight().toPoint()<sp/>&lt;&lt;<sp/>rect.topLeft().toPoint()));</highlight></codeline>
<codeline lineno="20963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(0,<sp/>rect.height()*0.5,<sp/>rect.width(),<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.2,<sp/>rect.height()*0.3,<sp/>rect.width()*0.2,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.8,<sp/>rect.height()*0.5,<sp/>rect.width()*0.8,<sp/>rect.height()*0.7).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>bottom<sp/>right<sp/>hald<sp/>icon<sp/>with<sp/>negative<sp/>color:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_financial_1acb0e31874b7a1deb56bd42e8ab3e68f2" kindref="member">mBrushNegative</ref>);</highlight></codeline>
<codeline lineno="20968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_financial_1a263fbfefde2cc19c8d4024a8319c2bbb" kindref="member">mPenNegative</ref>);</highlight></codeline>
<codeline lineno="20969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setClipRegion(QRegion(QPolygon()<sp/>&lt;&lt;<sp/>rect.bottomLeft().toPoint()<sp/>&lt;&lt;<sp/>rect.topRight().toPoint()<sp/>&lt;&lt;<sp/>rect.bottomRight().toPoint()));</highlight></codeline>
<codeline lineno="20970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(0,<sp/>rect.height()*0.5,<sp/>rect.width(),<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.2,<sp/>rect.height()*0.3,<sp/>rect.width()*0.2,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.8,<sp/>rect.height()*0.5,<sp/>rect.width()*0.8,<sp/>rect.height()*0.7).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20973"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>);</highlight></codeline>
<codeline lineno="20976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="20977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(0,<sp/>rect.height()*0.5,<sp/>rect.width(),<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.2,<sp/>rect.height()*0.3,<sp/>rect.width()*0.2,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.8,<sp/>rect.height()*0.5,<sp/>rect.width()*0.8,<sp/>rect.height()*0.7).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20981"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1ab65c2ce8d6354451870bb44b894c1e92" kindref="member">mChartStyle</ref><sp/>==<sp/><ref refid="class_q_c_p_financial_1a0f800e21ee98d646dfc6f8f89d10ebfbac803cbd39f26e3f206bcc7028679e62f" kindref="member">csCandlestick</ref>)</highlight></codeline>
<codeline lineno="20982"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a6afe919190b884d9bac026cefcc8c0a8" kindref="member">mTwoColored</ref>)</highlight></codeline>
<codeline lineno="20984"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>upper<sp/>left<sp/>half<sp/>icon<sp/>with<sp/>positive<sp/>color:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_financial_1ab7e6eed16260a2f88ca6bd940dffea79" kindref="member">mBrushPositive</ref>);</highlight></codeline>
<codeline lineno="20987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_financial_1aa6599186f417ba615caebb3f6c762bd8" kindref="member">mPenPositive</ref>);</highlight></codeline>
<codeline lineno="20988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setClipRegion(QRegion(QPolygon()<sp/>&lt;&lt;<sp/>rect.bottomLeft().toPoint()<sp/>&lt;&lt;<sp/>rect.topRight().toPoint()<sp/>&lt;&lt;<sp/>rect.topLeft().toPoint()));</highlight></codeline>
<codeline lineno="20989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(0,<sp/>rect.height()*0.5,<sp/>rect.width()*0.25,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.75,<sp/>rect.height()*0.5,<sp/>rect.width(),<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(rect.width()*0.25,<sp/>rect.height()*0.25,<sp/>rect.width()*0.5,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>bottom<sp/>right<sp/>hald<sp/>icon<sp/>with<sp/>negative<sp/>color:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_financial_1acb0e31874b7a1deb56bd42e8ab3e68f2" kindref="member">mBrushNegative</ref>);</highlight></codeline>
<codeline lineno="20994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_financial_1a263fbfefde2cc19c8d4024a8319c2bbb" kindref="member">mPenNegative</ref>);</highlight></codeline>
<codeline lineno="20995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setClipRegion(QRegion(QPolygon()<sp/>&lt;&lt;<sp/>rect.bottomLeft().toPoint()<sp/>&lt;&lt;<sp/>rect.topRight().toPoint()<sp/>&lt;&lt;<sp/>rect.bottomRight().toPoint()));</highlight></codeline>
<codeline lineno="20996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(0,<sp/>rect.height()*0.5,<sp/>rect.width()*0.25,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.75,<sp/>rect.height()*0.5,<sp/>rect.width(),<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(rect.width()*0.25,<sp/>rect.height()*0.25,<sp/>rect.width()*0.5,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="20999"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>);</highlight></codeline>
<codeline lineno="21002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>);</highlight></codeline>
<codeline lineno="21003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(0,<sp/>rect.height()*0.5,<sp/>rect.width()*0.25,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="21004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(rect.width()*0.75,<sp/>rect.height()*0.5,<sp/>rect.width(),<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="21005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(rect.width()*0.25,<sp/>rect.height()*0.25,<sp/>rect.width()*0.5,<sp/>rect.height()*0.5).translated(rect.topLeft()));</highlight></codeline>
<codeline lineno="21006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21009"><highlight class="normal"></highlight></codeline>
<codeline lineno="21010"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21011"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_financial_1acc747f4a9b4fddfb14eb9d803349a534" kindref="member">QCPFinancial::getKeyRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">QCPAbstractPlottable::SignDomain</ref><sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21012"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21013"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="21014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21016"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="21018"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="21019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="21020"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21021"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>it.value().key;</highlight></codeline>
<codeline lineno="21022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref><sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>current<sp/>&lt;<sp/>0)<sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>current<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="21023"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="21025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="21027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="21030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="21032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21035"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="21036"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>exact<sp/>range<sp/>by<sp/>including<sp/>width<sp/>of<sp/>bars/flags:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveLower<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)</highlight></codeline>
<codeline lineno="21039"><highlight class="normal"><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref>-<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5;</highlight></codeline>
<codeline lineno="21040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveUpper<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)</highlight></codeline>
<codeline lineno="21041"><highlight class="normal"><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref>+<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5;</highlight></codeline>
<codeline lineno="21042"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="21043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="21044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21045"><highlight class="normal"></highlight></codeline>
<codeline lineno="21046"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21047"><highlight class="normal"><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/><ref refid="class_q_c_p_financial_1ab2b5f3ef9a503ba32ead32081333f4e7" kindref="member">QCPFinancial::getValueRange</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;foundRange,<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">QCPAbstractPlottable::SignDomain</ref><sp/>inSignDomain)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21048"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21049"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>range;</highlight></codeline>
<codeline lineno="21050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21052"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21053"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constBegin();</highlight></codeline>
<codeline lineno="21054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd())</highlight></codeline>
<codeline lineno="21055"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>high:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref><sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>it.value().high<sp/>&lt;<sp/>0)<sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>it.value().high<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="21058"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().high<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="21060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>it.value().high;</highlight></codeline>
<codeline lineno="21062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().high<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="21065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>it.value().high;</highlight></codeline>
<codeline lineno="21067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>low:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref><sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" kindref="member">sdNegative</ref><sp/>&amp;&amp;<sp/>it.value().low<sp/>&lt;<sp/>0)<sp/>||<sp/>(inSignDomain<sp/>==<sp/><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" kindref="member">sdPositive</ref><sp/>&amp;&amp;<sp/>it.value().low<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="21072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().low<sp/>&lt;<sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>||<sp/>!haveLower)</highlight></codeline>
<codeline lineno="21074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" kindref="member">lower</ref><sp/>=<sp/>it.value().low;</highlight></codeline>
<codeline lineno="21076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveLower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().low<sp/>&gt;<sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>||<sp/>!haveUpper)</highlight></codeline>
<codeline lineno="21079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.<ref refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" kindref="member">upper</ref><sp/>=<sp/>it.value().low;</highlight></codeline>
<codeline lineno="21081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveUpper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21084"><highlight class="normal"><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="21085"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21086"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21087"><highlight class="normal"><sp/><sp/>foundRange<sp/>=<sp/>haveLower<sp/>&amp;&amp;<sp/>haveUpper;</highlight></codeline>
<codeline lineno="21088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;</highlight></codeline>
<codeline lineno="21089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21090"><highlight class="normal"></highlight></codeline>
<codeline lineno="21097"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a3c3007a7434e29d042c77ccf4f497e66" kindref="member">QCPFinancial::drawOhlcPlot</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;end)</highlight></codeline>
<codeline lineno="21098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21099"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="21100"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="21101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="21102"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21103"><highlight class="normal"><sp/><sp/>QPen<sp/>linePen;</highlight></codeline>
<codeline lineno="21104"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="21106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QCPFinancialDataMap::const_iterator<sp/>it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref>)</highlight></codeline>
<codeline lineno="21110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" kindref="member">mSelectedPen</ref>;</highlight></codeline>
<codeline lineno="21111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a6afe919190b884d9bac026cefcc8c0a8" kindref="member">mTwoColored</ref>)</highlight></codeline>
<codeline lineno="21112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/>it.value().close<sp/>&gt;=<sp/>it.value().open<sp/>?<sp/><ref refid="class_q_c_p_financial_1aa6599186f417ba615caebb3f6c762bd8" kindref="member">mPenPositive</ref><sp/>:<sp/><ref refid="class_q_c_p_financial_1a263fbfefde2cc19c8d4024a8319c2bbb" kindref="member">mPenNegative</ref>;</highlight></codeline>
<codeline lineno="21113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="21115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(linePen);</highlight></codeline>
<codeline lineno="21116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>openPixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().open);</highlight></codeline>
<codeline lineno="21118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closePixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().close);</highlight></codeline>
<codeline lineno="21119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>backbone:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high)),<sp/>QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low)));</highlight></codeline>
<codeline lineno="21121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>open:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyWidthPixels<sp/>=<sp/>keyPixel-keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key-<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5);<sp/></highlight><highlight class="comment">//<sp/>sign<sp/>of<sp/>this<sp/>makes<sp/>sure<sp/>open/close<sp/>are<sp/>on<sp/>correct<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(keyPixel-keyWidthPixels,<sp/>openPixel),<sp/>QPointF(keyPixel,<sp/>openPixel));</highlight></codeline>
<codeline lineno="21124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>close:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(keyPixel,<sp/>closePixel),<sp/>QPointF(keyPixel+keyWidthPixels,<sp/>closePixel));</highlight></codeline>
<codeline lineno="21126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21127"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QCPFinancialDataMap::const_iterator<sp/>it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref>)</highlight></codeline>
<codeline lineno="21132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" kindref="member">mSelectedPen</ref>;</highlight></codeline>
<codeline lineno="21133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a6afe919190b884d9bac026cefcc8c0a8" kindref="member">mTwoColored</ref>)</highlight></codeline>
<codeline lineno="21134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/>it.value().close<sp/>&gt;=<sp/>it.value().open<sp/>?<sp/><ref refid="class_q_c_p_financial_1aa6599186f417ba615caebb3f6c762bd8" kindref="member">mPenPositive</ref><sp/>:<sp/><ref refid="class_q_c_p_financial_1a263fbfefde2cc19c8d4024a8319c2bbb" kindref="member">mPenNegative</ref>;</highlight></codeline>
<codeline lineno="21135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="21137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(linePen);</highlight></codeline>
<codeline lineno="21138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>openPixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().open);</highlight></codeline>
<codeline lineno="21140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closePixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().close);</highlight></codeline>
<codeline lineno="21141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>backbone:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high),<sp/>keyPixel),<sp/>QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low),<sp/>keyPixel));</highlight></codeline>
<codeline lineno="21143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>open:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyWidthPixels<sp/>=<sp/>keyPixel-keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key-<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5);<sp/></highlight><highlight class="comment">//<sp/>sign<sp/>of<sp/>this<sp/>makes<sp/>sure<sp/>open/close<sp/>are<sp/>on<sp/>correct<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(openPixel,<sp/>keyPixel-keyWidthPixels),<sp/>QPointF(openPixel,<sp/>keyPixel));</highlight></codeline>
<codeline lineno="21146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>close:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(closePixel,<sp/>keyPixel),<sp/>QPointF(closePixel,<sp/>keyPixel+keyWidthPixels));</highlight></codeline>
<codeline lineno="21148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21151"><highlight class="normal"></highlight></codeline>
<codeline lineno="21158"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a71f5081da0e5ab9c40a488ad40cff122" kindref="member">QCPFinancial::drawCandlestickPlot</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;end)</highlight></codeline>
<codeline lineno="21159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21160"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="21161"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="21162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="21163"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21164"><highlight class="normal"><sp/><sp/>QPen<sp/>linePen;</highlight></codeline>
<codeline lineno="21165"><highlight class="normal"><sp/><sp/>QBrush<sp/>boxBrush;</highlight></codeline>
<codeline lineno="21166"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="21168"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QCPFinancialDataMap::const_iterator<sp/>it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref>)</highlight></codeline>
<codeline lineno="21172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" kindref="member">mSelectedPen</ref>;</highlight></codeline>
<codeline lineno="21174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" kindref="member">mSelectedBrush</ref>;</highlight></codeline>
<codeline lineno="21175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a6afe919190b884d9bac026cefcc8c0a8" kindref="member">mTwoColored</ref>)</highlight></codeline>
<codeline lineno="21176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().close<sp/>&gt;=<sp/>it.value().open)</highlight></codeline>
<codeline lineno="21178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_financial_1aa6599186f417ba615caebb3f6c762bd8" kindref="member">mPenPositive</ref>;</highlight></codeline>
<codeline lineno="21180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_financial_1ab7e6eed16260a2f88ca6bd940dffea79" kindref="member">mBrushPositive</ref>;</highlight></codeline>
<codeline lineno="21181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_financial_1a263fbfefde2cc19c8d4024a8319c2bbb" kindref="member">mPenNegative</ref>;</highlight></codeline>
<codeline lineno="21184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_financial_1acb0e31874b7a1deb56bd42e8ab3e68f2" kindref="member">mBrushNegative</ref>;</highlight></codeline>
<codeline lineno="21185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="21189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="21190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(linePen);</highlight></codeline>
<codeline lineno="21192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(boxBrush);</highlight></codeline>
<codeline lineno="21193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>openPixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().open);</highlight></codeline>
<codeline lineno="21195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closePixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().close);</highlight></codeline>
<codeline lineno="21196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>high:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high)),<sp/>QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMax(it.value().open,<sp/>it.value().close))));</highlight></codeline>
<codeline lineno="21198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>low:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low)),<sp/>QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMin(it.value().open,<sp/>it.value().close))));</highlight></codeline>
<codeline lineno="21200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>open-close<sp/>box:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyWidthPixels<sp/>=<sp/>keyPixel-keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key-<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="21202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(QPointF(keyPixel-keyWidthPixels,<sp/>closePixel),<sp/>QPointF(keyPixel+keyWidthPixels,<sp/>openPixel)));</highlight></codeline>
<codeline lineno="21203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21204"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>keyAxis-&gt;orientation()<sp/>==<sp/>Qt::Vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21205"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QCPFinancialDataMap::const_iterator<sp/>it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" kindref="member">mSelected</ref>)</highlight></codeline>
<codeline lineno="21209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" kindref="member">mSelectedPen</ref>;</highlight></codeline>
<codeline lineno="21211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" kindref="member">mSelectedBrush</ref>;</highlight></codeline>
<codeline lineno="21212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a6afe919190b884d9bac026cefcc8c0a8" kindref="member">mTwoColored</ref>)</highlight></codeline>
<codeline lineno="21213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.value().close<sp/>&gt;=<sp/>it.value().open)</highlight></codeline>
<codeline lineno="21215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_financial_1aa6599186f417ba615caebb3f6c762bd8" kindref="member">mPenPositive</ref>;</highlight></codeline>
<codeline lineno="21217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_financial_1ab7e6eed16260a2f88ca6bd940dffea79" kindref="member">mBrushPositive</ref>;</highlight></codeline>
<codeline lineno="21218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_financial_1a263fbfefde2cc19c8d4024a8319c2bbb" kindref="member">mPenNegative</ref>;</highlight></codeline>
<codeline lineno="21221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_financial_1acb0e31874b7a1deb56bd42e8ab3e68f2" kindref="member">mBrushNegative</ref>;</highlight></codeline>
<codeline lineno="21222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linePen<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="21226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxBrush<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="21227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(linePen);</highlight></codeline>
<codeline lineno="21229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(boxBrush);</highlight></codeline>
<codeline lineno="21230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>openPixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().open);</highlight></codeline>
<codeline lineno="21232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>closePixel<sp/>=<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().close);</highlight></codeline>
<codeline lineno="21233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>high:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high),<sp/>keyPixel),<sp/>QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMax(it.value().open,<sp/>it.value().close)),<sp/>keyPixel));</highlight></codeline>
<codeline lineno="21235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>low:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low),<sp/>keyPixel),<sp/>QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMin(it.value().open,<sp/>it.value().close)),<sp/>keyPixel));</highlight></codeline>
<codeline lineno="21237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>open-close<sp/>box:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyWidthPixels<sp/>=<sp/>keyPixel-keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key-<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="21239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(QPointF(closePixel,<sp/>keyPixel-keyWidthPixels),<sp/>QPointF(openPixel,<sp/>keyPixel+keyWidthPixels)));</highlight></codeline>
<codeline lineno="21240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21243"><highlight class="normal"></highlight></codeline>
<codeline lineno="21249"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1a9c7d79351e728a67bfb6821c1d1bd6c0" kindref="member">QCPFinancial::ohlcSelectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;end)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21250"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21251"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="21252"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="21253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="21254"><highlight class="normal"></highlight></codeline>
<codeline lineno="21255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="21256"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="21257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="21258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>distance<sp/>to<sp/>backbone:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high)),<sp/>QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low)),<sp/>pos);</highlight></codeline>
<codeline lineno="21264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="21265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="21266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21267"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>keyAxis-&gt;orientation()<sp/>==<sp/>Qt::Vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>distance<sp/>to<sp/>backbone:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high),<sp/>keyPixel),<sp/>QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low),<sp/>keyPixel),<sp/>pos);</highlight></codeline>
<codeline lineno="21274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="21275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="21276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="21279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21280"><highlight class="normal"></highlight></codeline>
<codeline lineno="21287"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1abd0137244a17d5486a01ee442b083333" kindref="member">QCPFinancial::candlestickSelectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;end)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21288"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21289"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*keyAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data();</highlight></codeline>
<codeline lineno="21290"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref><sp/>*valueAxis<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" kindref="member">mValueAxis</ref>.data();</highlight></codeline>
<codeline lineno="21291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keyAxis<sp/>||<sp/>!valueAxis)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>or<sp/>value<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="21292"><highlight class="normal"></highlight></codeline>
<codeline lineno="21293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="21294"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>it;</highlight></codeline>
<codeline lineno="21295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyAxis-&gt;<ref refid="class_q_c_p_axis_1a57483f2f60145ddc9e63f3af53959265" kindref="member">orientation</ref>()<sp/>==<sp/>Qt::Horizontal)</highlight></codeline>
<codeline lineno="21296"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="21300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>whether<sp/>pos<sp/>is<sp/>in<sp/>open-close-box:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>boxKeyRange(it.value().key-<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5,<sp/>it.value().key+<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="21302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>boxValueRange(it.value().close,<sp/>it.value().open);</highlight></codeline>
<codeline lineno="21303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posKey,<sp/>posValue;</highlight></codeline>
<codeline lineno="21304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a10408828446e9e0681c46d65120f382e" kindref="member">pixelsToCoords</ref>(pos,<sp/>posKey,<sp/>posValue);</highlight></codeline>
<codeline lineno="21305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxKeyRange.contains(posKey)<sp/>&amp;&amp;<sp/>boxValueRange.contains(posValue))<sp/></highlight><highlight class="comment">//<sp/>is<sp/>in<sp/>open-close-box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99<sp/>*<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="21308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>distance<sp/>to<sp/>high/low<sp/>lines:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>highLineDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high)),<sp/>QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMax(it.value().open,<sp/>it.value().close))),<sp/>pos);</highlight></codeline>
<codeline lineno="21313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowLineDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low)),<sp/>QPointF(keyPixel,<sp/>valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMin(it.value().open,<sp/>it.value().close))),<sp/>pos);</highlight></codeline>
<codeline lineno="21314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentDistSqr<sp/>=<sp/>qMin(highLineDistSqr,<sp/>lowLineDistSqr);</highlight></codeline>
<codeline lineno="21315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="21317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="21318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21319"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>keyAxis-&gt;orientation()<sp/>==<sp/>Qt::Vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>begin;<sp/>it<sp/>!=<sp/>end;<sp/>++it)</highlight></codeline>
<codeline lineno="21322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="21324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>whether<sp/>pos<sp/>is<sp/>in<sp/>open-close-box:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>boxKeyRange(it.value().key-<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5,<sp/>it.value().key+<ref refid="class_q_c_p_financial_1af630e5eb8485146b9c777e63fd1cf993" kindref="member">mWidth</ref>*0.5);</highlight></codeline>
<codeline lineno="21326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref><sp/>boxValueRange(it.value().close,<sp/>it.value().open);</highlight></codeline>
<codeline lineno="21327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posKey,<sp/>posValue;</highlight></codeline>
<codeline lineno="21328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_plottable_1a10408828446e9e0681c46d65120f382e" kindref="member">pixelsToCoords</ref>(pos,<sp/>posKey,<sp/>posValue);</highlight></codeline>
<codeline lineno="21329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxKeyRange.contains(posKey)<sp/>&amp;&amp;<sp/>boxValueRange.contains(posValue))<sp/></highlight><highlight class="comment">//<sp/>is<sp/>in<sp/>open-close-box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentDistSqr<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99<sp/>*<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="21332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>distance<sp/>to<sp/>high/low<sp/>lines:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keyPixel<sp/>=<sp/>keyAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().key);</highlight></codeline>
<codeline lineno="21336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>highLineDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().high),<sp/>keyPixel),<sp/>QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMax(it.value().open,<sp/>it.value().close)),<sp/>keyPixel),<sp/>pos);</highlight></codeline>
<codeline lineno="21337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowLineDistSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_plottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" kindref="member">distSqrToLine</ref>(QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(it.value().low),<sp/>keyPixel),<sp/>QPointF(valueAxis-&gt;<ref refid="class_q_c_p_axis_1a985ae693b842fb0422b4390fe36d299a" kindref="member">coordToPixel</ref>(qMin(it.value().open,<sp/>it.value().close)),<sp/>keyPixel),<sp/>pos);</highlight></codeline>
<codeline lineno="21338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentDistSqr<sp/>=<sp/>qMin(highLineDistSqr,<sp/>lowLineDistSqr);</highlight></codeline>
<codeline lineno="21339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentDistSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="21341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>currentDistSqr;</highlight></codeline>
<codeline lineno="21342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="21345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21346"><highlight class="normal"></highlight></codeline>
<codeline lineno="21363"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_financial_1aca2edf9f19fae733cdb6bd4549019b84" kindref="member">QCPFinancial::getVisibleDataBounds</ref>(QCPFinancialDataMap::const_iterator<sp/>&amp;lower,<sp/>QCPFinancialDataMap::const_iterator<sp/>&amp;upper)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21364"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>)<sp/>{<sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>key<sp/>axis&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="21366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;isEmpty())</highlight></codeline>
<codeline lineno="21367"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21368"><highlight class="normal"><sp/><sp/><sp/><sp/>lower<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd();</highlight></codeline>
<codeline lineno="21369"><highlight class="normal"><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd();</highlight></codeline>
<codeline lineno="21370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21372"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>data<sp/>range<sp/>as<sp/>QMap<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21374"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>lbound<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;lowerBound(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().lower);</highlight></codeline>
<codeline lineno="21375"><highlight class="normal"><sp/><sp/>QCPFinancialDataMap::const_iterator<sp/>ubound<sp/>=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;upperBound(<ref refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" kindref="member">mKeyAxis</ref>.data()-&gt;range().upper);</highlight></codeline>
<codeline lineno="21376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lowoutlier<sp/>=<sp/>lbound<sp/>!=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constBegin();<sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>whether<sp/>there<sp/>exist<sp/>points<sp/>below<sp/>axis<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>highoutlier<sp/>=<sp/>ubound<sp/>!=<sp/><ref refid="class_q_c_p_financial_1a475f63587ca1077d8c30aaf2b71ae026" kindref="member">mData</ref>-&gt;constEnd();<sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>whether<sp/>there<sp/>exist<sp/>points<sp/>above<sp/>axis<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21378"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21379"><highlight class="normal"><sp/><sp/>lower<sp/>=<sp/>(lowoutlier<sp/>?<sp/>lbound-1<sp/>:<sp/>lbound);<sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>range<sp/>that<sp/>will<sp/>be<sp/>actually<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21380"><highlight class="normal"><sp/><sp/>upper<sp/>=<sp/>(highoutlier<sp/>?<sp/>ubound<sp/>:<sp/>ubound-1);<sp/></highlight><highlight class="comment">//<sp/>data<sp/>point<sp/>range<sp/>that<sp/>will<sp/>be<sp/>actually<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21382"><highlight class="normal"></highlight></codeline>
<codeline lineno="21383"><highlight class="normal"></highlight></codeline>
<codeline lineno="21387"></codeline>
<codeline lineno="21401"><highlight class="normal"><ref refid="class_q_c_p_item_straight_line_1a41fd2e1f006983449eca9830930c3b10" kindref="member">QCPItemStraightLine::QCPItemStraightLine</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="21402"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="21403"><highlight class="normal"><sp/><sp/>point1(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;point1&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="21404"><highlight class="normal"><sp/><sp/>point2(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;point2&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="21405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21406"><highlight class="normal"><sp/><sp/>point1-&gt;setCoords(0,<sp/>0);</highlight></codeline>
<codeline lineno="21407"><highlight class="normal"><sp/><sp/>point2-&gt;setCoords(1,<sp/>1);</highlight></codeline>
<codeline lineno="21408"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21409"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="21410"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,2));</highlight></codeline>
<codeline lineno="21411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21412"><highlight class="normal"></highlight></codeline>
<codeline lineno="21413"><highlight class="normal"><ref refid="class_q_c_p_item_straight_line_1a1f0730759916ce203baeaad1ad2af3ea" kindref="member">QCPItemStraightLine::~QCPItemStraightLine</ref>()</highlight></codeline>
<codeline lineno="21414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21416"><highlight class="normal"></highlight></codeline>
<codeline lineno="21422"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a9f36c9c9e60d7d9ac084c80380ac8601" kindref="member">QCPItemStraightLine::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="21423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21424"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_straight_line_1a15106ddc2ebd73ed5c1bc57aa92bee8f" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_straight_line_1ad858ab1a444391aab778f765453ea222" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="21425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21426"><highlight class="normal"></highlight></codeline>
<codeline lineno="21432"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a5c33559498d33543fa95cf0a36e851ff" kindref="member">QCPItemStraightLine::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="21433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21434"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_straight_line_1a0307a0d56a018656adbf798bc84c2a4b" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_straight_line_1ad858ab1a444391aab778f765453ea222" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="21435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21436"><highlight class="normal"></highlight></codeline>
<codeline lineno="21437"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21438"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1a64cc3796f58ce856012732603edb2f1c" kindref="member">QCPItemStraightLine::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21439"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21440"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="21441"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="21442"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="21443"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21444"><highlight class="normal"><sp/><sp/>return<sp/><ref refid="class_q_c_p_item_straight_line_1adc9b6c5bd33c7f806b748b79dfa25926" kindref="member">distToStraightLine</ref>(QVector2D(<ref refid="class_q_c_p_item_straight_line_1ac131a6ffe456f2cc7364dce541fe0120" kindref="member">point1</ref>-&gt;pixelPoint()),<sp/>QVector2D(<ref refid="class_q_c_p_item_straight_line_1ad26c0a732e471f63f75d481dcd48cfc9" kindref="member">point2</ref>-&gt;pixelPoint()-<ref refid="class_q_c_p_item_straight_line_1ac131a6ffe456f2cc7364dce541fe0120" kindref="member">point1</ref>-&gt;pixelPoint()),<sp/>QVector2D(pos));</highlight></codeline>
<codeline lineno="21445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21446"><highlight class="normal"></highlight></codeline>
<codeline lineno="21447"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21448"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line" kindref="compound">QCPItemStraightLine</ref>::<ref refid="class_q_c_p_item_straight_line_1a2daa1e1253216c26565d56a2d5530170" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="21449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21450"><highlight class="normal"><sp/><sp/>QVector2D<sp/>start(<ref refid="class_q_c_p_item_straight_line_1ac131a6ffe456f2cc7364dce541fe0120" kindref="member">point1</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>());</highlight></codeline>
<codeline lineno="21451"><highlight class="normal"><sp/><sp/>QVector2D<sp/>end(<ref refid="class_q_c_p_item_straight_line_1ad26c0a732e471f63f75d481dcd48cfc9" kindref="member">point2</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>());</highlight></codeline>
<codeline lineno="21452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>segment<sp/>of<sp/>straight<sp/>line<sp/>inside<sp/>clipRect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipPad<sp/>=<sp/><ref refid="class_q_c_p_item_straight_line_1a63ef39814c5b560dbb7b13e3fec1d940" kindref="member">mainPen</ref>().widthF();</highlight></codeline>
<codeline lineno="21454"><highlight class="normal"><sp/><sp/>QLineF<sp/>line<sp/>=<sp/><ref refid="class_q_c_p_item_straight_line_1af18ac29577b5b96fece15b0ffea70177" kindref="member">getRectClippedStraightLine</ref>(start,<sp/>end-start,<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>().adjusted(-clipPad,<sp/>-clipPad,<sp/>clipPad,<sp/>clipPad));</highlight></codeline>
<codeline lineno="21455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>paint<sp/>visible<sp/>segment,<sp/>if<sp/>existent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line.isNull())</highlight></codeline>
<codeline lineno="21457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21458"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(<ref refid="class_q_c_p_item_straight_line_1a63ef39814c5b560dbb7b13e3fec1d940" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="21459"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawLine(line);</highlight></codeline>
<codeline lineno="21460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21462"><highlight class="normal"></highlight></codeline>
<codeline lineno="21470"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_straight_line_1adc9b6c5bd33c7f806b748b79dfa25926" kindref="member">QCPItemStraightLine::distToStraightLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;point)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21471"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qAbs((base.y()-point.y())*vec.x()-(base.x()-point.x())*vec.y())/vec.length();</highlight></codeline>
<codeline lineno="21473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21474"><highlight class="normal"></highlight></codeline>
<codeline lineno="21482"><highlight class="normal">QLineF<sp/><ref refid="class_q_c_p_item_straight_line_1af18ac29577b5b96fece15b0ffea70177" kindref="member">QCPItemStraightLine::getRectClippedStraightLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21483"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bx,<sp/>by;</highlight></codeline>
<codeline lineno="21485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma;</highlight></codeline>
<codeline lineno="21486"><highlight class="normal"><sp/><sp/>QLineF<sp/>result;</highlight></codeline>
<codeline lineno="21487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vec.x()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>vec.y()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="21488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="21489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(vec.x()))<sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21490"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>top<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21492"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21493"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21494"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.x()-bx<sp/>+<sp/>(by-base.y())*vec.x()/vec.y();</highlight></codeline>
<codeline lineno="21495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.width())</highlight></codeline>
<codeline lineno="21496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.setLine(bx+gamma,<sp/>rect.top(),<sp/>bx+gamma,<sp/>rect.bottom());<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>check<sp/>bottom<sp/>because<sp/>we<sp/>know<sp/>line<sp/>is<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21497"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qFuzzyIsNull(vec.y()))<sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21498"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>left<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21500"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21501"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21502"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.y()-by<sp/>+<sp/>(bx-base.x())*vec.y()/vec.x();</highlight></codeline>
<codeline lineno="21503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.height())</highlight></codeline>
<codeline lineno="21504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.setLine(rect.left(),<sp/>by+gamma,<sp/>rect.right(),<sp/>by+gamma);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>check<sp/>right<sp/>because<sp/>we<sp/>know<sp/>line<sp/>is<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21505"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>skewed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21506"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21507"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QVector2D&gt;<sp/>pointVectors;</highlight></codeline>
<codeline lineno="21508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>top<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21509"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21510"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21511"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.x()-bx<sp/>+<sp/>(by-base.y())*vec.x()/vec.y();</highlight></codeline>
<codeline lineno="21512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.width())</highlight></codeline>
<codeline lineno="21513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx+gamma,<sp/>by));</highlight></codeline>
<codeline lineno="21514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>bottom<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21515"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21516"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.bottom();</highlight></codeline>
<codeline lineno="21517"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.x()-bx<sp/>+<sp/>(by-base.y())*vec.x()/vec.y();</highlight></codeline>
<codeline lineno="21518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.width())</highlight></codeline>
<codeline lineno="21519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx+gamma,<sp/>by));</highlight></codeline>
<codeline lineno="21520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>left<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21521"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21522"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21523"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.y()-by<sp/>+<sp/>(bx-base.x())*vec.y()/vec.x();</highlight></codeline>
<codeline lineno="21524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.height())</highlight></codeline>
<codeline lineno="21525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx,<sp/>by+gamma));</highlight></codeline>
<codeline lineno="21526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>right<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21527"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.right();</highlight></codeline>
<codeline lineno="21528"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21529"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.y()-by<sp/>+<sp/>(bx-base.x())*vec.y()/vec.x();</highlight></codeline>
<codeline lineno="21530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.height())</highlight></codeline>
<codeline lineno="21531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx,<sp/>by+gamma));</highlight></codeline>
<codeline lineno="21532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>evaluate<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointVectors.size()<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="21535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.setPoints(pointVectors.at(0).toPointF(),<sp/>pointVectors.at(1).toPointF());</highlight></codeline>
<codeline lineno="21537"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointVectors.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="21538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>probably<sp/>goes<sp/>through<sp/>corner<sp/>of<sp/>rect,<sp/>and<sp/>we<sp/>got<sp/>two<sp/>points<sp/>there.<sp/>single<sp/>out<sp/>the<sp/>point<sp/>pair<sp/>with<sp/>greatest<sp/>distance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqrMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QVector2D<sp/>pv1,<sp/>pv2;</highlight></codeline>
<codeline lineno="21542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;pointVectors.size()-1;<sp/>++i)</highlight></codeline>
<codeline lineno="21543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=i+1;<sp/>k&lt;pointVectors.size();<sp/>++k)</highlight></codeline>
<codeline lineno="21545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqr<sp/>=<sp/>(pointVectors.at(i)-pointVectors.at(k)).lengthSquared();</highlight></codeline>
<codeline lineno="21547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distSqr<sp/>&gt;<sp/>distSqrMax)</highlight></codeline>
<codeline lineno="21548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv1<sp/>=<sp/>pointVectors.at(i);</highlight></codeline>
<codeline lineno="21550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv2<sp/>=<sp/>pointVectors.at(k);</highlight></codeline>
<codeline lineno="21551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distSqrMax<sp/>=<sp/>distSqr;</highlight></codeline>
<codeline lineno="21552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.setPoints(pv1.toPointF(),<sp/>pv2.toPointF());</highlight></codeline>
<codeline lineno="21556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="21559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21560"><highlight class="normal"></highlight></codeline>
<codeline lineno="21566"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_straight_line_1a63ef39814c5b560dbb7b13e3fec1d940" kindref="member">QCPItemStraightLine::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21567"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_straight_line_1a0307a0d56a018656adbf798bc84c2a4b" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_straight_line_1a15106ddc2ebd73ed5c1bc57aa92bee8f" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="21569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21570"><highlight class="normal"></highlight></codeline>
<codeline lineno="21571"><highlight class="normal"></highlight></codeline>
<codeline lineno="21575"></codeline>
<codeline lineno="21591"><highlight class="normal"><ref refid="class_q_c_p_item_line_1a17804b7f64961c6accf25b61e85142e3" kindref="member">QCPItemLine::QCPItemLine</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="21592"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="21593"><highlight class="normal"><sp/><sp/>start(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="21594"><highlight class="normal"><sp/><sp/>end(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="21595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21596"><highlight class="normal"><sp/><sp/>start-&gt;setCoords(0,<sp/>0);</highlight></codeline>
<codeline lineno="21597"><highlight class="normal"><sp/><sp/>end-&gt;setCoords(1,<sp/>1);</highlight></codeline>
<codeline lineno="21598"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21599"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="21600"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,2));</highlight></codeline>
<codeline lineno="21601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21602"><highlight class="normal"></highlight></codeline>
<codeline lineno="21603"><highlight class="normal"><ref refid="class_q_c_p_item_line_1a94b5aaae048171e5306dc4695b991283" kindref="member">QCPItemLine::~QCPItemLine</ref>()</highlight></codeline>
<codeline lineno="21604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21606"><highlight class="normal"></highlight></codeline>
<codeline lineno="21612"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1a572528dab61c1abe205822fbd5db4b27" kindref="member">QCPItemLine::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="21613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21614"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_line_1abbb544d5bb927dfe4e81a7f3ca4c65ac" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_line_1a235779dd079a263bedb20b3daecc40eb" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="21615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21616"><highlight class="normal"></highlight></codeline>
<codeline lineno="21622"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1a3e2fec44503277e77717e9c24f87f1ea" kindref="member">QCPItemLine::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="21623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21624"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_line_1aff858ad6dde3b90024814ca4b116f278" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_line_1a235779dd079a263bedb20b3daecc40eb" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="21625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21626"><highlight class="normal"></highlight></codeline>
<codeline lineno="21635"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1aebf3d687114d584e0459db6759e2c3c3" kindref="member">QCPItemLine::setHead</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;head)</highlight></codeline>
<codeline lineno="21636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21637"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_line_1a51603f28ab7ddb1c1a95ea384791d3ed" kindref="member">mHead</ref><sp/>=<sp/><ref refid="class_q_c_p_item_line_1a5f6cbc5c763feae9dfbce71748fc43f1" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="21638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21639"><highlight class="normal"></highlight></codeline>
<codeline lineno="21648"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1ac264222c3297a7efe33df9345c811a5f" kindref="member">QCPItemLine::setTail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;tail)</highlight></codeline>
<codeline lineno="21649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21650"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_line_1ab8ed61dfe15bbb1cbf9b95eae95e242f" kindref="member">mTail</ref><sp/>=<sp/><ref refid="class_q_c_p_item_line_1a5d2ca0f784933e80f3e6e1d15dceebb3" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="21651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21652"><highlight class="normal"></highlight></codeline>
<codeline lineno="21653"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21654"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line_1a7541e5d9378ca121d07b0df3b24f7178" kindref="member">QCPItemLine::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21655"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21656"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="21657"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="21658"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="21659"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21660"><highlight class="normal"><sp/><sp/>return<sp/>qSqrt(<ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>(start-&gt;pixelPoint(),<sp/>end-&gt;pixelPoint(),<sp/>pos));</highlight></codeline>
<codeline lineno="21661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21662"><highlight class="normal"></highlight></codeline>
<codeline lineno="21663"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_line" kindref="compound">QCPItemLine</ref>::<ref refid="class_q_c_p_item_line_1a1fc045dd33919f8006df0692aeb0e84a" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="21665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21666"><highlight class="normal"><sp/><sp/>QVector2D<sp/>startVec(start-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21667"><highlight class="normal"><sp/><sp/>QVector2D<sp/>endVec(end-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startVec.toPoint()<sp/>==<sp/>endVec.toPoint())</highlight></codeline>
<codeline lineno="21669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>visible<sp/>segment<sp/>of<sp/>straight<sp/>line<sp/>inside<sp/>clipRect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipPad<sp/>=<sp/>qMax(<ref refid="class_q_c_p_item_line_1a51603f28ab7ddb1c1a95ea384791d3ed" kindref="member">mHead</ref>.<ref refid="class_q_c_p_line_ending_1a586b45cf738881a70119e353dc1ed59c" kindref="member">boundingDistance</ref>(),<sp/><ref refid="class_q_c_p_item_line_1ab8ed61dfe15bbb1cbf9b95eae95e242f" kindref="member">mTail</ref>.<ref refid="class_q_c_p_line_ending_1a586b45cf738881a70119e353dc1ed59c" kindref="member">boundingDistance</ref>());</highlight></codeline>
<codeline lineno="21672"><highlight class="normal"><sp/><sp/>clipPad<sp/>=<sp/>qMax(clipPad,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_q_c_p_item_line_1a7b5bc4ebacb55774b87c91b308ca7912" kindref="member">mainPen</ref>().widthF());</highlight></codeline>
<codeline lineno="21673"><highlight class="normal"><sp/><sp/>QLineF<sp/>line<sp/>=<sp/><ref refid="class_q_c_p_item_line_1a36e8620019a221ccea4357f0287b81c2" kindref="member">getRectClippedLine</ref>(startVec,<sp/>endVec,<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>().adjusted(-clipPad,<sp/>-clipPad,<sp/>clipPad,<sp/>clipPad));</highlight></codeline>
<codeline lineno="21674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>paint<sp/>visible<sp/>segment,<sp/>if<sp/>existent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line.isNull())</highlight></codeline>
<codeline lineno="21676"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21677"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(<ref refid="class_q_c_p_item_line_1a7b5bc4ebacb55774b87c91b308ca7912" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="21678"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawLine(line);</highlight></codeline>
<codeline lineno="21679"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::SolidPattern);</highlight></codeline>
<codeline lineno="21680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_line_1ab8ed61dfe15bbb1cbf9b95eae95e242f" kindref="member">mTail</ref>.<ref refid="class_q_c_p_line_ending_1aea324dbfddbca9895ca8a3a968671299" kindref="member">style</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">QCPLineEnding::esNone</ref>)</highlight></codeline>
<codeline lineno="21681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_line_1ab8ed61dfe15bbb1cbf9b95eae95e242f" kindref="member">mTail</ref>.<ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">draw</ref>(painter,<sp/>startVec,<sp/>startVec-endVec);</highlight></codeline>
<codeline lineno="21682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_line_1a51603f28ab7ddb1c1a95ea384791d3ed" kindref="member">mHead</ref>.<ref refid="class_q_c_p_line_ending_1aea324dbfddbca9895ca8a3a968671299" kindref="member">style</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">QCPLineEnding::esNone</ref>)</highlight></codeline>
<codeline lineno="21683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_line_1a51603f28ab7ddb1c1a95ea384791d3ed" kindref="member">mHead</ref>.<ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">draw</ref>(painter,<sp/>endVec,<sp/>endVec-startVec);</highlight></codeline>
<codeline lineno="21684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21686"><highlight class="normal"></highlight></codeline>
<codeline lineno="21694"><highlight class="normal">QLineF<sp/><ref refid="class_q_c_p_item_line_1a36e8620019a221ccea4357f0287b81c2" kindref="member">QCPItemLine::getRectClippedLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVector2D<sp/>&amp;end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21695"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>containsStart<sp/>=<sp/>rect.contains(start.x(),<sp/>start.y());</highlight></codeline>
<codeline lineno="21697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>containsEnd<sp/>=<sp/>rect.contains(end.x(),<sp/>end.y());</highlight></codeline>
<codeline lineno="21698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(containsStart<sp/>&amp;&amp;<sp/>containsEnd)</highlight></codeline>
<codeline lineno="21699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QLineF(start.toPointF(),<sp/>end.toPointF());</highlight></codeline>
<codeline lineno="21700"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21701"><highlight class="normal"><sp/><sp/>QVector2D<sp/>base<sp/>=<sp/><ref refid="class_q_c_p_item_line_1a602da607a09498b0f152ada1d6851bc5" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="21702"><highlight class="normal"><sp/><sp/>QVector2D<sp/>vec<sp/>=<sp/>end-<ref refid="class_q_c_p_item_line_1a602da607a09498b0f152ada1d6851bc5" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="21703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bx,<sp/>by;</highlight></codeline>
<codeline lineno="21704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma,<sp/>mu;</highlight></codeline>
<codeline lineno="21705"><highlight class="normal"><sp/><sp/>QLineF<sp/>result;</highlight></codeline>
<codeline lineno="21706"><highlight class="normal"><sp/><sp/>QList&lt;QVector2D&gt;<sp/>pointVectors;</highlight></codeline>
<codeline lineno="21707"><highlight class="normal"></highlight></codeline>
<codeline lineno="21708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(vec.y()))<sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>not<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21709"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>top<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21711"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21712"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21713"><highlight class="normal"><sp/><sp/><sp/><sp/>mu<sp/>=<sp/>(by-base.y())/vec.y();</highlight></codeline>
<codeline lineno="21714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mu<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="21715"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.x()-bx<sp/>+<sp/>mu*vec.x();</highlight></codeline>
<codeline lineno="21717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.width())</highlight></codeline>
<codeline lineno="21718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx+gamma,<sp/>by));</highlight></codeline>
<codeline lineno="21719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>bottom<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21721"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21722"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.bottom();</highlight></codeline>
<codeline lineno="21723"><highlight class="normal"><sp/><sp/><sp/><sp/>mu<sp/>=<sp/>(by-base.y())/vec.y();</highlight></codeline>
<codeline lineno="21724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mu<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="21725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.x()-bx<sp/>+<sp/>mu*vec.x();</highlight></codeline>
<codeline lineno="21727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.width())</highlight></codeline>
<codeline lineno="21728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx+gamma,<sp/>by));</highlight></codeline>
<codeline lineno="21729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21730"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(vec.x()))<sp/></highlight><highlight class="comment">//<sp/>line<sp/>is<sp/>not<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21732"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>left<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21734"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.left();</highlight></codeline>
<codeline lineno="21735"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21736"><highlight class="normal"><sp/><sp/><sp/><sp/>mu<sp/>=<sp/>(bx-base.x())/vec.x();</highlight></codeline>
<codeline lineno="21737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mu<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="21738"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.y()-by<sp/>+<sp/>mu*vec.y();</highlight></codeline>
<codeline lineno="21740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.height())</highlight></codeline>
<codeline lineno="21741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx,<sp/>by+gamma));</highlight></codeline>
<codeline lineno="21742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>right<sp/>of<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21744"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>=<sp/>rect.right();</highlight></codeline>
<codeline lineno="21745"><highlight class="normal"><sp/><sp/><sp/><sp/>by<sp/>=<sp/>rect.top();</highlight></codeline>
<codeline lineno="21746"><highlight class="normal"><sp/><sp/><sp/><sp/>mu<sp/>=<sp/>(bx-base.x())/vec.x();</highlight></codeline>
<codeline lineno="21747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mu<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mu<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="21748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>base.y()-by<sp/>+<sp/>mu*vec.y();</highlight></codeline>
<codeline lineno="21750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>gamma<sp/>&lt;=<sp/>rect.height())</highlight></codeline>
<codeline lineno="21751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointVectors.append(QVector2D(bx,<sp/>by+gamma));</highlight></codeline>
<codeline lineno="21752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21754"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(containsStart)</highlight></codeline>
<codeline lineno="21756"><highlight class="normal"><sp/><sp/><sp/><sp/>pointVectors.append(start);</highlight></codeline>
<codeline lineno="21757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(containsEnd)</highlight></codeline>
<codeline lineno="21758"><highlight class="normal"><sp/><sp/><sp/><sp/>pointVectors.append(end);</highlight></codeline>
<codeline lineno="21759"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>evaluate<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointVectors.size()<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="21762"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21763"><highlight class="normal"><sp/><sp/><sp/><sp/>result.setPoints(pointVectors.at(0).toPointF(),<sp/>pointVectors.at(1).toPointF());</highlight></codeline>
<codeline lineno="21764"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointVectors.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="21765"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>probably<sp/>goes<sp/>through<sp/>corner<sp/>of<sp/>rect,<sp/>and<sp/>we<sp/>got<sp/>two<sp/>points<sp/>there.<sp/>single<sp/>out<sp/>the<sp/>point<sp/>pair<sp/>with<sp/>greatest<sp/>distance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqrMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21768"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector2D<sp/>pv1,<sp/>pv2;</highlight></codeline>
<codeline lineno="21769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;pointVectors.size()-1;<sp/>++i)</highlight></codeline>
<codeline lineno="21770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=i+1;<sp/>k&lt;pointVectors.size();<sp/>++k)</highlight></codeline>
<codeline lineno="21772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqr<sp/>=<sp/>(pointVectors.at(i)-pointVectors.at(k)).lengthSquared();</highlight></codeline>
<codeline lineno="21774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distSqr<sp/>&gt;<sp/>distSqrMax)</highlight></codeline>
<codeline lineno="21775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv1<sp/>=<sp/>pointVectors.at(i);</highlight></codeline>
<codeline lineno="21777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv2<sp/>=<sp/>pointVectors.at(k);</highlight></codeline>
<codeline lineno="21778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distSqrMax<sp/>=<sp/>distSqr;</highlight></codeline>
<codeline lineno="21779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21782"><highlight class="normal"><sp/><sp/><sp/><sp/>result.setPoints(pv1.toPointF(),<sp/>pv2.toPointF());</highlight></codeline>
<codeline lineno="21783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="21785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21786"><highlight class="normal"></highlight></codeline>
<codeline lineno="21792"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_line_1a7b5bc4ebacb55774b87c91b308ca7912" kindref="member">QCPItemLine::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21793"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_line_1aff858ad6dde3b90024814ca4b116f278" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_line_1abbb544d5bb927dfe4e81a7f3ca4c65ac" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="21795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21796"><highlight class="normal"></highlight></codeline>
<codeline lineno="21797"><highlight class="normal"></highlight></codeline>
<codeline lineno="21801"></codeline>
<codeline lineno="21824"><highlight class="normal"><ref refid="class_q_c_p_item_curve_1ac9b7508bb5c8827e1a7a6199f8c82bec" kindref="member">QCPItemCurve::QCPItemCurve</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="21825"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="21826"><highlight class="normal"><sp/><sp/>start(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="21827"><highlight class="normal"><sp/><sp/>startDir(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;startDir&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="21828"><highlight class="normal"><sp/><sp/>endDir(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;endDir&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="21829"><highlight class="normal"><sp/><sp/>end(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="21830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21831"><highlight class="normal"><sp/><sp/>start-&gt;setCoords(0,<sp/>0);</highlight></codeline>
<codeline lineno="21832"><highlight class="normal"><sp/><sp/>startDir-&gt;setCoords(0.5,<sp/>0);</highlight></codeline>
<codeline lineno="21833"><highlight class="normal"><sp/><sp/>endDir-&gt;setCoords(0,<sp/>0.5);</highlight></codeline>
<codeline lineno="21834"><highlight class="normal"><sp/><sp/>end-&gt;setCoords(1,<sp/>1);</highlight></codeline>
<codeline lineno="21835"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21836"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="21837"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,2));</highlight></codeline>
<codeline lineno="21838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21839"><highlight class="normal"></highlight></codeline>
<codeline lineno="21840"><highlight class="normal"><ref refid="class_q_c_p_item_curve_1ae36f20fd5deff2f1443a7c53eaa95c81" kindref="member">QCPItemCurve::~QCPItemCurve</ref>()</highlight></codeline>
<codeline lineno="21841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21843"><highlight class="normal"></highlight></codeline>
<codeline lineno="21849"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a034be908440aec785c34b92843461221" kindref="member">QCPItemCurve::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="21850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21851"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_curve_1a7ef92988d1db2e4d0311e34c0a57fe42" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_curve_1abc6321e55a9ba1a0c7df407843dfa252" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="21852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21853"><highlight class="normal"></highlight></codeline>
<codeline lineno="21859"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a375b917669f868c5a106bf2f1ab7c26d" kindref="member">QCPItemCurve::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="21860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21861"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_curve_1ab22cbab261b20be5aa8e4ca252149246" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_curve_1abc6321e55a9ba1a0c7df407843dfa252" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="21862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21863"><highlight class="normal"></highlight></codeline>
<codeline lineno="21872"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a08a30d9cdd63995deea3d9e20430676f" kindref="member">QCPItemCurve::setHead</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;head)</highlight></codeline>
<codeline lineno="21873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21874"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_curve_1af2cc26ff199570940dc96f5ec19a13f8" kindref="member">mHead</ref><sp/>=<sp/><ref refid="class_q_c_p_item_curve_1afc067f0d1e60cd04812f2c2c7fdf36c3" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="21875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21876"><highlight class="normal"></highlight></codeline>
<codeline lineno="21885"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1ac3488d8b1a6489c845dc5bff3ef71124" kindref="member">QCPItemCurve::setTail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_line_ending" kindref="compound">QCPLineEnding</ref><sp/>&amp;tail)</highlight></codeline>
<codeline lineno="21886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21887"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_curve_1af1dca285b97e3f5b892dab827a79f327" kindref="member">mTail</ref><sp/>=<sp/><ref refid="class_q_c_p_item_curve_1a9adddfcc5275be0cf27e3c0c31c37c1a" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="21888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21889"><highlight class="normal"></highlight></codeline>
<codeline lineno="21890"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21891"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a741375c11667b5f9c95b2683f93ee514" kindref="member">QCPItemCurve::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21892"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21893"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="21894"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="21895"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="21896"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21897"><highlight class="normal"><sp/><sp/>QPointF<sp/>startVec(start-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21898"><highlight class="normal"><sp/><sp/>QPointF<sp/>startDirVec(<ref refid="class_q_c_p_item_curve_1aa124bf66c09cc51c627fb49db8bf8a7b" kindref="member">startDir</ref>-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21899"><highlight class="normal"><sp/><sp/>QPointF<sp/>endDirVec(<ref refid="class_q_c_p_item_curve_1a28181a9dee9cc3c3da83a883221bd2d0" kindref="member">endDir</ref>-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21900"><highlight class="normal"><sp/><sp/>QPointF<sp/>endVec(end-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21901"><highlight class="normal"></highlight></codeline>
<codeline lineno="21902"><highlight class="normal"><sp/><sp/>QPainterPath<sp/>cubicPath(startVec);</highlight></codeline>
<codeline lineno="21903"><highlight class="normal"><sp/><sp/>cubicPath.cubicTo(startDirVec,<sp/>endDirVec,<sp/>endVec);</highlight></codeline>
<codeline lineno="21904"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21905"><highlight class="normal"><sp/><sp/>QPolygonF<sp/>polygon<sp/>=<sp/>cubicPath.toSubpathPolygons().first();</highlight></codeline>
<codeline lineno="21906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minDistSqr<sp/>=<sp/><ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;::max();</highlight></codeline>
<codeline lineno="21907"><highlight class="normal"><sp/><sp/>for<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;polygon.size();<sp/>++i)</highlight></codeline>
<codeline lineno="21908"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distSqr<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>(polygon.at(i-1),<sp/>polygon.at(i),<sp/>pos);</highlight></codeline>
<codeline lineno="21910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distSqr<sp/>&lt;<sp/>minDistSqr)</highlight></codeline>
<codeline lineno="21911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minDistSqr<sp/>=<sp/>distSqr;</highlight></codeline>
<codeline lineno="21912"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(minDistSqr);</highlight></codeline>
<codeline lineno="21914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21915"><highlight class="normal"></highlight></codeline>
<codeline lineno="21916"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21917"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_curve_1a56cb5b72cd02db2eda598274a39839a9" kindref="member">QCPItemCurve::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="21918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21919"><highlight class="normal"><sp/><sp/>QPointF<sp/>startVec(start-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21920"><highlight class="normal"><sp/><sp/>QPointF<sp/>startDirVec(<ref refid="class_q_c_p_item_curve_1aa124bf66c09cc51c627fb49db8bf8a7b" kindref="member">startDir</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>());</highlight></codeline>
<codeline lineno="21921"><highlight class="normal"><sp/><sp/>QPointF<sp/>endDirVec(<ref refid="class_q_c_p_item_curve_1a28181a9dee9cc3c3da83a883221bd2d0" kindref="member">endDir</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>());</highlight></codeline>
<codeline lineno="21922"><highlight class="normal"><sp/><sp/>QPointF<sp/>endVec(end-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="21923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(QVector2D(endVec-startVec).length()<sp/>&gt;<sp/>1e10f)<sp/></highlight><highlight class="comment">//<sp/>too<sp/>large<sp/>curves<sp/>cause<sp/>crash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21925"><highlight class="normal"></highlight></codeline>
<codeline lineno="21926"><highlight class="normal"><sp/><sp/>QPainterPath<sp/>cubicPath(startVec);</highlight></codeline>
<codeline lineno="21927"><highlight class="normal"><sp/><sp/>cubicPath.cubicTo(startDirVec,<sp/>endDirVec,<sp/>endVec);</highlight></codeline>
<codeline lineno="21928"><highlight class="normal"></highlight></codeline>
<codeline lineno="21929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>paint<sp/>visible<sp/>segment,<sp/>if<sp/>existent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21930"><highlight class="normal"><sp/><sp/>QRect<sp/>clip<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>().adjusted(-<ref refid="class_q_c_p_item_curve_1a8089126f5645b6edfbaddea49d1e8390" kindref="member">mainPen</ref>().widthF(),<sp/>-<ref refid="class_q_c_p_item_curve_1a8089126f5645b6edfbaddea49d1e8390" kindref="member">mainPen</ref>().widthF(),<sp/><ref refid="class_q_c_p_item_curve_1a8089126f5645b6edfbaddea49d1e8390" kindref="member">mainPen</ref>().widthF(),<sp/><ref refid="class_q_c_p_item_curve_1a8089126f5645b6edfbaddea49d1e8390" kindref="member">mainPen</ref>().widthF());</highlight></codeline>
<codeline lineno="21931"><highlight class="normal"><sp/><sp/>QRect<sp/>cubicRect<sp/>=<sp/>cubicPath.controlPointRect().toRect();</highlight></codeline>
<codeline lineno="21932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cubicRect.isEmpty())<sp/></highlight><highlight class="comment">//<sp/>may<sp/>happen<sp/>when<sp/>start<sp/>and<sp/>end<sp/>exactly<sp/>on<sp/>same<sp/>x<sp/>or<sp/>y<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21933"><highlight class="normal"><sp/><sp/><sp/><sp/>cubicRect.adjust(0,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="21934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip.intersects(cubicRect))</highlight></codeline>
<codeline lineno="21935"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="21936"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_item_curve_1a8089126f5645b6edfbaddea49d1e8390" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="21937"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPath(cubicPath);</highlight></codeline>
<codeline lineno="21938"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::SolidPattern);</highlight></codeline>
<codeline lineno="21939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_curve_1af1dca285b97e3f5b892dab827a79f327" kindref="member">mTail</ref>.<ref refid="class_q_c_p_line_ending_1aea324dbfddbca9895ca8a3a968671299" kindref="member">style</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">QCPLineEnding::esNone</ref>)</highlight></codeline>
<codeline lineno="21940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_curve_1af1dca285b97e3f5b892dab827a79f327" kindref="member">mTail</ref>.<ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">draw</ref>(painter,<sp/>QVector2D(startVec),<sp/>M_PI-cubicPath.angleAtPercent(0)/180.0*M_PI);</highlight></codeline>
<codeline lineno="21941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_curve_1af2cc26ff199570940dc96f5ec19a13f8" kindref="member">mHead</ref>.<ref refid="class_q_c_p_line_ending_1aea324dbfddbca9895ca8a3a968671299" kindref="member">style</ref>()<sp/>!=<sp/><ref refid="class_q_c_p_line_ending_1a5ef16e6876b4b74959c7261d8d4c2cd5aca12d500f50cd6871766801bac30fb03" kindref="member">QCPLineEnding::esNone</ref>)</highlight></codeline>
<codeline lineno="21942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_curve_1af2cc26ff199570940dc96f5ec19a13f8" kindref="member">mHead</ref>.<ref refid="class_q_c_p_line_ending_1ac4b2fa94bd27b2f008b5fc090fcd7c0b" kindref="member">draw</ref>(painter,<sp/>QVector2D(endVec),<sp/>-cubicPath.angleAtPercent(1)/180.0*M_PI);</highlight></codeline>
<codeline lineno="21943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21945"><highlight class="normal"></highlight></codeline>
<codeline lineno="21951"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_curve_1a8089126f5645b6edfbaddea49d1e8390" kindref="member">QCPItemCurve::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="21952"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_curve_1ab22cbab261b20be5aa8e4ca252149246" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_curve_1a7ef92988d1db2e4d0311e34c0a57fe42" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="21954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21955"><highlight class="normal"></highlight></codeline>
<codeline lineno="21956"><highlight class="normal"></highlight></codeline>
<codeline lineno="21960"></codeline>
<codeline lineno="21974"><highlight class="normal"><ref refid="class_q_c_p_item_rect_1a412ad1579f7a1fba453d0fa28c496cbc" kindref="member">QCPItemRect::QCPItemRect</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="21975"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="21976"><highlight class="normal"><sp/><sp/>topLeft(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;topLeft&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="21977"><highlight class="normal"><sp/><sp/>bottomRight(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomRight&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="21978"><highlight class="normal"><sp/><sp/>top(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">),<sp/>aiTop)),</highlight></codeline>
<codeline lineno="21979"><highlight class="normal"><sp/><sp/>topRight(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;topRight&quot;</highlight><highlight class="normal">),<sp/>aiTopRight)),</highlight></codeline>
<codeline lineno="21980"><highlight class="normal"><sp/><sp/>right(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">),<sp/>aiRight)),</highlight></codeline>
<codeline lineno="21981"><highlight class="normal"><sp/><sp/>bottom(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottom&quot;</highlight><highlight class="normal">),<sp/>aiBottom)),</highlight></codeline>
<codeline lineno="21982"><highlight class="normal"><sp/><sp/>bottomLeft(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomLeft&quot;</highlight><highlight class="normal">),<sp/>aiBottomLeft)),</highlight></codeline>
<codeline lineno="21983"><highlight class="normal"><sp/><sp/>left(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">),<sp/>aiLeft))</highlight></codeline>
<codeline lineno="21984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21985"><highlight class="normal"><sp/><sp/>topLeft-&gt;setCoords(0,<sp/>1);</highlight></codeline>
<codeline lineno="21986"><highlight class="normal"><sp/><sp/>bottomRight-&gt;setCoords(1,<sp/>0);</highlight></codeline>
<codeline lineno="21987"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21988"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="21989"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,2));</highlight></codeline>
<codeline lineno="21990"><highlight class="normal"><sp/><sp/>setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="21991"><highlight class="normal"><sp/><sp/>setSelectedBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="21992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21993"><highlight class="normal"></highlight></codeline>
<codeline lineno="21994"><highlight class="normal"><ref refid="class_q_c_p_item_rect_1af9e89f80457afc2d0fd2c6527b40a5f2" kindref="member">QCPItemRect::~QCPItemRect</ref>()</highlight></codeline>
<codeline lineno="21995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21997"><highlight class="normal"></highlight></codeline>
<codeline lineno="22003"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1a483c0da5a17e1646cd17ddea2c124e7d" kindref="member">QCPItemRect::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22005"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1aa0d49323628d6752026056bfb52afd86" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_rect_1a3cb7b6de5e82cc5a3c99e9de919a55e6" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22007"><highlight class="normal"></highlight></codeline>
<codeline lineno="22013"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1a52a1bcb2dc753a538e406a2ba3cf21ce" kindref="member">QCPItemRect::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22015"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a73cc0bee61de3c67221ec8c7a76a29ed" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_rect_1a3cb7b6de5e82cc5a3c99e9de919a55e6" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22017"><highlight class="normal"></highlight></codeline>
<codeline lineno="22024"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1abbd4e346a03513ee466afc25d9c75446" kindref="member">QCPItemRect::setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22026"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a2d7f207fada27588b3a52b19234d3c2e" kindref="member">mBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_rect_1a03d2d26ffcac78b25b8e90915f9c4abe" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22028"><highlight class="normal"></highlight></codeline>
<codeline lineno="22035"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1abd1792859844118dedee86223cede7af" kindref="member">QCPItemRect::setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22037"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a21b70eee59b6e19ae0bbdf037b13508f" kindref="member">mSelectedBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_rect_1a03d2d26ffcac78b25b8e90915f9c4abe" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22039"><highlight class="normal"></highlight></codeline>
<codeline lineno="22040"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22041"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1af13b0797079b40b73d1c7286b76f18ac" kindref="member">QCPItemRect::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22042"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22043"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="22044"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="22045"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="22046"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22047"><highlight class="normal"><sp/><sp/>QRectF<sp/>rect<sp/>=<sp/>QRectF(<ref refid="class_q_c_p_item_rect_1aa70feeef173489b03c3fbe906a5023c4" kindref="member">topLeft</ref>-&gt;pixelPoint(),<sp/><ref refid="class_q_c_p_item_rect_1a409f3bfe615a7e322bb3d4d193d85b26" kindref="member">bottomRight</ref>-&gt;pixelPoint()).normalized();</highlight></codeline>
<codeline lineno="22048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filledRect<sp/>=<sp/><ref refid="class_q_c_p_item_rect_1a2d7f207fada27588b3a52b19234d3c2e" kindref="member">mBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_rect_1a2d7f207fada27588b3a52b19234d3c2e" kindref="member">mBrush</ref>.color().alpha()<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="22049"><highlight class="normal"><sp/><sp/>return<sp/><ref refid="class_q_c_p_abstract_item_1a4c0e14c4e92df91174cb7183fb363069" kindref="member">rectSelectTest</ref>(rect,<sp/>pos,<sp/>filledRect);</highlight></codeline>
<codeline lineno="22050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22051"><highlight class="normal"></highlight></codeline>
<codeline lineno="22052"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22053"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect" kindref="compound">QCPItemRect</ref>::<ref refid="class_q_c_p_item_rect_1a18cd583638b876cdd50f1a155ec182aa" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="22054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22055"><highlight class="normal"><sp/><sp/>QPointF<sp/>p1<sp/>=<sp/><ref refid="class_q_c_p_item_rect_1aa70feeef173489b03c3fbe906a5023c4" kindref="member">topLeft</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="22056"><highlight class="normal"><sp/><sp/>QPointF<sp/>p2<sp/>=<sp/><ref refid="class_q_c_p_item_rect_1a409f3bfe615a7e322bb3d4d193d85b26" kindref="member">bottomRight</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="22057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1.toPoint()<sp/>==<sp/>p2.toPoint())</highlight></codeline>
<codeline lineno="22058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22059"><highlight class="normal"><sp/><sp/>QRectF<sp/>rect<sp/>=<sp/>QRectF(p1,<sp/>p2).normalized();</highlight></codeline>
<codeline lineno="22060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipPad<sp/>=<sp/><ref refid="class_q_c_p_item_rect_1afa0fb7c6328a1e197ecd537de36daf8f" kindref="member">mainPen</ref>().widthF();</highlight></codeline>
<codeline lineno="22061"><highlight class="normal"><sp/><sp/>QRectF<sp/>boundingRect<sp/>=<sp/>rect.adjusted(-clipPad,<sp/>-clipPad,<sp/>clipPad,<sp/>clipPad);</highlight></codeline>
<codeline lineno="22062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boundingRect.intersects(<ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>()))<sp/></highlight><highlight class="comment">//<sp/>only<sp/>draw<sp/>if<sp/>bounding<sp/>rect<sp/>of<sp/>rect<sp/>item<sp/>is<sp/>visible<sp/>in<sp/>cliprect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22063"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22064"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(<ref refid="class_q_c_p_item_rect_1afa0fb7c6328a1e197ecd537de36daf8f" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="22065"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_item_rect_1ab0bd8e272e822ec851ba5b0c20e9200e" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="22066"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawRect(rect);</highlight></codeline>
<codeline lineno="22067"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22069"><highlight class="normal"></highlight></codeline>
<codeline lineno="22070"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22071"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_rect_1ae0973f8281fb52361b0c99ee899be07e" kindref="member">QCPItemRect::anchorPixelPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22072"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22073"><highlight class="normal"><sp/><sp/>QRectF<sp/>rect<sp/>=<sp/>QRectF(<ref refid="class_q_c_p_item_rect_1aa70feeef173489b03c3fbe906a5023c4" kindref="member">topLeft</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>(),<sp/><ref refid="class_q_c_p_item_rect_1a409f3bfe615a7e322bb3d4d193d85b26" kindref="member">bottomRight</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>());</highlight></codeline>
<codeline lineno="22074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(anchorId)</highlight></codeline>
<codeline lineno="22075"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3acaef33243034885d551dc9b8318ad326" kindref="member">aiTop</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topLeft()+rect.topRight())*0.5;</highlight></codeline>
<codeline lineno="22077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3aa94843ce5935b36994005c1e1859ef60" kindref="member">aiTopRight</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.topRight();</highlight></codeline>
<codeline lineno="22078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3a69fa21fde2f44036381296a6f78b4eb4" kindref="member">aiRight</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topRight()+rect.bottomRight())*0.5;</highlight></codeline>
<codeline lineno="22079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3a2d294551e07179c4ac0c4e37364a1468" kindref="member">aiBottom</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.bottomLeft()+rect.bottomRight())*0.5;</highlight></codeline>
<codeline lineno="22080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3ab3c42dbb1709a04ba9b03dcbf5a2537a" kindref="member">aiBottomLeft</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.bottomLeft();</highlight></codeline>
<codeline lineno="22081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3a8a095c6d6b2e7665a15d9f40c94b47dc" kindref="member">aiLeft</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topLeft()+rect.bottomLeft())*0.5;</highlight></codeline>
<codeline lineno="22082"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22083"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22084"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>anchorId&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchorId;</highlight></codeline>
<codeline lineno="22085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="22086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22087"><highlight class="normal"></highlight></codeline>
<codeline lineno="22093"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_rect_1afa0fb7c6328a1e197ecd537de36daf8f" kindref="member">QCPItemRect::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22094"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_rect_1a73cc0bee61de3c67221ec8c7a76a29ed" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_rect_1aa0d49323628d6752026056bfb52afd86" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="22096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22097"><highlight class="normal"></highlight></codeline>
<codeline lineno="22103"><highlight class="normal">QBrush<sp/><ref refid="class_q_c_p_item_rect_1ab0bd8e272e822ec851ba5b0c20e9200e" kindref="member">QCPItemRect::mainBrush</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22104"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_rect_1a21b70eee59b6e19ae0bbdf037b13508f" kindref="member">mSelectedBrush</ref><sp/>:<sp/><ref refid="class_q_c_p_item_rect_1a2d7f207fada27588b3a52b19234d3c2e" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="22106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22107"><highlight class="normal"></highlight></codeline>
<codeline lineno="22108"><highlight class="normal"></highlight></codeline>
<codeline lineno="22112"></codeline>
<codeline lineno="22132"><highlight class="normal"><ref refid="class_q_c_p_item_text_1a77ff96a2972a00872ff8f8c67143abbe" kindref="member">QCPItemText::QCPItemText</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="22133"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="22134"><highlight class="normal"><sp/><sp/>position(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="22135"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1aa70feeef173489b03c3fbe906a5023c4" kindref="member">topLeft</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;topLeft&quot;</highlight><highlight class="normal">),<sp/>aiTopLeft)),</highlight></codeline>
<codeline lineno="22136"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a96e50db552fb297d6fb62614676217bc" kindref="member">top</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3acaef33243034885d551dc9b8318ad326" kindref="member">aiTop</ref>)),</highlight></codeline>
<codeline lineno="22137"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a77e0eb6e4aa6efee620d35e2c21bdad7" kindref="member">topRight</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;topRight&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3aa94843ce5935b36994005c1e1859ef60" kindref="member">aiTopRight</ref>)),</highlight></codeline>
<codeline lineno="22138"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a7979c1915f61ad2609a9cc179c2e445e" kindref="member">right</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3a69fa21fde2f44036381296a6f78b4eb4" kindref="member">aiRight</ref>)),</highlight></codeline>
<codeline lineno="22139"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a409f3bfe615a7e322bb3d4d193d85b26" kindref="member">bottomRight</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomRight&quot;</highlight><highlight class="normal">),<sp/>aiBottomRight)),</highlight></codeline>
<codeline lineno="22140"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1a99313bf2b338d9f81e19bd38082038aa" kindref="member">bottom</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottom&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3a2d294551e07179c4ac0c4e37364a1468" kindref="member">aiBottom</ref>)),</highlight></codeline>
<codeline lineno="22141"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1abd8ee63fdf81f0c74bf7ccadee8603da" kindref="member">bottomLeft</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomLeft&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3ab3c42dbb1709a04ba9b03dcbf5a2537a" kindref="member">aiBottomLeft</ref>)),</highlight></codeline>
<codeline lineno="22142"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_rect_1aad0ca1af0c8debfc20d7b47fc942764d" kindref="member">left</ref>(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_rect_1af0ebba58e6bca4851c4db726691ec0d3a8a095c6d6b2e7665a15d9f40c94b47dc" kindref="member">aiLeft</ref>))</highlight></codeline>
<codeline lineno="22143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22144"><highlight class="normal"><sp/><sp/>position-&gt;setCoords(0,<sp/>0);</highlight></codeline>
<codeline lineno="22145"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22146"><highlight class="normal"><sp/><sp/>setRotation(0);</highlight></codeline>
<codeline lineno="22147"><highlight class="normal"><sp/><sp/>setTextAlignment(Qt::AlignTop|Qt::AlignHCenter);</highlight></codeline>
<codeline lineno="22148"><highlight class="normal"><sp/><sp/>setPositionAlignment(Qt::AlignCenter);</highlight></codeline>
<codeline lineno="22149"><highlight class="normal"><sp/><sp/>setText(QLatin1String(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="22150"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22151"><highlight class="normal"><sp/><sp/>setPen(Qt::NoPen);</highlight></codeline>
<codeline lineno="22152"><highlight class="normal"><sp/><sp/>setSelectedPen(Qt::NoPen);</highlight></codeline>
<codeline lineno="22153"><highlight class="normal"><sp/><sp/>setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22154"><highlight class="normal"><sp/><sp/>setSelectedBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22155"><highlight class="normal"><sp/><sp/>setColor(Qt::black);</highlight></codeline>
<codeline lineno="22156"><highlight class="normal"><sp/><sp/>setSelectedColor(Qt::blue);</highlight></codeline>
<codeline lineno="22157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22158"><highlight class="normal"></highlight></codeline>
<codeline lineno="22159"><highlight class="normal"><ref refid="class_q_c_p_item_text_1a1efd41ca53d49042d4f4b63cf9615cb6" kindref="member">QCPItemText::~QCPItemText</ref>()</highlight></codeline>
<codeline lineno="22160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22162"><highlight class="normal"></highlight></codeline>
<codeline lineno="22166"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1aa51efc0841fe52da9eaf8aff6fc8a8b2" kindref="member">QCPItemText::setColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="22167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22168"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a8407f284ad867f627878cc26ef433d08" kindref="member">mColor</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1ac9cb0a8a27f64d1b40855910ea9ebd03" kindref="member">color</ref>;</highlight></codeline>
<codeline lineno="22169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22170"><highlight class="normal"></highlight></codeline>
<codeline lineno="22174"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1ae7ba0bdb75c897b028388e45bfd435fa" kindref="member">QCPItemText::setSelectedColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>&amp;color)</highlight></codeline>
<codeline lineno="22175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22176"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a7eb64e42f5f7998a97d8907ad25933c1" kindref="member">mSelectedColor</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1ac9cb0a8a27f64d1b40855910ea9ebd03" kindref="member">color</ref>;</highlight></codeline>
<codeline lineno="22177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22178"><highlight class="normal"></highlight></codeline>
<codeline lineno="22185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a9b9ec6eea0eb0603977ff84d4c78d0a3" kindref="member">QCPItemText::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22187"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1aa02388705dbbff1bf7b8aa872b5f579c" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1a552bd02f46dbcb4b4812559036893352" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22189"><highlight class="normal"></highlight></codeline>
<codeline lineno="22196"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a291febe586f0da3f1c392e77bef4aa20" kindref="member">QCPItemText::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22198"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a8eaec649606d6ead2d8d4dcb5691777c" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1a552bd02f46dbcb4b4812559036893352" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22200"><highlight class="normal"></highlight></codeline>
<codeline lineno="22207"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a1c7e131516df2ed8d941ef31240ded8e" kindref="member">QCPItemText::setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22209"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a2535911875faa459b8337f2efccb5cb8" kindref="member">mBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1a38b981dfacb703efa8e27346eebcb5a2" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22211"><highlight class="normal"></highlight></codeline>
<codeline lineno="22218"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a6b8377eeb2af75eb9528422671ac16cb" kindref="member">QCPItemText::setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22220"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a28ccd097b42a216d81db9c6869f54a59" kindref="member">mSelectedBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1a38b981dfacb703efa8e27346eebcb5a2" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22222"><highlight class="normal"></highlight></codeline>
<codeline lineno="22228"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a94ad60ebe04f5c07c35e7c2029e96b1f" kindref="member">QCPItemText::setFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="22229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22230"><highlight class="normal"><sp/><sp/>mFont<sp/>=<sp/><ref refid="class_q_c_p_item_text_1ad34943fd68a9b1451d3e3234d072e418" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="22231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22232"><highlight class="normal"></highlight></codeline>
<codeline lineno="22238"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a0be2841772f83663c4db307928b82816" kindref="member">QCPItemText::setSelectedFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFont<sp/>&amp;font)</highlight></codeline>
<codeline lineno="22239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22240"><highlight class="normal"><sp/><sp/>mSelectedFont<sp/>=<sp/><ref refid="class_q_c_p_item_text_1ad34943fd68a9b1451d3e3234d072e418" kindref="member">font</ref>;</highlight></codeline>
<codeline lineno="22241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22242"><highlight class="normal"></highlight></codeline>
<codeline lineno="22249"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a3dacdda0ac88f99a05b333b977c48747" kindref="member">QCPItemText::setText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="22250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22251"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a2dec3e08c11f51639629374ecec3bd62" kindref="member">mText</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1a9547f7832010486abed0837e75db5330" kindref="member">text</ref>;</highlight></codeline>
<codeline lineno="22252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22253"><highlight class="normal"></highlight></codeline>
<codeline lineno="22266"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a781cdf8c640fc6a055dcff1e675c8c7a" kindref="member">QCPItemText::setPositionAlignment</ref>(Qt::Alignment<sp/>alignment)</highlight></codeline>
<codeline lineno="22267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22268"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a6c27f7dc1a962a04b32430cf99f04654" kindref="member">mPositionAlignment</ref><sp/>=<sp/>alignment;</highlight></codeline>
<codeline lineno="22269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22270"><highlight class="normal"></highlight></codeline>
<codeline lineno="22274"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1ab5bc0684c4d1bed81949a11b34dba478" kindref="member">QCPItemText::setTextAlignment</ref>(Qt::Alignment<sp/>alignment)</highlight></codeline>
<codeline lineno="22275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22276"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1acdb2e50c38e83da00f083771efbd213f" kindref="member">mTextAlignment</ref><sp/>=<sp/>alignment;</highlight></codeline>
<codeline lineno="22277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22278"><highlight class="normal"></highlight></codeline>
<codeline lineno="22283"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a4bcc10cd97952c3f749d75824b5077f0" kindref="member">QCPItemText::setRotation</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees)</highlight></codeline>
<codeline lineno="22284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22285"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1ac37df0061552225d2277e1ee3b48f2cb" kindref="member">mRotation</ref><sp/>=<sp/>degrees;</highlight></codeline>
<codeline lineno="22286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22287"><highlight class="normal"></highlight></codeline>
<codeline lineno="22292"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1aeea8a3e01f135f9dd0bb08f51db66310" kindref="member">QCPItemText::setPadding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMargins<sp/>&amp;padding)</highlight></codeline>
<codeline lineno="22293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22294"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref><sp/>=<sp/><ref refid="class_q_c_p_item_text_1a00e0fa03822ff384bf4921c1c90322ff" kindref="member">padding</ref>;</highlight></codeline>
<codeline lineno="22295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22296"><highlight class="normal"></highlight></codeline>
<codeline lineno="22297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22298"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a285b95bb6634c2e4f7768abb7a8bc69c" kindref="member">QCPItemText::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22299"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22300"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="22301"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="22302"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="22303"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rect<sp/>may<sp/>be<sp/>rotated,<sp/>so<sp/>we<sp/>transform<sp/>the<sp/>actual<sp/>clicked<sp/>pos<sp/>to<sp/>the<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinate<sp/>system,<sp/>so<sp/>we<sp/>can<sp/>use<sp/>the<sp/>normal<sp/>rectSelectTest<sp/>function<sp/>for<sp/>non-rotated<sp/>rects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22306"><highlight class="normal"><sp/><sp/>QPointF<sp/>positionPixels(position-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="22307"><highlight class="normal"><sp/><sp/>QTransform<sp/>inputTransform;</highlight></codeline>
<codeline lineno="22308"><highlight class="normal"><sp/><sp/>inputTransform.translate(positionPixels.x(),<sp/>positionPixels.y());</highlight></codeline>
<codeline lineno="22309"><highlight class="normal"><sp/><sp/>inputTransform.rotate(-<ref refid="class_q_c_p_item_text_1ac37df0061552225d2277e1ee3b48f2cb" kindref="member">mRotation</ref>);</highlight></codeline>
<codeline lineno="22310"><highlight class="normal"><sp/><sp/>inputTransform.translate(-positionPixels.x(),<sp/>-positionPixels.y());</highlight></codeline>
<codeline lineno="22311"><highlight class="normal"><sp/><sp/>QPointF<sp/>rotatedPos<sp/>=<sp/>inputTransform.map(pos);</highlight></codeline>
<codeline lineno="22312"><highlight class="normal"><sp/><sp/>QFontMetrics<sp/>fontMetrics(mFont);</highlight></codeline>
<codeline lineno="22313"><highlight class="normal"><sp/><sp/>QRect<sp/>textRect<sp/>=<sp/>fontMetrics.boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip|<ref refid="class_q_c_p_item_text_1acdb2e50c38e83da00f083771efbd213f" kindref="member">mTextAlignment</ref>,<sp/><ref refid="class_q_c_p_item_text_1a2dec3e08c11f51639629374ecec3bd62" kindref="member">mText</ref>);</highlight></codeline>
<codeline lineno="22314"><highlight class="normal"><sp/><sp/>QRect<sp/>textBoxRect<sp/>=<sp/>textRect.adjusted(-<ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.<ref refid="class_q_c_p_item_text_1ab8c6c6e1df36256986fab1463c0a1d38" kindref="member">left</ref>(),<sp/>-<ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.<ref refid="class_q_c_p_item_text_1a5c87ee162cbbe3d166b97826c8849304" kindref="member">top</ref>(),<sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.<ref refid="class_q_c_p_item_text_1aef159622ce6502412e782a21ba6d84f2" kindref="member">right</ref>(),<sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.<ref refid="class_q_c_p_item_text_1a94aeec080f877d3d1d0c3d8ffc10e9e6" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="22315"><highlight class="normal"><sp/><sp/>QPointF<sp/>textPos<sp/>=<sp/><ref refid="class_q_c_p_item_text_1aa6e478b1ce198eace89157c4cacc3ddc" kindref="member">getTextDrawPoint</ref>(positionPixels,<sp/>textBoxRect,<sp/><ref refid="class_q_c_p_item_text_1a6c27f7dc1a962a04b32430cf99f04654" kindref="member">mPositionAlignment</ref>);</highlight></codeline>
<codeline lineno="22316"><highlight class="normal"><sp/><sp/>textBoxRect.moveTopLeft(textPos.toPoint());</highlight></codeline>
<codeline lineno="22317"><highlight class="normal"></highlight></codeline>
<codeline lineno="22318"><highlight class="normal"><sp/><sp/>return<sp/><ref refid="class_q_c_p_abstract_item_1a4c0e14c4e92df91174cb7183fb363069" kindref="member">rectSelectTest</ref>(textBoxRect,<sp/>rotatedPos,<sp/>true);</highlight></codeline>
<codeline lineno="22319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22320"><highlight class="normal"></highlight></codeline>
<codeline lineno="22321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text" kindref="compound">QCPItemText</ref>::<ref refid="class_q_c_p_item_text_1a8793adb271ab79b4cf391dc55e9987f1" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="22323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22324"><highlight class="normal"><sp/><sp/>QPointF<sp/>pos(position-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="22325"><highlight class="normal"><sp/><sp/>QTransform<sp/>transform<sp/>=<sp/>painter-&gt;transform();</highlight></codeline>
<codeline lineno="22326"><highlight class="normal"><sp/><sp/>transform.translate(pos.x(),<sp/>pos.y());</highlight></codeline>
<codeline lineno="22327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(mRotation))</highlight></codeline>
<codeline lineno="22328"><highlight class="normal"><sp/><sp/><sp/><sp/>transform.rotate(mRotation);</highlight></codeline>
<codeline lineno="22329"><highlight class="normal"><sp/><sp/>painter-&gt;setFont(<ref refid="class_q_c_p_item_text_1a23d391bd6471c45e73f45add67ede902" kindref="member">mainFont</ref>());</highlight></codeline>
<codeline lineno="22330"><highlight class="normal"><sp/><sp/>QRect<sp/>textRect<sp/>=<sp/>painter-&gt;fontMetrics().boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip|mTextAlignment,<sp/>mText);</highlight></codeline>
<codeline lineno="22331"><highlight class="normal"><sp/><sp/>QRect<sp/>textBoxRect<sp/>=<sp/>textRect.adjusted(-<ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.left(),<sp/>-<ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.top(),<sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.right(),<sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.bottom());</highlight></codeline>
<codeline lineno="22332"><highlight class="normal"><sp/><sp/>QPointF<sp/>textPos<sp/>=<sp/><ref refid="class_q_c_p_item_text_1aa6e478b1ce198eace89157c4cacc3ddc" kindref="member">getTextDrawPoint</ref>(QPointF(0,<sp/>0),<sp/>textBoxRect,<sp/>mPositionAlignment);<sp/></highlight><highlight class="comment">//<sp/>0,<sp/>0<sp/>because<sp/>the<sp/>transform<sp/>does<sp/>the<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22333"><highlight class="normal"><sp/><sp/>textRect.moveTopLeft(textPos.toPoint()+QPoint(<ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.left(),<sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.top()));</highlight></codeline>
<codeline lineno="22334"><highlight class="normal"><sp/><sp/>textBoxRect.moveTopLeft(textPos.toPoint());</highlight></codeline>
<codeline lineno="22335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipPad<sp/>=<sp/><ref refid="class_q_c_p_item_text_1a9ade32d362b22853659201c738269e2a" kindref="member">mainPen</ref>().widthF();</highlight></codeline>
<codeline lineno="22336"><highlight class="normal"><sp/><sp/>QRect<sp/>boundingRect<sp/>=<sp/>textBoxRect.adjusted(-clipPad,<sp/>-clipPad,<sp/>clipPad,<sp/>clipPad);</highlight></codeline>
<codeline lineno="22337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transform.mapRect(boundingRect).intersects(painter-&gt;transform().mapRect(<ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>())))</highlight></codeline>
<codeline lineno="22338"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22339"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setTransform(transform);</highlight></codeline>
<codeline lineno="22340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_q_c_p_item_text_1a10d6585a030633aa79d5ebc5a437f183" kindref="member">mainBrush</ref>().style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_text_1a10d6585a030633aa79d5ebc5a437f183" kindref="member">mainBrush</ref>().<ref refid="class_q_c_p_item_text_1ac9cb0a8a27f64d1b40855910ea9ebd03" kindref="member">color</ref>().alpha()<sp/>!=<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="22341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_q_c_p_item_text_1a9ade32d362b22853659201c738269e2a" kindref="member">mainPen</ref>().style()<sp/>!=<sp/>Qt::NoPen<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_text_1a9ade32d362b22853659201c738269e2a" kindref="member">mainPen</ref>().<ref refid="class_q_c_p_item_text_1ac9cb0a8a27f64d1b40855910ea9ebd03" kindref="member">color</ref>().alpha()<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="22342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setPen(<ref refid="class_q_c_p_item_text_1a9ade32d362b22853659201c738269e2a" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="22344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_item_text_1a10d6585a030633aa79d5ebc5a437f183" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="22345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(textBoxRect);</highlight></codeline>
<codeline lineno="22346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22347"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22348"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(QPen(<ref refid="class_q_c_p_item_text_1ad7bf17e4945cc86bbf9a36331da059a0" kindref="member">mainColor</ref>()));</highlight></codeline>
<codeline lineno="22349"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawText(textRect,<sp/>Qt::TextDontClip|mTextAlignment,<sp/>mText);</highlight></codeline>
<codeline lineno="22350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22352"><highlight class="normal"></highlight></codeline>
<codeline lineno="22353"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22354"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_text_1ad248f988534a9d07bc7c220a2457142a" kindref="member">QCPItemText::anchorPixelPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22355"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>actual<sp/>rect<sp/>points<sp/>(pretty<sp/>much<sp/>copied<sp/>from<sp/>draw<sp/>function):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22357"><highlight class="normal"><sp/><sp/>QPointF<sp/>pos(position-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="22358"><highlight class="normal"><sp/><sp/>QTransform<sp/>transform;</highlight></codeline>
<codeline lineno="22359"><highlight class="normal"><sp/><sp/>transform.translate(pos.x(),<sp/>pos.y());</highlight></codeline>
<codeline lineno="22360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyIsNull(mRotation))</highlight></codeline>
<codeline lineno="22361"><highlight class="normal"><sp/><sp/><sp/><sp/>transform.rotate(mRotation);</highlight></codeline>
<codeline lineno="22362"><highlight class="normal"><sp/><sp/>QFontMetrics<sp/>fontMetrics(<ref refid="class_q_c_p_item_text_1a23d391bd6471c45e73f45add67ede902" kindref="member">mainFont</ref>());</highlight></codeline>
<codeline lineno="22363"><highlight class="normal"><sp/><sp/>QRect<sp/>textRect<sp/>=<sp/>fontMetrics.boundingRect(0,<sp/>0,<sp/>0,<sp/>0,<sp/>Qt::TextDontClip|mTextAlignment,<sp/>mText);</highlight></codeline>
<codeline lineno="22364"><highlight class="normal"><sp/><sp/>QRectF<sp/>textBoxRect<sp/>=<sp/>textRect.adjusted(-<ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.left(),<sp/>-<ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.top(),<sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.right(),<sp/><ref refid="class_q_c_p_item_text_1ae7b3ef0ce6046efd4b346d28f2e1fb67" kindref="member">mPadding</ref>.bottom());</highlight></codeline>
<codeline lineno="22365"><highlight class="normal"><sp/><sp/>QPointF<sp/>textPos<sp/>=<sp/><ref refid="class_q_c_p_item_text_1aa6e478b1ce198eace89157c4cacc3ddc" kindref="member">getTextDrawPoint</ref>(QPointF(0,<sp/>0),<sp/>textBoxRect,<sp/>mPositionAlignment);<sp/></highlight><highlight class="comment">//<sp/>0,<sp/>0<sp/>because<sp/>the<sp/>transform<sp/>does<sp/>the<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22366"><highlight class="normal"><sp/><sp/>textBoxRect.moveTopLeft(textPos.toPoint());</highlight></codeline>
<codeline lineno="22367"><highlight class="normal"><sp/><sp/>QPolygonF<sp/>rectPoly<sp/>=<sp/>transform.map(QPolygonF(textBoxRect));</highlight></codeline>
<codeline lineno="22368"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(anchorId)</highlight></codeline>
<codeline lineno="22370"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a30342ee15065715f045cb52eb77b904c" kindref="member">aiTopLeft</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rectPoly.at(0);</highlight></codeline>
<codeline lineno="22372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a55ce9699c71db6d264eb669bb0eb9aff" kindref="member">aiTop</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rectPoly.at(0)+rectPoly.at(1))*0.5;</highlight></codeline>
<codeline lineno="22373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a7b6ff56fcad4c78db0b793a96fce9580" kindref="member">aiTopRight</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rectPoly.at(1);</highlight></codeline>
<codeline lineno="22374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21ad4faa7def46db6df2fedd1926237b48f" kindref="member">aiRight</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rectPoly.at(1)+rectPoly.at(2))*0.5;</highlight></codeline>
<codeline lineno="22375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21af2072f259730ef47aa7ad7519f3a0255" kindref="member">aiBottomRight</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rectPoly.at(2);</highlight></codeline>
<codeline lineno="22376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a5773ad69b7f4cd2724ba46d8f31b0688" kindref="member">aiBottom</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rectPoly.at(2)+rectPoly.at(3))*0.5;</highlight></codeline>
<codeline lineno="22377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a489ec73da5a18c15e98a4f9b17ed301f" kindref="member">aiBottomLeft</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rectPoly.at(3);</highlight></codeline>
<codeline lineno="22378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a7f1c1b8c574c753e300a4759915a9170" kindref="member">aiLeft</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rectPoly.at(3)+rectPoly.at(0))*0.5;</highlight></codeline>
<codeline lineno="22379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22380"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22381"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>anchorId&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchorId;</highlight></codeline>
<codeline lineno="22382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="22383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22384"><highlight class="normal"></highlight></codeline>
<codeline lineno="22395"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_text_1aa6e478b1ce198eace89157c4cacc3ddc" kindref="member">QCPItemText::getTextDrawPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/>Qt::Alignment<sp/><ref refid="class_q_c_p_item_text_1af13c6adc480f268116ae72196eb44b06" kindref="member">positionAlignment</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22396"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positionAlignment<sp/>==<sp/>0<sp/>||<sp/>positionAlignment<sp/>==<sp/>(Qt::AlignLeft|Qt::AlignTop))</highlight></codeline>
<codeline lineno="22398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="22399"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22400"><highlight class="normal"><sp/><sp/>QPointF<sp/>result<sp/>=<sp/>pos;<sp/></highlight><highlight class="comment">//<sp/>start<sp/>at<sp/>top<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positionAlignment.testFlag(Qt::AlignHCenter))</highlight></codeline>
<codeline lineno="22402"><highlight class="normal"><sp/><sp/><sp/><sp/>result.rx()<sp/>-=<sp/>rect.width()/2.0;</highlight></codeline>
<codeline lineno="22403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positionAlignment.testFlag(Qt::AlignRight))</highlight></codeline>
<codeline lineno="22404"><highlight class="normal"><sp/><sp/><sp/><sp/>result.rx()<sp/>-=<sp/>rect.width();</highlight></codeline>
<codeline lineno="22405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positionAlignment.testFlag(Qt::AlignVCenter))</highlight></codeline>
<codeline lineno="22406"><highlight class="normal"><sp/><sp/><sp/><sp/>result.ry()<sp/>-=<sp/>rect.height()/2.0;</highlight></codeline>
<codeline lineno="22407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(positionAlignment.testFlag(Qt::AlignBottom))</highlight></codeline>
<codeline lineno="22408"><highlight class="normal"><sp/><sp/><sp/><sp/>result.ry()<sp/>-=<sp/>rect.height();</highlight></codeline>
<codeline lineno="22409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="22410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22411"><highlight class="normal"></highlight></codeline>
<codeline lineno="22417"><highlight class="normal">QFont<sp/><ref refid="class_q_c_p_item_text_1a23d391bd6471c45e73f45add67ede902" kindref="member">QCPItemText::mainFont</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22418"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/>mSelectedFont<sp/>:<sp/><ref refid="class_q_c_p_item_text_1a1dc87fe2a824820d549ffd7e644eef8d" kindref="member">mFont</ref>;</highlight></codeline>
<codeline lineno="22420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22421"><highlight class="normal"></highlight></codeline>
<codeline lineno="22427"><highlight class="normal">QColor<sp/><ref refid="class_q_c_p_item_text_1ad7bf17e4945cc86bbf9a36331da059a0" kindref="member">QCPItemText::mainColor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22428"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_text_1a7eb64e42f5f7998a97d8907ad25933c1" kindref="member">mSelectedColor</ref><sp/>:<sp/><ref refid="class_q_c_p_item_text_1a8407f284ad867f627878cc26ef433d08" kindref="member">mColor</ref>;</highlight></codeline>
<codeline lineno="22430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22431"><highlight class="normal"></highlight></codeline>
<codeline lineno="22437"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_text_1a9ade32d362b22853659201c738269e2a" kindref="member">QCPItemText::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22438"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_text_1a8eaec649606d6ead2d8d4dcb5691777c" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_text_1aa02388705dbbff1bf7b8aa872b5f579c" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="22440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22441"><highlight class="normal"></highlight></codeline>
<codeline lineno="22447"><highlight class="normal">QBrush<sp/><ref refid="class_q_c_p_item_text_1a10d6585a030633aa79d5ebc5a437f183" kindref="member">QCPItemText::mainBrush</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22448"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_text_1a28ccd097b42a216d81db9c6869f54a59" kindref="member">mSelectedBrush</ref><sp/>:<sp/><ref refid="class_q_c_p_item_text_1a2535911875faa459b8337f2efccb5cb8" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="22450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22451"><highlight class="normal"></highlight></codeline>
<codeline lineno="22452"><highlight class="normal"></highlight></codeline>
<codeline lineno="22456"></codeline>
<codeline lineno="22470"><highlight class="normal"><ref refid="class_q_c_p_item_ellipse_1a759b77ef002515eba0263b5447ecb3fb" kindref="member">QCPItemEllipse::QCPItemEllipse</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="22471"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="22472"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a6354d8762182a3502103fabe5fbb8512" kindref="member">topLeft</ref>(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;topLeft&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="22473"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_text_1a8ad47045c29af43b0312f7d93bb74374" kindref="member">bottomRight</ref>(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomRight&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="22474"><highlight class="normal"><sp/><sp/>topLeftRim(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;topLeftRim&quot;</highlight><highlight class="normal">),<sp/>aiTopLeftRim)),</highlight></codeline>
<codeline lineno="22475"><highlight class="normal"><sp/><sp/>top(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a55ce9699c71db6d264eb669bb0eb9aff" kindref="member">aiTop</ref>)),</highlight></codeline>
<codeline lineno="22476"><highlight class="normal"><sp/><sp/>topRightRim(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;topRightRim&quot;</highlight><highlight class="normal">),<sp/>aiTopRightRim)),</highlight></codeline>
<codeline lineno="22477"><highlight class="normal"><sp/><sp/>right(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21ad4faa7def46db6df2fedd1926237b48f" kindref="member">aiRight</ref>)),</highlight></codeline>
<codeline lineno="22478"><highlight class="normal"><sp/><sp/>bottomRightRim(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomRightRim&quot;</highlight><highlight class="normal">),<sp/>aiBottomRightRim)),</highlight></codeline>
<codeline lineno="22479"><highlight class="normal"><sp/><sp/>bottom(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottom&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a5773ad69b7f4cd2724ba46d8f31b0688" kindref="member">aiBottom</ref>)),</highlight></codeline>
<codeline lineno="22480"><highlight class="normal"><sp/><sp/>bottomLeftRim(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomLeftRim&quot;</highlight><highlight class="normal">),<sp/>aiBottomLeftRim)),</highlight></codeline>
<codeline lineno="22481"><highlight class="normal"><sp/><sp/>left(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_q_c_p_item_text_1a14a84e58f72519c8ae1d7a4a1dd23f21a7f1c1b8c574c753e300a4759915a9170" kindref="member">aiLeft</ref>)),</highlight></codeline>
<codeline lineno="22482"><highlight class="normal"><sp/><sp/>center(<ref refid="class_q_c_p_abstract_item_1af3fc92527802078ca395138748b629a7" kindref="member">createAnchor</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;center&quot;</highlight><highlight class="normal">),<sp/>aiCenter))</highlight></codeline>
<codeline lineno="22483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22484"><highlight class="normal"><sp/><sp/>topLeft-&gt;setCoords(0,<sp/>1);</highlight></codeline>
<codeline lineno="22485"><highlight class="normal"><sp/><sp/>bottomRight-&gt;setCoords(1,<sp/>0);</highlight></codeline>
<codeline lineno="22486"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22487"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="22488"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,<sp/>2));</highlight></codeline>
<codeline lineno="22489"><highlight class="normal"><sp/><sp/>setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22490"><highlight class="normal"><sp/><sp/>setSelectedBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22492"><highlight class="normal"></highlight></codeline>
<codeline lineno="22493"><highlight class="normal"><ref refid="class_q_c_p_item_ellipse_1a3c17073a1805d32b4e09b6ccde0bef76" kindref="member">QCPItemEllipse::~QCPItemEllipse</ref>()</highlight></codeline>
<codeline lineno="22494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22496"><highlight class="normal"></highlight></codeline>
<codeline lineno="22502"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1adb81a663ed2420fcfa011e49f678d1a6" kindref="member">QCPItemEllipse::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22504"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_ellipse_1a16ad9389acf028a7e4ac8fd7a550b2e4" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1adb67471eabaf1214c99767f1653ca0ed" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22506"><highlight class="normal"></highlight></codeline>
<codeline lineno="22512"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a6c542fba1dc918041c583f58a50dde99" kindref="member">QCPItemEllipse::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22514"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_ellipse_1a57b047abfce6f1a84ed46ca668c90e21" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1adb67471eabaf1214c99767f1653ca0ed" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22516"><highlight class="normal"></highlight></codeline>
<codeline lineno="22523"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a49fc74e6965834e873d027d026def798" kindref="member">QCPItemEllipse::setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22525"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_ellipse_1a6fa59478cd3ad1b10e6c1f6cedc84bd6" kindref="member">mBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1ac012e4fd59fdb1afb6554937bae8f7e1" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22527"><highlight class="normal"></highlight></codeline>
<codeline lineno="22534"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a9693501cfaa43a099655c75bed0dab3f" kindref="member">QCPItemEllipse::setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22536"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_ellipse_1a2e49d5547478aa36910ed8a2dcc8a5c0" kindref="member">mSelectedBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1ac012e4fd59fdb1afb6554937bae8f7e1" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22538"><highlight class="normal"></highlight></codeline>
<codeline lineno="22539"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22540"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1acd7e5f9528630b2ab5987e2a5782eb7c" kindref="member">QCPItemEllipse::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22541"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22542"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="22543"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="22544"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="22545"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="22547"><highlight class="normal"><sp/><sp/>QPointF<sp/>p1<sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1a12fd8420c06718d0c8a2303d6a652848" kindref="member">topLeft</ref>-&gt;pixelPoint();</highlight></codeline>
<codeline lineno="22548"><highlight class="normal"><sp/><sp/>QPointF<sp/>p2<sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1ab73c8deafc0d8d1ef7d75b6cdcc37159" kindref="member">bottomRight</ref>-&gt;pixelPoint();</highlight></codeline>
<codeline lineno="22549"><highlight class="normal"><sp/><sp/>QPointF<sp/>center((p1+p2)/2.0);</highlight></codeline>
<codeline lineno="22550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>qAbs(p1.x()-p2.x())/2.0;</highlight></codeline>
<codeline lineno="22551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>qAbs(p1.y()-p2.y())/2.0;</highlight></codeline>
<codeline lineno="22552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>pos.x()-center.x();</highlight></codeline>
<codeline lineno="22553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>pos.y()-center.y();</highlight></codeline>
<codeline lineno="22554"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>distance<sp/>to<sp/>border:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>1.0/qSqrt(x*x/(a*a)+y*y/(b*b));</highlight></codeline>
<codeline lineno="22557"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>qAbs(c-1)*qSqrt(x*x+y*y);</highlight></codeline>
<codeline lineno="22558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filled<sp/>ellipse,<sp/>allow<sp/>click<sp/>inside<sp/>to<sp/>count<sp/>as<sp/>hit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22559"><highlight class="normal"><sp/><sp/>if<sp/>(result<sp/>&gt;<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;selectionTolerance()*0.99<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_ellipse_1a6fa59478cd3ad1b10e6c1f6cedc84bd6" kindref="member">mBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_ellipse_1a6fa59478cd3ad1b10e6c1f6cedc84bd6" kindref="member">mBrush</ref>.color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="22560"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x*x/(a*a)<sp/>+<sp/>y*y/(b*b)<sp/>&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="22562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="22563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="22565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22566"><highlight class="normal"></highlight></codeline>
<codeline lineno="22567"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22568"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1afe97ec827adb05f000fe007783faae3c" kindref="member">QCPItemEllipse::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="22569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22570"><highlight class="normal"><sp/><sp/>QPointF<sp/>p1<sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1a12fd8420c06718d0c8a2303d6a652848" kindref="member">topLeft</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="22571"><highlight class="normal"><sp/><sp/>QPointF<sp/>p2<sp/>=<sp/><ref refid="class_q_c_p_item_ellipse_1ab73c8deafc0d8d1ef7d75b6cdcc37159" kindref="member">bottomRight</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>();</highlight></codeline>
<codeline lineno="22572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1.toPoint()<sp/>==<sp/>p2.toPoint())</highlight></codeline>
<codeline lineno="22573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22574"><highlight class="normal"><sp/><sp/>QRectF<sp/>ellipseRect<sp/>=<sp/>QRectF(p1,<sp/>p2).normalized();</highlight></codeline>
<codeline lineno="22575"><highlight class="normal"><sp/><sp/>QRect<sp/>clip<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>().adjusted(-<ref refid="class_q_c_p_item_ellipse_1afc78d49ed5ffa886bccf18f297f83d30" kindref="member">mainPen</ref>().widthF(),<sp/>-<ref refid="class_q_c_p_item_ellipse_1afc78d49ed5ffa886bccf18f297f83d30" kindref="member">mainPen</ref>().widthF(),<sp/><ref refid="class_q_c_p_item_ellipse_1afc78d49ed5ffa886bccf18f297f83d30" kindref="member">mainPen</ref>().widthF(),<sp/><ref refid="class_q_c_p_item_ellipse_1afc78d49ed5ffa886bccf18f297f83d30" kindref="member">mainPen</ref>().widthF());</highlight></codeline>
<codeline lineno="22576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ellipseRect.intersects(clip))<sp/></highlight><highlight class="comment">//<sp/>only<sp/>draw<sp/>if<sp/>bounding<sp/>rect<sp/>of<sp/>ellipse<sp/>is<sp/>visible<sp/>in<sp/>cliprect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22577"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22578"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_item_ellipse_1afc78d49ed5ffa886bccf18f297f83d30" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="22579"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_item_ellipse_1a2a9757204877c9d0fd07adfb26d6b1d8" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="22580"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>drawEllipse<sp/>sometimes<sp/>throws<sp/>exceptions<sp/>if<sp/>ellipse<sp/>is<sp/>too<sp/>big</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(ellipseRect);</highlight></codeline>
<codeline lineno="22585"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22586"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="22587"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>too<sp/>large<sp/>for<sp/>memory,<sp/>setting<sp/>invisible&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">setVisible</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22594"><highlight class="normal"></highlight></codeline>
<codeline lineno="22595"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22596"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_ellipse_1ad3c607304dba081e2f778b6a81b903bb" kindref="member">QCPItemEllipse::anchorPixelPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22597"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22598"><highlight class="normal"><sp/><sp/>QRectF<sp/>rect<sp/>=<sp/>QRectF(<ref refid="class_q_c_p_item_ellipse_1a12fd8420c06718d0c8a2303d6a652848" kindref="member">topLeft</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>(),<sp/><ref refid="class_q_c_p_item_ellipse_1ab73c8deafc0d8d1ef7d75b6cdcc37159" kindref="member">bottomRight</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>());</highlight></codeline>
<codeline lineno="22599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(anchorId)</highlight></codeline>
<codeline lineno="22600"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45eab2538849b88921e7fc1dcc15b2a6109d" kindref="member">aiTopLeftRim</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.center()+(rect.topLeft()-rect.center())*1/qSqrt(2);</highlight></codeline>
<codeline lineno="22602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45ea83e55b0c1799baac1eecab52bcbe096d" kindref="member">aiTop</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topLeft()+rect.topRight())*0.5;</highlight></codeline>
<codeline lineno="22603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45ea415d82233c14f0c70c245d50e706e75b" kindref="member">aiTopRightRim</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.center()+(rect.topRight()-rect.center())*1/qSqrt(2);</highlight></codeline>
<codeline lineno="22604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45ea0f0dcfdf87d9405b53b2129740fb6ba6" kindref="member">aiRight</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topRight()+rect.bottomRight())*0.5;</highlight></codeline>
<codeline lineno="22605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45eab62732e96d67801d50c6a9bdebc374d0" kindref="member">aiBottomRightRim</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.center()+(rect.bottomRight()-rect.center())*1/qSqrt(2);</highlight></codeline>
<codeline lineno="22606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45ea5894287dedaeec1f48394fd950ccff5b" kindref="member">aiBottom</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.bottomLeft()+rect.bottomRight())*0.5;</highlight></codeline>
<codeline lineno="22607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45ea7b8101bfc590af8ce32961f6545c4f90" kindref="member">aiBottomLeftRim</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.center()+(rect.bottomLeft()-rect.center())*1/qSqrt(2);</highlight></codeline>
<codeline lineno="22608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45eae74dad00419a0e1f42877510158fb922" kindref="member">aiLeft</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topLeft()+rect.bottomLeft())*0.5;</highlight></codeline>
<codeline lineno="22609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_ellipse_1a415009889543169f35b70795f415e45ea580ec0e9b9fd1488fccf5783e52c0c02" kindref="member">aiCenter</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topLeft()+rect.bottomRight())*0.5;</highlight></codeline>
<codeline lineno="22610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22611"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22612"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>anchorId&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchorId;</highlight></codeline>
<codeline lineno="22613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="22614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22615"><highlight class="normal"></highlight></codeline>
<codeline lineno="22621"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_ellipse_1afc78d49ed5ffa886bccf18f297f83d30" kindref="member">QCPItemEllipse::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22622"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_ellipse_1a57b047abfce6f1a84ed46ca668c90e21" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_ellipse_1a16ad9389acf028a7e4ac8fd7a550b2e4" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="22624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22625"><highlight class="normal"></highlight></codeline>
<codeline lineno="22631"><highlight class="normal">QBrush<sp/><ref refid="class_q_c_p_item_ellipse_1a2a9757204877c9d0fd07adfb26d6b1d8" kindref="member">QCPItemEllipse::mainBrush</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22632"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_ellipse_1a2e49d5547478aa36910ed8a2dcc8a5c0" kindref="member">mSelectedBrush</ref><sp/>:<sp/><ref refid="class_q_c_p_item_ellipse_1a6fa59478cd3ad1b10e6c1f6cedc84bd6" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="22634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22635"><highlight class="normal"></highlight></codeline>
<codeline lineno="22636"><highlight class="normal"></highlight></codeline>
<codeline lineno="22640"></codeline>
<codeline lineno="22660"><highlight class="normal"><ref refid="class_q_c_p_item_pixmap_1aa6de42a37261b21a5480e7da122345c3" kindref="member">QCPItemPixmap::QCPItemPixmap</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="22661"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="22662"><highlight class="normal"><sp/><sp/>topLeft(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;topLeft&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="22663"><highlight class="normal"><sp/><sp/>bottomRight(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomRight&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="22664"><highlight class="normal"><sp/><sp/>top(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">),<sp/>aiTop)),</highlight></codeline>
<codeline lineno="22665"><highlight class="normal"><sp/><sp/>topRight(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;topRight&quot;</highlight><highlight class="normal">),<sp/>aiTopRight)),</highlight></codeline>
<codeline lineno="22666"><highlight class="normal"><sp/><sp/>right(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">),<sp/>aiRight)),</highlight></codeline>
<codeline lineno="22667"><highlight class="normal"><sp/><sp/>bottom(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottom&quot;</highlight><highlight class="normal">),<sp/>aiBottom)),</highlight></codeline>
<codeline lineno="22668"><highlight class="normal"><sp/><sp/>bottomLeft(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;bottomLeft&quot;</highlight><highlight class="normal">),<sp/>aiBottomLeft)),</highlight></codeline>
<codeline lineno="22669"><highlight class="normal"><sp/><sp/>left(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">),<sp/>aiLeft))</highlight></codeline>
<codeline lineno="22670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22671"><highlight class="normal"><sp/><sp/>topLeft-&gt;setCoords(0,<sp/>1);</highlight></codeline>
<codeline lineno="22672"><highlight class="normal"><sp/><sp/>bottomRight-&gt;setCoords(1,<sp/>0);</highlight></codeline>
<codeline lineno="22673"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22674"><highlight class="normal"><sp/><sp/>setPen(Qt::NoPen);</highlight></codeline>
<codeline lineno="22675"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue));</highlight></codeline>
<codeline lineno="22676"><highlight class="normal"><sp/><sp/>setScaled(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Qt::KeepAspectRatio,<sp/>Qt::SmoothTransformation);</highlight></codeline>
<codeline lineno="22677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22678"><highlight class="normal"></highlight></codeline>
<codeline lineno="22679"><highlight class="normal"><ref refid="class_q_c_p_item_pixmap_1a810cac6a409d963cda6ea2d3152f1fd0" kindref="member">QCPItemPixmap::~QCPItemPixmap</ref>()</highlight></codeline>
<codeline lineno="22680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22682"><highlight class="normal"></highlight></codeline>
<codeline lineno="22686"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a726b69ea4025edf48f9b29b6450548a7" kindref="member">QCPItemPixmap::setPixmap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pixmap)</highlight></codeline>
<codeline lineno="22687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22688"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a1396cce7f26c7b8e9512906284380c4d" kindref="member">mPixmap</ref><sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a73dea89e0eb45127a2705e2c7991b8d8" kindref="member">pixmap</ref>;</highlight></codeline>
<codeline lineno="22689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_pixmap_1a1396cce7f26c7b8e9512906284380c4d" kindref="member">mPixmap</ref>.isNull())</highlight></codeline>
<codeline lineno="22690"><highlight class="normal"><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pixmap<sp/>is<sp/>null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22692"><highlight class="normal"></highlight></codeline>
<codeline lineno="22697"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1ab4d44529a1c6c8d37d0ea7560e042777" kindref="member">QCPItemPixmap::setScaled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaled,<sp/>Qt::AspectRatioMode<sp/>aspectRatioMode,<sp/>Qt::TransformationMode<sp/>transformationMode)</highlight></codeline>
<codeline lineno="22698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22699"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a8fe670a529cd46a9b8afd9fc1203bc3f" kindref="member">mScaled</ref><sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a54026b89dff3c60376c2360f01b6fb83" kindref="member">scaled</ref>;</highlight></codeline>
<codeline lineno="22700"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a8dc6b6c1e106ac523efae22d5fe55bab" kindref="member">mAspectRatioMode</ref><sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1ac5b95c097169e107a61eebbb7c77523c" kindref="member">aspectRatioMode</ref>;</highlight></codeline>
<codeline lineno="22701"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1ac9ecad3b9842363754e32eda2cf821bd" kindref="member">mTransformationMode</ref><sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a1d4751a7b9588354fc8e726d891153f7" kindref="member">transformationMode</ref>;</highlight></codeline>
<codeline lineno="22702"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a8bced3027b326b290726cd1979c7cfc6" kindref="member">updateScaledPixmap</ref>();</highlight></codeline>
<codeline lineno="22703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22704"><highlight class="normal"></highlight></codeline>
<codeline lineno="22710"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1acdade1305edb4b5cae14f97fd132065f" kindref="member">QCPItemPixmap::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22712"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1acfee1124eb51a1887aaf8de10777c7a1" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1ab2b821c80cfade589472e933b9c4361f" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22714"><highlight class="normal"></highlight></codeline>
<codeline lineno="22720"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1afc5e479e88e53740176ce77cb70dd67a" kindref="member">QCPItemPixmap::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22722"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a0949e5bb6a261fc4e9668e28e2effcfa" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1ab2b821c80cfade589472e933b9c4361f" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22724"><highlight class="normal"></highlight></codeline>
<codeline lineno="22725"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22726"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a9f8436aa141fa0fb504191c882c2f4d9" kindref="member">QCPItemPixmap::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22727"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22728"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="22729"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="22730"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="22731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22732"><highlight class="normal"><sp/><sp/>return<sp/><ref refid="class_q_c_p_abstract_item_1a4c0e14c4e92df91174cb7183fb363069" kindref="member">rectSelectTest</ref>(<ref refid="class_q_c_p_item_pixmap_1a245ef0c626cab7096a810442f2f6a2d9" kindref="member">getFinalRect</ref>(),<sp/>pos,<sp/>true);</highlight></codeline>
<codeline lineno="22733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22734"><highlight class="normal"></highlight></codeline>
<codeline lineno="22735"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22736"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap" kindref="compound">QCPItemPixmap</ref>::<ref refid="class_q_c_p_item_pixmap_1a879e8076c2db01a38b34cfa73ec95d2f" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="22737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipHorz<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipVert<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22740"><highlight class="normal"><sp/><sp/>QRect<sp/>rect<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a245ef0c626cab7096a810442f2f6a2d9" kindref="member">getFinalRect</ref>(&amp;flipHorz,<sp/>&amp;flipVert);</highlight></codeline>
<codeline lineno="22741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipPad<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1af21085516585c475dc9d839e7f377233" kindref="member">mainPen</ref>().style()<sp/>==<sp/>Qt::NoPen<sp/>?<sp/>0<sp/>:<sp/><ref refid="class_q_c_p_item_pixmap_1af21085516585c475dc9d839e7f377233" kindref="member">mainPen</ref>().widthF();</highlight></codeline>
<codeline lineno="22742"><highlight class="normal"><sp/><sp/>QRect<sp/>boundingRect<sp/>=<sp/>rect.adjusted(-clipPad,<sp/>-clipPad,<sp/>clipPad,<sp/>clipPad);</highlight></codeline>
<codeline lineno="22743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boundingRect.intersects(<ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>()))</highlight></codeline>
<codeline lineno="22744"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a8bced3027b326b290726cd1979c7cfc6" kindref="member">updateScaledPixmap</ref>(rect,<sp/>flipHorz,<sp/>flipVert);</highlight></codeline>
<codeline lineno="22746"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawPixmap(rect.topLeft(),<sp/><ref refid="class_q_c_p_item_pixmap_1a8fe670a529cd46a9b8afd9fc1203bc3f" kindref="member">mScaled</ref><sp/>?<sp/><ref refid="class_q_c_p_item_pixmap_1a2ebc66e15b9f1264563d58f29ba1bc00" kindref="member">mScaledPixmap</ref><sp/>:<sp/><ref refid="class_q_c_p_item_pixmap_1a1396cce7f26c7b8e9512906284380c4d" kindref="member">mPixmap</ref>);</highlight></codeline>
<codeline lineno="22747"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>pen<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1af21085516585c475dc9d839e7f377233" kindref="member">mainPen</ref>();</highlight></codeline>
<codeline lineno="22748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pen.style()<sp/>!=<sp/>Qt::NoPen)</highlight></codeline>
<codeline lineno="22749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setPen(pen);</highlight></codeline>
<codeline lineno="22751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(rect);</highlight></codeline>
<codeline lineno="22753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22756"><highlight class="normal"></highlight></codeline>
<codeline lineno="22757"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22758"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_pixmap_1a88abce3c1027f371cddcf6dad35ffbb1" kindref="member">QCPItemPixmap::anchorPixelPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22759"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipHorz;</highlight></codeline>
<codeline lineno="22761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipVert;</highlight></codeline>
<codeline lineno="22762"><highlight class="normal"><sp/><sp/>QRect<sp/>rect<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a245ef0c626cab7096a810442f2f6a2d9" kindref="member">getFinalRect</ref>(&amp;flipHorz,<sp/>&amp;flipVert);</highlight></codeline>
<codeline lineno="22763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>actually<sp/>want<sp/>denormal<sp/>rects<sp/>(negative<sp/>width/height)<sp/>here,<sp/>so<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>flipped<sp/>state:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flipHorz)</highlight></codeline>
<codeline lineno="22766"><highlight class="normal"><sp/><sp/><sp/><sp/>rect.adjust(rect.width(),<sp/>0,<sp/>-rect.width(),<sp/>0);</highlight></codeline>
<codeline lineno="22767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flipVert)</highlight></codeline>
<codeline lineno="22768"><highlight class="normal"><sp/><sp/><sp/><sp/>rect.adjust(0,<sp/>rect.height(),<sp/>0,<sp/>-rect.height());</highlight></codeline>
<codeline lineno="22769"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(anchorId)</highlight></codeline>
<codeline lineno="22771"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a0ea7f65edb7395e02de521915f221174a90e523ebaed7921ca90cf1b08944ece5" kindref="member">aiTop</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topLeft()+rect.topRight())*0.5;</highlight></codeline>
<codeline lineno="22773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a0ea7f65edb7395e02de521915f221174a33c256cdec46fa1587534fcd6e776799" kindref="member">aiTopRight</ref>:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.topRight();</highlight></codeline>
<codeline lineno="22774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a0ea7f65edb7395e02de521915f221174ab22d91dae59c0d4a65416a0d677b2d05" kindref="member">aiRight</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topRight()+rect.bottomRight())*0.5;</highlight></codeline>
<codeline lineno="22775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a0ea7f65edb7395e02de521915f221174a04b5e041b4dd0def2b60c5cfea2bc1a4" kindref="member">aiBottom</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.bottomLeft()+rect.bottomRight())*0.5;</highlight></codeline>
<codeline lineno="22776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a0ea7f65edb7395e02de521915f221174ae14886b381136898e37e89af5046a1cc" kindref="member">aiBottomLeft</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rect.bottomLeft();</highlight></codeline>
<codeline lineno="22777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a0ea7f65edb7395e02de521915f221174a9efe71239b9409ebe1c2813a37807f2a" kindref="member">aiLeft</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rect.topLeft()+rect.bottomLeft())*0.5;;</highlight></codeline>
<codeline lineno="22778"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22779"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22780"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>anchorId&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchorId;</highlight></codeline>
<codeline lineno="22781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="22782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22783"><highlight class="normal"></highlight></codeline>
<codeline lineno="22797"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_pixmap_1a8bced3027b326b290726cd1979c7cfc6" kindref="member">QCPItemPixmap::updateScaledPixmap</ref>(QRect<sp/>finalRect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipHorz,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipVert)</highlight></codeline>
<codeline lineno="22798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_pixmap_1a1396cce7f26c7b8e9512906284380c4d" kindref="member">mPixmap</ref>.isNull())</highlight></codeline>
<codeline lineno="22800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22801"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_pixmap_1a8fe670a529cd46a9b8afd9fc1203bc3f" kindref="member">mScaled</ref>)</highlight></codeline>
<codeline lineno="22803"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalRect.isNull())</highlight></codeline>
<codeline lineno="22805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finalRect<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a245ef0c626cab7096a810442f2f6a2d9" kindref="member">getFinalRect</ref>(&amp;flipHorz,<sp/>&amp;flipVert);</highlight></codeline>
<codeline lineno="22806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalRect.size()<sp/>!=<sp/><ref refid="class_q_c_p_item_pixmap_1a2ebc66e15b9f1264563d58f29ba1bc00" kindref="member">mScaledPixmap</ref>.size())</highlight></codeline>
<codeline lineno="22807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a2ebc66e15b9f1264563d58f29ba1bc00" kindref="member">mScaledPixmap</ref><sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a1396cce7f26c7b8e9512906284380c4d" kindref="member">mPixmap</ref>.scaled(finalRect.size(),<sp/><ref refid="class_q_c_p_item_pixmap_1a8dc6b6c1e106ac523efae22d5fe55bab" kindref="member">mAspectRatioMode</ref>,<sp/><ref refid="class_q_c_p_item_pixmap_1ac9ecad3b9842363754e32eda2cf821bd" kindref="member">mTransformationMode</ref>);</highlight></codeline>
<codeline lineno="22809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flipHorz<sp/>||<sp/>flipVert)</highlight></codeline>
<codeline lineno="22810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a2ebc66e15b9f1264563d58f29ba1bc00" kindref="member">mScaledPixmap</ref><sp/>=<sp/>QPixmap::fromImage(<ref refid="class_q_c_p_item_pixmap_1a2ebc66e15b9f1264563d58f29ba1bc00" kindref="member">mScaledPixmap</ref>.toImage().mirrored(flipHorz,<sp/>flipVert));</highlight></codeline>
<codeline lineno="22811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22812"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_q_c_p_item_pixmap_1a2ebc66e15b9f1264563d58f29ba1bc00" kindref="member">mScaledPixmap</ref>.isNull())</highlight></codeline>
<codeline lineno="22813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_pixmap_1a2ebc66e15b9f1264563d58f29ba1bc00" kindref="member">mScaledPixmap</ref><sp/>=<sp/>QPixmap();</highlight></codeline>
<codeline lineno="22814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22815"><highlight class="normal"></highlight></codeline>
<codeline lineno="22830"><highlight class="normal">QRect<sp/><ref refid="class_q_c_p_item_pixmap_1a245ef0c626cab7096a810442f2f6a2d9" kindref="member">QCPItemPixmap::getFinalRect</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*flippedHorz,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*flippedVert)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22831"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22832"><highlight class="normal"><sp/><sp/>QRect<sp/>result;</highlight></codeline>
<codeline lineno="22833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipHorz<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flipVert<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22835"><highlight class="normal"><sp/><sp/>QPoint<sp/>p1<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a43c281ef6ad46f3cf04f365289abe51a" kindref="member">topLeft</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>().toPoint();</highlight></codeline>
<codeline lineno="22836"><highlight class="normal"><sp/><sp/>QPoint<sp/>p2<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1abcc38063f9502b876bf6615c45cc0994" kindref="member">bottomRight</ref>-&gt;<ref refid="class_q_c_p_item_position_1ae490f9c76ee2ba33752c495d3b6e8fb5" kindref="member">pixelPoint</ref>().toPoint();</highlight></codeline>
<codeline lineno="22837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1<sp/>==<sp/>p2)</highlight></codeline>
<codeline lineno="22838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRect(p1,<sp/>QSize(0,<sp/>0));</highlight></codeline>
<codeline lineno="22839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_pixmap_1a8fe670a529cd46a9b8afd9fc1203bc3f" kindref="member">mScaled</ref>)</highlight></codeline>
<codeline lineno="22840"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22841"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>newSize<sp/>=<sp/>QSize(p2.x()-p1.x(),<sp/>p2.y()-p1.y());</highlight></codeline>
<codeline lineno="22842"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/><ref refid="class_q_c_p_item_pixmap_1a43c281ef6ad46f3cf04f365289abe51a" kindref="member">topLeft</ref><sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="22843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSize.width()<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="22844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flipHorz<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSize.rwidth()<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="22847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>topLeft.setX(p2.x());</highlight></codeline>
<codeline lineno="22848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSize.height()<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="22850"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flipVert<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSize.rheight()<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="22853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>topLeft.setY(p2.y());</highlight></codeline>
<codeline lineno="22854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22855"><highlight class="normal"><sp/><sp/><sp/><sp/>QSize<sp/>scaledSize<sp/>=<sp/><ref refid="class_q_c_p_item_pixmap_1a1396cce7f26c7b8e9512906284380c4d" kindref="member">mPixmap</ref>.size();</highlight></codeline>
<codeline lineno="22856"><highlight class="normal"><sp/><sp/><sp/><sp/>scaledSize.scale(newSize,<sp/><ref refid="class_q_c_p_item_pixmap_1a8dc6b6c1e106ac523efae22d5fe55bab" kindref="member">mAspectRatioMode</ref>);</highlight></codeline>
<codeline lineno="22857"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>QRect(topLeft,<sp/>scaledSize);</highlight></codeline>
<codeline lineno="22858"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22859"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22860"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>QRect(p1,<sp/><ref refid="class_q_c_p_item_pixmap_1a1396cce7f26c7b8e9512906284380c4d" kindref="member">mPixmap</ref>.size());</highlight></codeline>
<codeline lineno="22861"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flippedHorz)</highlight></codeline>
<codeline lineno="22863"><highlight class="normal"><sp/><sp/><sp/><sp/>*flippedHorz<sp/>=<sp/>flipHorz;</highlight></codeline>
<codeline lineno="22864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flippedVert)</highlight></codeline>
<codeline lineno="22865"><highlight class="normal"><sp/><sp/><sp/><sp/>*flippedVert<sp/>=<sp/>flipVert;</highlight></codeline>
<codeline lineno="22866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="22867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22868"><highlight class="normal"></highlight></codeline>
<codeline lineno="22874"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_pixmap_1af21085516585c475dc9d839e7f377233" kindref="member">QCPItemPixmap::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="22875"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_pixmap_1a0949e5bb6a261fc4e9668e28e2effcfa" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_pixmap_1acfee1124eb51a1887aaf8de10777c7a1" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="22877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22878"><highlight class="normal"></highlight></codeline>
<codeline lineno="22879"><highlight class="normal"></highlight></codeline>
<codeline lineno="22883"></codeline>
<codeline lineno="22919"><highlight class="normal"><ref refid="class_q_c_p_item_tracer_1adc5ca846eeac323db4aa1fc4081e36be" kindref="member">QCPItemTracer::QCPItemTracer</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="22920"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="22921"><highlight class="normal"><sp/><sp/>position(<ref refid="class_q_c_p_abstract_item_1a75036d39c4d4e2e1a7dd145fff915d32" kindref="member">createPosition</ref>(QLatin1String(</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="22922"><highlight class="normal"><sp/><sp/>mGraph(0)</highlight></codeline>
<codeline lineno="22923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22924"><highlight class="normal"><sp/><sp/>position-&gt;setCoords(0,<sp/>0);</highlight></codeline>
<codeline lineno="22925"><highlight class="normal"></highlight></codeline>
<codeline lineno="22926"><highlight class="normal"><sp/><sp/>setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22927"><highlight class="normal"><sp/><sp/>setSelectedBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="22928"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="22929"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,<sp/>2));</highlight></codeline>
<codeline lineno="22930"><highlight class="normal"><sp/><sp/>setStyle(tsCrosshair);</highlight></codeline>
<codeline lineno="22931"><highlight class="normal"><sp/><sp/>setSize(6);</highlight></codeline>
<codeline lineno="22932"><highlight class="normal"><sp/><sp/>setInterpolating(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22933"><highlight class="normal"><sp/><sp/>setGraphKey(0);</highlight></codeline>
<codeline lineno="22934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22935"><highlight class="normal"></highlight></codeline>
<codeline lineno="22936"><highlight class="normal"><ref refid="class_q_c_p_item_tracer_1a43686565a9b70815915618636b9bdf0f" kindref="member">QCPItemTracer::~QCPItemTracer</ref>()</highlight></codeline>
<codeline lineno="22937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22939"><highlight class="normal"></highlight></codeline>
<codeline lineno="22945"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1af8048636fc1ef0152e51809b008df2ca" kindref="member">QCPItemTracer::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22947"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a579e3bd6bd16d6aaff03638dc8a99a69" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a1f51b61e98c276298a0874d5e89707f0" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22949"><highlight class="normal"></highlight></codeline>
<codeline lineno="22955"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1ae1bf70db7f13f928660168cd3e5069f3" kindref="member">QCPItemTracer::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="22956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22957"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a3f61829784200819661d1e2a5354d866" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a1f51b61e98c276298a0874d5e89707f0" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="22958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22959"><highlight class="normal"></highlight></codeline>
<codeline lineno="22965"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2c303f7470a30084daa201ed556b3c36" kindref="member">QCPItemTracer::setBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22967"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" kindref="member">mBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1af07527750cfb6afc3c0ba4bec012011f" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22969"><highlight class="normal"></highlight></codeline>
<codeline lineno="22975"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a0f55c084980a7a312af859d3e7b558ef" kindref="member">QCPItemTracer::setSelectedBrush</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QBrush<sp/>&amp;brush)</highlight></codeline>
<codeline lineno="22976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22977"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a1c15d2adde40efdcc0ef1ff78fd256a6" kindref="member">mSelectedBrush</ref><sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1af07527750cfb6afc3c0ba4bec012011f" kindref="member">brush</ref>;</highlight></codeline>
<codeline lineno="22978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22979"><highlight class="normal"></highlight></codeline>
<codeline lineno="22984"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1ae47fe0617f5fef5fdb766999569be10a" kindref="member">QCPItemTracer::setSize</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="22985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22986"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a575153a24bb357d1e006f6bc3bd099b9" kindref="member">mSize</ref><sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a2607fcb3d01e90773ea1532fd6803760" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="22987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22988"><highlight class="normal"></highlight></codeline>
<codeline lineno="22995"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a41a2ac4f1acd7897b4e2a2579c03204e" kindref="member">QCPItemTracer::setStyle</ref>(<ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500" kindref="member">QCPItemTracer::TracerStyle</ref><sp/>style)</highlight></codeline>
<codeline lineno="22996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22997"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1afb1f236bebf417544e0138fef22a292e" kindref="member">mStyle</ref><sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a871832dace1709f877c3136fac7ae1ec" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="22998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22999"><highlight class="normal"></highlight></codeline>
<codeline lineno="23010"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1af5886f4ded8dd68cb4f3388f390790c0" kindref="member">QCPItemTracer::setGraph</ref>(<ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref><sp/>*graph)</highlight></codeline>
<codeline lineno="23011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph)</highlight></codeline>
<codeline lineno="23013"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph-&gt;<ref refid="class_q_c_p_layerable_1ab7e0e94461566093d36ffc0f5312b109" kindref="member">parentPlot</ref>()<sp/>==<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>)</highlight></codeline>
<codeline lineno="23015"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setType(<ref refid="class_q_c_p_item_position_1aad9936c22bf43e3d358552f6e86dbdc8ad5ffb8dc99ad73263f7010c77342294c" kindref="member">QCPItemPosition::ptPlotCoords</ref>);</highlight></codeline>
<codeline lineno="23017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setAxes(graph-&gt;<ref refid="class_q_c_p_abstract_plottable_1a72c7a09c22963f2c943f07112b311103" kindref="member">keyAxis</ref>(),<sp/>graph-&gt;<ref refid="class_q_c_p_abstract_plottable_1a3106f9d34d330a6097a8ec5905e5b519" kindref="member">valueAxis</ref>());</highlight></codeline>
<codeline lineno="23018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref><sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a74c90da0e6730839b8d7cf6445a4ec1f" kindref="member">graph</ref>;</highlight></codeline>
<codeline lineno="23019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a5b90296109e36384aedbc8908a670413" kindref="member">updatePosition</ref>();</highlight></codeline>
<codeline lineno="23020"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;graph<sp/>isn&apos;t<sp/>in<sp/>same<sp/>QCustomPlot<sp/>instance<sp/>as<sp/>this<sp/>item&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23022"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23023"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23024"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23025"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23027"><highlight class="normal"></highlight></codeline>
<codeline lineno="23037"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a6840143b42f3b685cedf7c6d83a704c8" kindref="member">QCPItemTracer::setGraphKey</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key)</highlight></codeline>
<codeline lineno="23038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23039"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" kindref="member">mGraphKey</ref><sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="23040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23041"><highlight class="normal"></highlight></codeline>
<codeline lineno="23053"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a6c244a9d1175bef12b50afafd4f5fcd2" kindref="member">QCPItemTracer::setInterpolating</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="23054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23055"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1afab37c22ad39f235921e86f93cd84595" kindref="member">mInterpolating</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="23056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23057"><highlight class="normal"></highlight></codeline>
<codeline lineno="23058"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23059"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1ae71f3728421c83c188c117279ca050fd" kindref="member">QCPItemTracer::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="23060"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23061"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="23062"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="23063"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="23064"><highlight class="normal"></highlight></codeline>
<codeline lineno="23065"><highlight class="normal"><sp/><sp/>QPointF<sp/>center(position-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w<sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a575153a24bb357d1e006f6bc3bd099b9" kindref="member">mSize</ref>/2.0;</highlight></codeline>
<codeline lineno="23067"><highlight class="normal"><sp/><sp/>QRect<sp/>clip<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>();</highlight></codeline>
<codeline lineno="23068"><highlight class="normal"><sp/><sp/>switch<sp/>(<ref refid="class_q_c_p_item_tracer_1afb1f236bebf417544e0138fef22a292e" kindref="member">mStyle</ref>)</highlight></codeline>
<codeline lineno="23069"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" kindref="member">tsNone</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="23071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a3323fb04017146e4885e080a459472fa" kindref="member">tsPlus</ref>:</highlight></codeline>
<codeline lineno="23072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>().intersects(QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w)).toRect()))</highlight></codeline>
<codeline lineno="23074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(qMin(<ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>(center+QPointF(-w,<sp/>0),<sp/>center+QPointF(w,<sp/>0),<sp/>pos),</highlight></codeline>
<codeline lineno="23075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>(center+QPointF(0,<sp/>-w),<sp/>center+QPointF(0,<sp/>w),<sp/>pos)));</highlight></codeline>
<codeline lineno="23076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500af562ec81ac3ba99e26ef8540cf1ec16f" kindref="member">tsCrosshair</ref>:</highlight></codeline>
<codeline lineno="23079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qSqrt(qMin(<ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>(QPointF(clip.left(),<sp/>center.y()),<sp/>QPointF(clip.right(),<sp/>center.y()),<sp/>pos),</highlight></codeline>
<codeline lineno="23081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>(QPointF(center.x(),<sp/>clip.top()),<sp/>QPointF(center.x(),<sp/>clip.bottom()),<sp/>pos)));</highlight></codeline>
<codeline lineno="23082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500ae2252c28f4842880d71e9f94e69de94e" kindref="member">tsCircle</ref>:</highlight></codeline>
<codeline lineno="23084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip.intersects(QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w)).toRect()))</highlight></codeline>
<codeline lineno="23086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>distance<sp/>to<sp/>border:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>centerDist<sp/>=<sp/>QVector2D(center-pos).length();</highlight></codeline>
<codeline lineno="23089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>circleLine<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="23090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>qAbs(centerDist-circleLine);</highlight></codeline>
<codeline lineno="23091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filled<sp/>ellipse,<sp/>allow<sp/>click<sp/>inside<sp/>to<sp/>count<sp/>as<sp/>hit:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" kindref="member">mBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" kindref="member">mBrush</ref>.color().alpha()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="23093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerDist<sp/>&lt;=<sp/>circleLine)</highlight></codeline>
<codeline lineno="23095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a7b738074c75e80070ef6a10263c6cd69" kindref="member">selectionTolerance</ref>()*0.99;</highlight></codeline>
<codeline lineno="23096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="23098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a4ed5f01f2c5fd86d980366d79f481b9b" kindref="member">tsSquare</ref>:</highlight></codeline>
<codeline lineno="23102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip.intersects(QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w)).toRect()))</highlight></codeline>
<codeline lineno="23104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>rect<sp/>=<sp/>QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w));</highlight></codeline>
<codeline lineno="23106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filledRect<sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" kindref="member">mBrush</ref>.style()<sp/>!=<sp/>Qt::NoBrush<sp/>&amp;&amp;<sp/><ref refid="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" kindref="member">mBrush</ref>.color().alpha()<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="23107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4c0e14c4e92df91174cb7183fb363069" kindref="member">rectSelectTest</ref>(rect,<sp/>pos,<sp/>filledRect);</highlight></codeline>
<codeline lineno="23108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="23113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23114"><highlight class="normal"></highlight></codeline>
<codeline lineno="23115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1aaaf49b48382c730ec9be0e74c2538315" kindref="member">QCPItemTracer::draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="23117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23118"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_tracer_1a5b90296109e36384aedbc8908a670413" kindref="member">updatePosition</ref>();</highlight></codeline>
<codeline lineno="23119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" kindref="member">tsNone</ref>)</highlight></codeline>
<codeline lineno="23120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23121"><highlight class="normal"></highlight></codeline>
<codeline lineno="23122"><highlight class="normal"><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" kindref="member">setPen</ref>(<ref refid="class_q_c_p_item_tracer_1af87132b7698d5bb35c96a8a0b9e7180e" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="23123"><highlight class="normal"><sp/><sp/>painter-&gt;setBrush(<ref refid="class_q_c_p_item_tracer_1aaf4e72e2d87f53279b9f9ba624961bf5" kindref="member">mainBrush</ref>());</highlight></codeline>
<codeline lineno="23124"><highlight class="normal"><sp/><sp/>QPointF<sp/>center(position-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>mSize/2.0;</highlight></codeline>
<codeline lineno="23126"><highlight class="normal"><sp/><sp/>QRect<sp/>clip<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>();</highlight></codeline>
<codeline lineno="23127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mStyle)</highlight></codeline>
<codeline lineno="23128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500aac27462c79146225bfa8fba24d2ee8a4" kindref="member">tsNone</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a3323fb04017146e4885e080a459472fa" kindref="member">tsPlus</ref>:</highlight></codeline>
<codeline lineno="23131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip.intersects(QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w)).toRect()))</highlight></codeline>
<codeline lineno="23133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(center+QPointF(-w,<sp/>0),<sp/>center+QPointF(w,<sp/>0)));</highlight></codeline>
<codeline lineno="23135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(center+QPointF(0,<sp/>-w),<sp/>center+QPointF(0,<sp/>w)));</highlight></codeline>
<codeline lineno="23136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500af562ec81ac3ba99e26ef8540cf1ec16f" kindref="member">tsCrosshair</ref>:</highlight></codeline>
<codeline lineno="23140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(center.y()<sp/>&gt;<sp/>clip.top()<sp/>&amp;&amp;<sp/>center.y()<sp/>&lt;<sp/>clip.bottom())</highlight></codeline>
<codeline lineno="23142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(clip.left(),<sp/>center.y(),<sp/>clip.right(),<sp/>center.y()));</highlight></codeline>
<codeline lineno="23143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(center.x()<sp/>&gt;<sp/>clip.left()<sp/>&amp;&amp;<sp/>center.x()<sp/>&lt;<sp/>clip.right())</highlight></codeline>
<codeline lineno="23144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;<ref refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" kindref="member">drawLine</ref>(QLineF(center.x(),<sp/>clip.top(),<sp/>center.x(),<sp/>clip.bottom()));</highlight></codeline>
<codeline lineno="23145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500ae2252c28f4842880d71e9f94e69de94e" kindref="member">tsCircle</ref>:</highlight></codeline>
<codeline lineno="23148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip.intersects(QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w)).toRect()))</highlight></codeline>
<codeline lineno="23150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(center,<sp/>w,<sp/>w);</highlight></codeline>
<codeline lineno="23151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a2f05ddb13978036f902ca3ab47076500a4ed5f01f2c5fd86d980366d79f481b9b" kindref="member">tsSquare</ref>:</highlight></codeline>
<codeline lineno="23154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip.intersects(QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w)).toRect()))</highlight></codeline>
<codeline lineno="23156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawRect(QRectF(center-QPointF(w,<sp/>w),<sp/>center+QPointF(w,<sp/>w)));</highlight></codeline>
<codeline lineno="23157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23161"><highlight class="normal"></highlight></codeline>
<codeline lineno="23174"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_tracer_1a5b90296109e36384aedbc8908a670413" kindref="member">QCPItemTracer::updatePosition</ref>()</highlight></codeline>
<codeline lineno="23175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>)</highlight></codeline>
<codeline lineno="23177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" kindref="member">mParentPlot</ref>-&gt;<ref refid="class_q_custom_plot_1a4fc28914e2ee91aab424b7ce46b6bdf1" kindref="member">hasPlottable</ref>(<ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>))</highlight></codeline>
<codeline lineno="23179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>-&gt;<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>()-&gt;size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="23181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>first<sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>-&gt;<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>()-&gt;constBegin();</highlight></codeline>
<codeline lineno="23183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>last<sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>-&gt;<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>()-&gt;constEnd()-1;</highlight></codeline>
<codeline lineno="23184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" kindref="member">mGraphKey</ref><sp/>&lt;<sp/>first.key())</highlight></codeline>
<codeline lineno="23185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setCoords(first.key(),<sp/>first.value().value);</highlight></codeline>
<codeline lineno="23186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" kindref="member">mGraphKey</ref><sp/>&gt;<sp/>last.key())</highlight></codeline>
<codeline lineno="23187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setCoords(last.key(),<sp/>last.value().value);</highlight></codeline>
<codeline lineno="23188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>-&gt;<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>()-&gt;lowerBound(<ref refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" kindref="member">mGraphKey</ref>);</highlight></codeline>
<codeline lineno="23191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>first)<sp/></highlight><highlight class="comment">//<sp/>mGraphKey<sp/>is<sp/>somewhere<sp/>between<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>prevIt<sp/>=<sp/>it-1;</highlight></codeline>
<codeline lineno="23194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_tracer_1afab37c22ad39f235921e86f93cd84595" kindref="member">mInterpolating</ref>)</highlight></codeline>
<codeline lineno="23195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpolate<sp/>between<sp/>iterators<sp/>around<sp/>mGraphKey:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!qFuzzyCompare((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)it.key(),<sp/>(double)prevIt.key()))</highlight></codeline>
<codeline lineno="23199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slope<sp/>=<sp/>(it.value().value-prevIt.value().value)/(it.key()-prevIt.key());</highlight></codeline>
<codeline lineno="23200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setCoords(<ref refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" kindref="member">mGraphKey</ref>,<sp/>(<ref refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" kindref="member">mGraphKey</ref>-prevIt.key())*slope+prevIt.value().value);</highlight></codeline>
<codeline lineno="23201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>iterator<sp/>with<sp/>key<sp/>closest<sp/>to<sp/>mGraphKey:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_tracer_1a8fa20f2e9ee07d21fd7c8d30ba4702ca" kindref="member">mGraphKey</ref><sp/>&lt;<sp/>(prevIt.key()+it.key())*0.5)</highlight></codeline>
<codeline lineno="23205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>prevIt;</highlight></codeline>
<codeline lineno="23206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setCoords(it.key(),<sp/>it.value().value);</highlight></codeline>
<codeline lineno="23207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>mGraphKey<sp/>is<sp/>exactly<sp/>on<sp/>first<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setCoords(it.key(),<sp/>it.value().value);</highlight></codeline>
<codeline lineno="23210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>-&gt;<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>()-&gt;size()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="23212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCPDataMap::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_q_c_p_item_tracer_1a2d70cf616b579563aa15f796dfc143ac" kindref="member">mGraph</ref>-&gt;<ref refid="class_q_c_p_graph_1a2f58436df4f86a2792b776a21642b3d9" kindref="member">data</ref>()-&gt;constBegin();</highlight></codeline>
<codeline lineno="23214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;setCoords(it.key(),<sp/>it.value().value);</highlight></codeline>
<codeline lineno="23215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;graph<sp/>has<sp/>no<sp/>data&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23217"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;graph<sp/>not<sp/>contained<sp/>in<sp/>QCustomPlot<sp/>instance<sp/>(anymore)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23221"><highlight class="normal"></highlight></codeline>
<codeline lineno="23227"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_tracer_1af87132b7698d5bb35c96a8a0b9e7180e" kindref="member">QCPItemTracer::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="23228"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_tracer_1a3f61829784200819661d1e2a5354d866" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_tracer_1a579e3bd6bd16d6aaff03638dc8a99a69" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="23230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23231"><highlight class="normal"></highlight></codeline>
<codeline lineno="23237"><highlight class="normal">QBrush<sp/><ref refid="class_q_c_p_item_tracer_1aaf4e72e2d87f53279b9f9ba624961bf5" kindref="member">QCPItemTracer::mainBrush</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="23238"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_tracer_1a1c15d2adde40efdcc0ef1ff78fd256a6" kindref="member">mSelectedBrush</ref><sp/>:<sp/><ref refid="class_q_c_p_item_tracer_1a6597be63a17a266233941354200b2340" kindref="member">mBrush</ref>;</highlight></codeline>
<codeline lineno="23240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23241"><highlight class="normal"></highlight></codeline>
<codeline lineno="23242"><highlight class="normal"></highlight></codeline>
<codeline lineno="23246"></codeline>
<codeline lineno="23272"><highlight class="normal"><ref refid="class_q_c_p_item_bracket_1a44ecfa37a76de5e3549e2d61f9d8ee56" kindref="member">QCPItemBracket::QCPItemBracket</ref>(<ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref><sp/>*parentPlot)<sp/>:</highlight></codeline>
<codeline lineno="23273"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_abstract_item" kindref="compound">QCPAbstractItem</ref>(parentPlot),</highlight></codeline>
<codeline lineno="23274"><highlight class="normal"><sp/><sp/>left(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="23275"><highlight class="normal"><sp/><sp/>right(createPosition(QLatin1String(</highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">))),</highlight></codeline>
<codeline lineno="23276"><highlight class="normal"><sp/><sp/>center(createAnchor(QLatin1String(</highlight><highlight class="stringliteral">&quot;center&quot;</highlight><highlight class="normal">),<sp/>aiCenter))</highlight></codeline>
<codeline lineno="23277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23278"><highlight class="normal"><sp/><sp/>left-&gt;setCoords(0,<sp/>0);</highlight></codeline>
<codeline lineno="23279"><highlight class="normal"><sp/><sp/>right-&gt;setCoords(1,<sp/>1);</highlight></codeline>
<codeline lineno="23280"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23281"><highlight class="normal"><sp/><sp/>setPen(QPen(Qt::black));</highlight></codeline>
<codeline lineno="23282"><highlight class="normal"><sp/><sp/>setSelectedPen(QPen(Qt::blue,<sp/>2));</highlight></codeline>
<codeline lineno="23283"><highlight class="normal"><sp/><sp/>setLength(8);</highlight></codeline>
<codeline lineno="23284"><highlight class="normal"><sp/><sp/>setStyle(bsCalligraphic);</highlight></codeline>
<codeline lineno="23285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23286"><highlight class="normal"></highlight></codeline>
<codeline lineno="23287"><highlight class="normal"><ref refid="class_q_c_p_item_bracket_1ad773c3e8e09868d6f8caeb92c54919f4" kindref="member">QCPItemBracket::~QCPItemBracket</ref>()</highlight></codeline>
<codeline lineno="23288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23290"><highlight class="normal"></highlight></codeline>
<codeline lineno="23300"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1ab13001d9cc5d8f9e56ea15bdda682acb" kindref="member">QCPItemBracket::setPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="23301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23302"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_bracket_1a350c864a5853b04343719f5a8be6b675" kindref="member">mPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_bracket_1a8963ff4a232b649c83d2461fd3c30d39" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="23303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23304"><highlight class="normal"></highlight></codeline>
<codeline lineno="23310"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a349785c31122778a520c64891fa204c5" kindref="member">QCPItemBracket::setSelectedPen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPen<sp/>&amp;pen)</highlight></codeline>
<codeline lineno="23311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23312"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_bracket_1adcfb53602d1802d00e2de4fd6df6b291" kindref="member">mSelectedPen</ref><sp/>=<sp/><ref refid="class_q_c_p_item_bracket_1a8963ff4a232b649c83d2461fd3c30d39" kindref="member">pen</ref>;</highlight></codeline>
<codeline lineno="23313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23314"><highlight class="normal"></highlight></codeline>
<codeline lineno="23323"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1ac7cfc3da7da9b5c5ac5dfbe4f0351b2a" kindref="member">QCPItemBracket::setLength</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="23324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23325"><highlight class="normal"><sp/><sp/><ref refid="class_q_c_p_item_bracket_1ab3d99bba8da18eb4d0e0cb23dded33b2" kindref="member">mLength</ref><sp/>=<sp/><ref refid="class_q_c_p_item_bracket_1aed5126eafcb1381ee5718499c20ba023" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="23326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23327"><highlight class="normal"></highlight></codeline>
<codeline lineno="23333"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a612dffa2373422eef8754d690add3703" kindref="member">QCPItemBracket::setStyle</ref>(<ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbd" kindref="member">QCPItemBracket::BracketStyle</ref><sp/>style)</highlight></codeline>
<codeline lineno="23334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23335"><highlight class="normal"><sp/><sp/>mStyle<sp/>=<sp/><ref refid="class_q_c_p_item_bracket_1afad726f453f70fe77c0e9c2f260fff97" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="23336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23337"><highlight class="normal"></highlight></codeline>
<codeline lineno="23338"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23339"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1aa6933caff1d42c54bcebc769ef88c798" kindref="member">QCPItemBracket::selectTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPointF<sp/>&amp;pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlySelectable,<sp/>QVariant<sp/>*details)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="23340"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23341"><highlight class="normal"><sp/><sp/>Q_UNUSED(details)</highlight></codeline>
<codeline lineno="23342"><highlight class="normal"><sp/><sp/>if<sp/>(onlySelectable<sp/>&amp;&amp;<sp/>!<ref refid="class_q_c_p_abstract_item_1ad81eb35c8726a0f458db9df9732e0e41" kindref="member">mSelectable</ref>)</highlight></codeline>
<codeline lineno="23343"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="23344"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23345"><highlight class="normal"><sp/><sp/>QVector2D<sp/>leftVec(left-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23346"><highlight class="normal"><sp/><sp/>QVector2D<sp/>rightVec(right-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23347"><highlight class="normal"><sp/><sp/>if<sp/>(leftVec.toPoint()<sp/>==<sp/>rightVec.toPoint())</highlight></codeline>
<codeline lineno="23348"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="23349"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23350"><highlight class="normal"><sp/><sp/>QVector2D<sp/>widthVec<sp/>=<sp/>(rightVec-leftVec)*0.5f;</highlight></codeline>
<codeline lineno="23351"><highlight class="normal"><sp/><sp/>QVector2D<sp/>lengthVec(-widthVec.y(),<sp/>widthVec.x());</highlight></codeline>
<codeline lineno="23352"><highlight class="normal"><sp/><sp/>lengthVec<sp/>=<sp/>lengthVec.normalized()*<ref refid="class_q_c_p_item_bracket_1ab3d99bba8da18eb4d0e0cb23dded33b2" kindref="member">mLength</ref>;</highlight></codeline>
<codeline lineno="23353"><highlight class="normal"><sp/><sp/>QVector2D<sp/>centerVec<sp/>=<sp/>(rightVec+leftVec)*0.5f-lengthVec;</highlight></codeline>
<codeline lineno="23354"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23355"><highlight class="normal"><sp/><sp/>return<sp/>qSqrt(<ref refid="class_q_c_p_abstract_item_1acdca343717d625b8abb3c3e38c0ed39d" kindref="member">distSqrToLine</ref>((centerVec-widthVec).toPointF(),<sp/>(centerVec+widthVec).toPointF(),<sp/>pos));</highlight></codeline>
<codeline lineno="23356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23357"><highlight class="normal"></highlight></codeline>
<codeline lineno="23358"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket" kindref="compound">QCPItemBracket</ref>::<ref refid="class_q_c_p_item_bracket_1a8343cf0559c64886add7aa7f4b22f1a6" kindref="member">draw</ref>(<ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref><sp/>*painter)</highlight></codeline>
<codeline lineno="23360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23361"><highlight class="normal"><sp/><sp/>QVector2D<sp/>leftVec(left-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23362"><highlight class="normal"><sp/><sp/>QVector2D<sp/>rightVec(right-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftVec.toPoint()<sp/>==<sp/>rightVec.toPoint())</highlight></codeline>
<codeline lineno="23364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23365"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23366"><highlight class="normal"><sp/><sp/>QVector2D<sp/>widthVec<sp/>=<sp/>(rightVec-leftVec)*0.5f;</highlight></codeline>
<codeline lineno="23367"><highlight class="normal"><sp/><sp/>QVector2D<sp/>lengthVec(-widthVec.y(),<sp/>widthVec.x());</highlight></codeline>
<codeline lineno="23368"><highlight class="normal"><sp/><sp/>lengthVec<sp/>=<sp/>lengthVec.normalized()*<ref refid="class_q_c_p_item_bracket_1ab3d99bba8da18eb4d0e0cb23dded33b2" kindref="member">mLength</ref>;</highlight></codeline>
<codeline lineno="23369"><highlight class="normal"><sp/><sp/>QVector2D<sp/>centerVec<sp/>=<sp/>(rightVec+leftVec)*0.5f-lengthVec;</highlight></codeline>
<codeline lineno="23370"><highlight class="normal"></highlight></codeline>
<codeline lineno="23371"><highlight class="normal"><sp/><sp/>QPolygon<sp/>boundingPoly;</highlight></codeline>
<codeline lineno="23372"><highlight class="normal"><sp/><sp/>boundingPoly<sp/>&lt;&lt;<sp/>leftVec.toPoint()<sp/>&lt;&lt;<sp/>rightVec.toPoint()</highlight></codeline>
<codeline lineno="23373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(rightVec-lengthVec).toPoint()<sp/>&lt;&lt;<sp/>(leftVec-lengthVec).toPoint();</highlight></codeline>
<codeline lineno="23374"><highlight class="normal"><sp/><sp/>QRect<sp/>clip<sp/>=<sp/><ref refid="class_q_c_p_abstract_item_1a538e25ff8856534582f5b2b400a46405" kindref="member">clipRect</ref>().adjusted(-<ref refid="class_q_c_p_item_bracket_1a8df4ad873bf88a4a7bfb9bbbd490e495" kindref="member">mainPen</ref>().widthF(),<sp/>-<ref refid="class_q_c_p_item_bracket_1a8df4ad873bf88a4a7bfb9bbbd490e495" kindref="member">mainPen</ref>().widthF(),<sp/><ref refid="class_q_c_p_item_bracket_1a8df4ad873bf88a4a7bfb9bbbd490e495" kindref="member">mainPen</ref>().widthF(),<sp/><ref refid="class_q_c_p_item_bracket_1a8df4ad873bf88a4a7bfb9bbbd490e495" kindref="member">mainPen</ref>().widthF());</highlight></codeline>
<codeline lineno="23375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip.intersects(boundingPoly.boundingRect()))</highlight></codeline>
<codeline lineno="23376"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23377"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(<ref refid="class_q_c_p_item_bracket_1a8df4ad873bf88a4a7bfb9bbbd490e495" kindref="member">mainPen</ref>());</highlight></codeline>
<codeline lineno="23378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mStyle)</highlight></codeline>
<codeline lineno="23379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda7f9df4a7359bfe3dac1dbe4ccf5d220c" kindref="member">bsSquare</ref>:</highlight></codeline>
<codeline lineno="23381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawLine((centerVec+widthVec).toPointF(),<sp/>(centerVec-widthVec).toPointF());</highlight></codeline>
<codeline lineno="23383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawLine((centerVec+widthVec).toPointF(),<sp/>(centerVec+widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawLine((centerVec-widthVec).toPointF(),<sp/>(centerVec-widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda394627b0830a26ee3e0a02ca67a9f918" kindref="member">bsRound</ref>:</highlight></codeline>
<codeline lineno="23388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="23390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainterPath<sp/>path;</highlight></codeline>
<codeline lineno="23391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.moveTo((centerVec+widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec+widthVec).toPointF(),<sp/>(centerVec+widthVec).toPointF(),<sp/>centerVec.toPointF());</highlight></codeline>
<codeline lineno="23393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec-widthVec).toPointF(),<sp/>(centerVec-widthVec).toPointF(),<sp/>(centerVec-widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPath(path);</highlight></codeline>
<codeline lineno="23395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda5024ce4023c2d8de4221f1cd4816acd8" kindref="member">bsCurly</ref>:</highlight></codeline>
<codeline lineno="23398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(Qt::NoBrush);</highlight></codeline>
<codeline lineno="23400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainterPath<sp/>path;</highlight></codeline>
<codeline lineno="23401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.moveTo((centerVec+widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec+widthVec-lengthVec*0.8f).toPointF(),<sp/>(centerVec+0.4f*widthVec+lengthVec).toPointF(),<sp/>centerVec.toPointF());</highlight></codeline>
<codeline lineno="23403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec-0.4f*widthVec+lengthVec).toPointF(),<sp/>(centerVec-widthVec-lengthVec*0.8f).toPointF(),<sp/>(centerVec-widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPath(path);</highlight></codeline>
<codeline lineno="23405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a7ac3afd0b24a607054e7212047d59dbda8f29f5ef754e2dc9a9efdedb2face0f3" kindref="member">bsCalligraphic</ref>:</highlight></codeline>
<codeline lineno="23408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setPen(Qt::NoPen);</highlight></codeline>
<codeline lineno="23410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setBrush(QBrush(<ref refid="class_q_c_p_item_bracket_1a8df4ad873bf88a4a7bfb9bbbd490e495" kindref="member">mainPen</ref>().color()));</highlight></codeline>
<codeline lineno="23411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainterPath<sp/>path;</highlight></codeline>
<codeline lineno="23412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.moveTo((centerVec+widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec+widthVec-lengthVec*0.8f).toPointF(),<sp/>(centerVec+0.4f*widthVec+0.8f*lengthVec).toPointF(),<sp/>centerVec.toPointF());</highlight></codeline>
<codeline lineno="23415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec-0.4f*widthVec+0.8f*lengthVec).toPointF(),<sp/>(centerVec-widthVec-lengthVec*0.8f).toPointF(),<sp/>(centerVec-widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec-widthVec-lengthVec*0.5f).toPointF(),<sp/>(centerVec-0.2f*widthVec+1.2f*lengthVec).toPointF(),<sp/>(centerVec+lengthVec*0.2f).toPointF());</highlight></codeline>
<codeline lineno="23418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.cubicTo((centerVec+0.2f*widthVec+1.2f*lengthVec).toPointF(),<sp/>(centerVec+widthVec-lengthVec*0.5f).toPointF(),<sp/>(centerVec+widthVec+lengthVec).toPointF());</highlight></codeline>
<codeline lineno="23419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawPath(path);</highlight></codeline>
<codeline lineno="23421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23426"><highlight class="normal"></highlight></codeline>
<codeline lineno="23427"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inherits<sp/>documentation<sp/>from<sp/>base<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23428"><highlight class="normal">QPointF<sp/><ref refid="class_q_c_p_item_bracket_1ac76827e3acba5faee81f149af4047a39" kindref="member">QCPItemBracket::anchorPixelPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>anchorId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="23429"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23430"><highlight class="normal"><sp/><sp/>QVector2D<sp/>leftVec(left-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23431"><highlight class="normal"><sp/><sp/>QVector2D<sp/>rightVec(right-&gt;pixelPoint());</highlight></codeline>
<codeline lineno="23432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftVec.toPoint()<sp/>==<sp/>rightVec.toPoint())</highlight></codeline>
<codeline lineno="23433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leftVec.toPointF();</highlight></codeline>
<codeline lineno="23434"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23435"><highlight class="normal"><sp/><sp/>QVector2D<sp/>widthVec<sp/>=<sp/>(rightVec-leftVec)*0.5f;</highlight></codeline>
<codeline lineno="23436"><highlight class="normal"><sp/><sp/>QVector2D<sp/>lengthVec(-widthVec.y(),<sp/>widthVec.x());</highlight></codeline>
<codeline lineno="23437"><highlight class="normal"><sp/><sp/>lengthVec<sp/>=<sp/>lengthVec.normalized()*<ref refid="class_q_c_p_item_bracket_1ab3d99bba8da18eb4d0e0cb23dded33b2" kindref="member">mLength</ref>;</highlight></codeline>
<codeline lineno="23438"><highlight class="normal"><sp/><sp/>QVector2D<sp/>centerVec<sp/>=<sp/>(rightVec+leftVec)*0.5f-lengthVec;</highlight></codeline>
<codeline lineno="23439"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(anchorId)</highlight></codeline>
<codeline lineno="23441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="23442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_item_bracket_1a7f3a6a56d67f71219ed220553f3dd861a17b57ef34cc05eadfe9becd1ad5b5242" kindref="member">aiCenter</ref>:</highlight></codeline>
<codeline lineno="23443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>centerVec.toPointF();</highlight></codeline>
<codeline lineno="23444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23445"><highlight class="normal"><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/>Q_FUNC_INFO<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>anchorId&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchorId;</highlight></codeline>
<codeline lineno="23446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPointF();</highlight></codeline>
<codeline lineno="23447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23448"><highlight class="normal"></highlight></codeline>
<codeline lineno="23454"><highlight class="normal">QPen<sp/><ref refid="class_q_c_p_item_bracket_1a8df4ad873bf88a4a7bfb9bbbd490e495" kindref="member">QCPItemBracket::mainPen</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="23455"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_q_c_p_abstract_item_1a4bdb3457dad1d268c0f78a44152b9645" kindref="member">mSelected</ref><sp/>?<sp/><ref refid="class_q_c_p_item_bracket_1adcfb53602d1802d00e2de4fd6df6b291" kindref="member">mSelectedPen</ref><sp/>:<sp/><ref refid="class_q_c_p_item_bracket_1a350c864a5853b04343719f5a8be6b675" kindref="member">mPen</ref>;</highlight></codeline>
<codeline lineno="23457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23458"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Roman/Documents/Mygs/GroundStation/GS/qcustomplot.cpp"/>
  </compounddef>
</doxygen>
